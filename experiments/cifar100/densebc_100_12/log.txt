[2019-08-26 17:48:05,646] - [train.py line:120] : {'architecture': 'densebc_100_12', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'densebc_100_12', 'num_classes': 100, 'dataset': 'cifar100', 'use_gpu': True, 'input_size': 32, 'epochs': 250, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2019-08-26 17:48:49,375] - [train.py line:120] : {'architecture': 'densebc_100_12', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'densebc_100_12', 'num_classes': 100, 'dataset': 'cifar100', 'use_gpu': True, 'input_size': 32, 'epochs': 250, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2019-08-26 17:48:49,401] - [train.py line:123] : DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition1): Sequential(
    (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(216, 108, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block2): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition2): Sequential(
    (0): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(300, 150, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block3): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition3): Sequential(
    (0): BatchNorm2d(342, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): AvgPool2d(kernel_size=8, stride=1, padding=0)
  )
  (fc): Linear(in_features=342, out_features=100, bias=True)
)
[2019-08-26 17:48:49,406] - [train.py line:124] : =====total parameters:362848
[2019-08-26 17:48:54,520] - [train.py line:151] : ==============trian-test-file-pathLcifar100
[2019-08-26 17:48:54,520] - [train.py line:152] :             =======  Training  =======

[2019-08-26 17:48:54,521] - [train.py line:36] : ====Epoch:[1/250]====
[2019-08-26 17:53:25,760] - [train.py line:120] : {'architecture': 'densebc_100_12', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'densebc_100_12', 'num_classes': 100, 'dataset': 'cifar100', 'use_gpu': True, 'input_size': 32, 'epochs': 250, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2019-08-26 17:53:25,781] - [train.py line:123] : DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition1): Sequential(
    (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(216, 108, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block2): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition2): Sequential(
    (0): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(300, 150, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block3): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition3): Sequential(
    (0): BatchNorm2d(342, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): AvgPool2d(kernel_size=8, stride=1, padding=0)
  )
  (fc): Linear(in_features=342, out_features=100, bias=True)
)
[2019-08-26 17:53:25,786] - [train.py line:124] : =====total parameters:362848
[2019-08-26 17:53:29,798] - [train.py line:151] : ==============trian-test-file-pathLcifar100
[2019-08-26 17:53:29,798] - [train.py line:152] :             =======  Training  =======

[2019-08-26 17:53:29,799] - [train.py line:36] : ====Epoch:[1/250]====
[2019-08-26 17:54:04,770] - [train.py line:120] : {'architecture': 'densebc_100_12', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'densebc_100_12', 'num_classes': 100, 'dataset': 'cifar100', 'use_gpu': True, 'input_size': 32, 'epochs': 250, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2019-08-26 17:54:04,792] - [train.py line:123] : DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(36, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(60, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(72, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(84, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition1): Sequential(
    (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(216, 108, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block2): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(216, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(228, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(240, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(252, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(264, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(276, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition2): Sequential(
    (0): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(300, 150, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block3): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(162, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(162, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(174, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(174, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(186, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(186, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(198, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(198, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(210, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(210, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(222, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(222, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(234, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(234, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(246, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(246, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(258, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(258, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(270, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(282, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(282, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(294, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(294, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(306, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(306, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(318, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(318, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(330, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(330, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition3): Sequential(
    (0): BatchNorm2d(342, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): AvgPool2d(kernel_size=8, stride=1, padding=0)
  )
  (fc): Linear(in_features=342, out_features=100, bias=True)
)
[2019-08-26 17:54:04,797] - [train.py line:124] : =====total parameters:578848
[2019-08-26 17:54:08,948] - [train.py line:151] : ==============trian-test-file-pathLcifar100
[2019-08-26 17:54:08,948] - [train.py line:152] :             =======  Training  =======

[2019-08-26 17:54:08,949] - [train.py line:36] : ====Epoch:[1/250]====
[2019-08-26 17:54:28,124] - [train.py line:61] :    == step: [100/391], train loss: 4.221 | train acc:  5.828% | lr: 0.100000
[2019-08-26 17:57:56,133] - [train.py line:120] : {'architecture': 'densebc_100_12', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'densebc_100_12', 'num_classes': 100, 'dataset': 'cifar100', 'use_gpu': True, 'input_size': 32, 'epochs': 250, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2019-08-26 17:57:56,156] - [train.py line:123] : DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(36, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(60, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(72, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(84, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition1): Sequential(
    (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(216, 108, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block2): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(216, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(228, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(240, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(252, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(264, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(276, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition2): Sequential(
    (0): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(300, 150, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block3): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(162, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(162, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(174, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(174, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(186, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(186, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(198, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(198, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(210, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(210, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(222, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(222, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(234, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(234, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(246, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(246, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(258, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(258, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(270, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(282, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(282, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(294, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(294, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(306, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(306, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(318, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(318, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(330, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(330, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition3): Sequential(
    (0): BatchNorm2d(342, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): AvgPool2d(kernel_size=8, stride=1, padding=0)
  )
  (fc): Linear(in_features=342, out_features=100, bias=True)
)
[2019-08-26 17:57:56,160] - [train.py line:124] : =====total parameters:578848
[2019-08-26 17:58:00,145] - [train.py line:151] : ==============trian-test-file-pathLcifar100
[2019-08-26 17:58:00,145] - [train.py line:152] :             =======  Training  =======

[2019-08-26 17:58:00,146] - [train.py line:36] : ====Epoch:[1/250]====
[2019-08-26 18:06:47,170] - [train.py line:120] : {'architecture': 'densebc_100_12', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'densebc_100_12', 'num_classes': 100, 'dataset': 'cifar100', 'use_gpu': True, 'input_size': 32, 'epochs': 300, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2019-08-26 18:06:47,193] - [train.py line:123] : DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(36, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(60, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(72, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(84, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition1): Sequential(
    (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(216, 108, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block2): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(216, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(228, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(240, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(252, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(264, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(276, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition2): Sequential(
    (0): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(300, 150, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block3): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(162, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(162, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(174, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(174, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(186, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(186, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(198, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(198, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(210, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(210, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(222, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(222, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(234, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(234, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(246, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(246, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(258, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(258, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(270, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(282, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(282, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(294, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(294, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(306, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(306, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(318, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(318, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(330, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(330, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition3): Sequential(
    (0): BatchNorm2d(342, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): AvgPool2d(kernel_size=8, stride=1, padding=0)
  )
  (fc): Linear(in_features=342, out_features=100, bias=True)
)
[2019-08-26 18:06:47,198] - [train.py line:124] : =====total parameters:578848
[2019-08-26 18:06:51,184] - [train.py line:151] : ==============trian-test-file-pathLcifar100
[2019-08-26 18:06:51,185] - [train.py line:152] :             =======  Training  =======

[2019-08-26 18:06:51,186] - [train.py line:36] : ====Epoch:[1/300]====
[2019-08-26 18:08:01,332] - [train.py line:120] : {'architecture': 'densebc_100_12', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'densebc_100_12', 'num_classes': 100, 'dataset': 'cifar100', 'use_gpu': True, 'input_size': 32, 'epochs': 300, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2019-08-26 18:08:01,357] - [train.py line:123] : DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(36, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(60, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(72, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(84, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition1): Sequential(
    (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(216, 108, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block2): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(216, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(228, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(240, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(252, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(264, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(276, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition2): Sequential(
    (0): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(300, 150, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block3): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(162, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(162, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(174, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(174, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(186, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(186, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(198, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(198, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(210, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(210, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(222, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(222, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(234, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(234, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(246, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(246, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(258, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(258, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(270, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(282, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(282, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(294, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(294, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(306, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(306, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(318, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(318, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(330, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(330, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition3): Sequential(
    (0): BatchNorm2d(342, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): AvgPool2d(kernel_size=8, stride=1, padding=0)
  )
  (fc): Linear(in_features=342, out_features=100, bias=True)
)
[2019-08-26 18:08:01,361] - [train.py line:124] : =====total parameters:578848
[2019-08-26 18:08:05,472] - [train.py line:151] : ==============trian-test-file-pathLcifar100
[2019-08-26 18:08:05,472] - [train.py line:152] :             =======  Training  =======

[2019-08-26 18:08:05,473] - [train.py line:36] : ====Epoch:[1/300]====
[2019-08-26 18:08:24,602] - [train.py line:61] :    == step: [100/391], train loss: 4.226 | train acc:  5.906% | lr: 0.100000
[2019-08-26 18:09:05,120] - [train.py line:120] : {'architecture': 'densebc_100_12', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'densebc_100_12', 'num_classes': 100, 'dataset': 'cifar100', 'use_gpu': True, 'input_size': 32, 'epochs': 300, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2019-08-26 18:09:05,143] - [train.py line:123] : DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(36, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(60, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(72, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(84, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition1): Sequential(
    (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(216, 108, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block2): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(216, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(228, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(240, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(252, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(264, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(276, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition2): Sequential(
    (0): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(300, 150, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block3): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(162, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(162, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(174, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(174, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(186, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(186, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(198, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(198, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(210, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(210, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(222, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(222, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(234, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(234, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(246, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(246, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(258, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(258, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(270, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(282, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(282, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(294, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(294, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(306, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(306, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(318, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(318, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(330, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(330, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
    )
  )
  (transition3): Sequential(
    (0): BatchNorm2d(342, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): AvgPool2d(kernel_size=8, stride=1, padding=0)
  )
  (fc): Linear(in_features=342, out_features=100, bias=True)
)
[2019-08-26 18:09:05,148] - [train.py line:124] : =====total parameters:578848
[2019-08-26 18:09:09,110] - [train.py line:151] : ==============trian-test-file-pathLcifar100
[2019-08-26 18:09:09,111] - [train.py line:152] :             =======  Training  =======

[2019-08-26 18:09:09,112] - [train.py line:36] : ====Epoch:[1/300]====
[2019-08-26 18:11:30,983] - [train.py line:120] : {'architecture': 'densebc_100_12', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'densebc_100_12', 'num_classes': 100, 'dataset': 'cifar100', 'use_gpu': True, 'input_size': 32, 'epochs': 300, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2019-08-26 18:11:31,006] - [train.py line:123] : DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(36, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(60, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(72, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(84, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (transition1): Sequential(
    (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(216, 108, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block2): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(216, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(228, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(240, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(252, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(264, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(276, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (transition2): Sequential(
    (0): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(300, 150, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block3): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(162, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(162, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(174, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(174, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(186, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(186, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(198, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(198, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(210, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(210, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(222, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(222, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(234, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(234, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(246, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(246, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(258, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(258, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(270, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(282, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(282, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(294, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(294, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(306, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(306, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(318, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(318, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(330, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(330, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (transition3): Sequential(
    (0): BatchNorm2d(342, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): AvgPool2d(kernel_size=8, stride=1, padding=0)
  )
  (fc): Linear(in_features=342, out_features=100, bias=True)
)
[2019-08-26 18:11:31,011] - [train.py line:124] : =====total parameters:800032
[2019-08-26 18:11:34,973] - [train.py line:151] : ==============trian-test-file-pathLcifar100
[2019-08-26 18:11:34,973] - [train.py line:152] :             =======  Training  =======

[2019-08-26 18:11:34,974] - [train.py line:36] : ====Epoch:[1/300]====
[2019-08-26 18:11:57,861] - [train.py line:61] :    == step: [100/391], train loss: 4.195 | train acc:  5.969% | lr: 0.100000
[2019-08-26 18:12:47,987] - [train.py line:120] : {'architecture': 'densebc_100_12', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'densebc_100_12', 'num_classes': 100, 'dataset': 'cifar100', 'use_gpu': True, 'input_size': 32, 'epochs': 300, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2019-08-26 18:12:48,011] - [train.py line:123] : DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(36, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(60, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(72, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(84, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (transition1): Sequential(
    (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(216, 108, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block2): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(216, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(228, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(240, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(252, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(264, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(276, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (transition2): Sequential(
    (0): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(300, 150, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block3): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(162, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(162, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(174, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(174, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(186, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(186, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(198, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(198, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(210, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(210, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(222, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(222, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(234, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(234, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(246, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(246, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(258, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(258, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(270, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(282, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(282, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(294, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(294, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(306, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(306, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(318, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(318, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(330, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(330, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (transition3): Sequential(
    (0): BatchNorm2d(342, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): AvgPool2d(kernel_size=8, stride=1, padding=0)
  )
  (fc): Linear(in_features=342, out_features=100, bias=True)
)
[2019-08-26 18:12:48,016] - [train.py line:124] : =====total parameters:800032
[2019-08-26 18:12:52,091] - [train.py line:151] : ==============trian-test-file-pathLcifar100
[2019-08-26 18:12:52,091] - [train.py line:152] :             =======  Training  =======

[2019-08-26 18:12:52,092] - [train.py line:36] : ====Epoch:[1/300]====
[2019-08-26 18:13:34,321] - [train.py line:120] : {'architecture': 'densebc_100_12', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'densebc_100_12', 'num_classes': 100, 'dataset': 'cifar100', 'use_gpu': True, 'input_size': 32, 'epochs': 300, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2019-08-26 18:13:34,345] - [train.py line:123] : DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(36, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(60, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(72, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(84, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (transition1): Sequential(
    (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(216, 108, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block2): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(216, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(228, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(240, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(252, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(264, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(276, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (transition2): Sequential(
    (0): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(300, 150, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block3): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(162, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(162, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(174, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(174, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(186, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(186, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(198, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(198, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(210, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(210, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(222, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(222, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(234, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(234, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(246, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(246, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(258, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(258, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(270, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(282, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(282, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(294, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(294, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(306, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(306, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(318, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(318, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(330, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(330, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (transition3): Sequential(
    (0): BatchNorm2d(342, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): AvgPool2d(kernel_size=8, stride=1, padding=0)
  )
  (fc): Linear(in_features=342, out_features=100, bias=True)
)
[2019-08-26 18:13:34,350] - [train.py line:124] : =====total parameters:800032
[2019-08-26 18:13:38,314] - [train.py line:151] : ==============trian-test-file-pathLcifar100
[2019-08-26 18:13:38,314] - [train.py line:152] :             =======  Training  =======

[2019-08-26 18:13:38,316] - [train.py line:36] : ====Epoch:[1/300]====
[2019-08-26 18:14:01,088] - [train.py line:61] :    == step: [100/391], train loss: 4.204 | train acc:  5.938% | lr: 0.100000
[2019-08-26 18:14:22,163] - [train.py line:61] :    == step: [200/391], train loss: 4.028 | train acc:  8.051% | lr: 0.100000
[2019-08-26 18:14:43,211] - [train.py line:61] :    == step: [300/391], train loss: 3.899 | train acc:  9.836% | lr: 0.100000
[2019-08-26 18:15:03,385] - [train.py line:64] :    == cost time: 85.0703s
[2019-08-26 18:15:03,387] - [train.py line:80] : ======validate =====
[2019-08-26 18:15:08,442] - [train.py line:91] : corret:1592total10000
[2019-08-26 18:15:08,442] - [train.py line:93] :    == test loss: 3.468 | test acc: 15.920%
[2019-08-26 18:15:08,482] - [train.py line:36] : ====Epoch:[2/300]====
[2019-08-26 18:15:29,797] - [train.py line:61] :    == step: [100/391], train loss: 3.244 | train acc: 19.992% | lr: 0.100000
[2019-08-26 18:15:51,025] - [train.py line:61] :    == step: [200/391], train loss: 3.156 | train acc: 21.367% | lr: 0.100000
[2019-08-26 18:16:12,234] - [train.py line:61] :    == step: [300/391], train loss: 3.071 | train acc: 22.815% | lr: 0.100000
[2019-08-26 18:16:31,535] - [train.py line:64] :    == cost time: 83.0543s
[2019-08-26 18:16:31,537] - [train.py line:80] : ======validate =====
[2019-08-26 18:16:36,158] - [train.py line:91] : corret:2867total10000
[2019-08-26 18:16:36,159] - [train.py line:93] :    == test loss: 2.793 | test acc: 28.670%
[2019-08-26 18:16:36,221] - [train.py line:36] : ====Epoch:[3/300]====
[2019-08-26 18:16:57,624] - [train.py line:61] :    == step: [100/391], train loss: 2.549 | train acc: 32.891% | lr: 0.100000
[2019-08-26 18:17:18,851] - [train.py line:61] :    == step: [200/391], train loss: 2.513 | train acc: 33.734% | lr: 0.100000
[2019-08-26 18:17:40,144] - [train.py line:61] :    == step: [300/391], train loss: 2.476 | train acc: 34.458% | lr: 0.100000
[2019-08-26 18:17:59,352] - [train.py line:64] :    == cost time: 83.1319s
[2019-08-26 18:17:59,354] - [train.py line:36] : ====Epoch:[4/300]====
[2019-08-26 18:18:20,706] - [train.py line:61] :    == step: [100/391], train loss: 2.181 | train acc: 41.336% | lr: 0.100000
[2019-08-26 18:18:41,939] - [train.py line:61] :    == step: [200/391], train loss: 2.152 | train acc: 41.762% | lr: 0.100000
[2019-08-26 18:19:03,410] - [train.py line:61] :    == step: [300/391], train loss: 2.128 | train acc: 42.312% | lr: 0.100000
[2019-08-26 18:19:22,826] - [train.py line:64] :    == cost time: 83.4731s
[2019-08-26 18:19:22,828] - [train.py line:80] : ======validate =====
[2019-08-26 18:19:27,388] - [train.py line:91] : corret:3869total10000
[2019-08-26 18:19:27,388] - [train.py line:93] :    == test loss: 2.350 | test acc: 38.690%
[2019-08-26 18:19:27,450] - [train.py line:36] : ====Epoch:[5/300]====
[2019-08-26 18:19:48,862] - [train.py line:61] :    == step: [100/391], train loss: 1.932 | train acc: 47.000% | lr: 0.100000
[2019-08-26 18:20:10,085] - [train.py line:61] :    == step: [200/391], train loss: 1.932 | train acc: 46.781% | lr: 0.100000
[2019-08-26 18:20:31,385] - [train.py line:61] :    == step: [300/391], train loss: 1.920 | train acc: 47.065% | lr: 0.100000
[2019-08-26 18:20:50,779] - [train.py line:64] :    == cost time: 83.3303s
[2019-08-26 18:20:50,781] - [train.py line:36] : ====Epoch:[6/300]====
[2019-08-26 18:21:12,197] - [train.py line:61] :    == step: [100/391], train loss: 1.776 | train acc: 50.008% | lr: 0.100000
[2019-08-26 18:21:33,586] - [train.py line:61] :    == step: [200/391], train loss: 1.776 | train acc: 50.090% | lr: 0.100000
[2019-08-26 18:21:54,835] - [train.py line:61] :    == step: [300/391], train loss: 1.773 | train acc: 50.167% | lr: 0.100000
[2019-08-26 18:22:14,279] - [train.py line:64] :    == cost time: 83.4990s
[2019-08-26 18:22:14,281] - [train.py line:80] : ======validate =====
[2019-08-26 18:22:18,949] - [train.py line:91] : corret:4590total10000
[2019-08-26 18:22:18,949] - [train.py line:93] :    == test loss: 1.995 | test acc: 45.900%
[2019-08-26 18:22:19,015] - [train.py line:36] : ====Epoch:[7/300]====
[2019-08-26 18:22:40,730] - [train.py line:61] :    == step: [100/391], train loss: 1.685 | train acc: 52.625% | lr: 0.100000
[2019-08-26 18:23:02,186] - [train.py line:61] :    == step: [200/391], train loss: 1.670 | train acc: 53.180% | lr: 0.100000
[2019-08-26 18:23:23,772] - [train.py line:61] :    == step: [300/391], train loss: 1.668 | train acc: 53.250% | lr: 0.100000
[2019-08-26 18:23:43,313] - [train.py line:64] :    == cost time: 84.2997s
[2019-08-26 18:23:43,315] - [train.py line:36] : ====Epoch:[8/300]====
[2019-08-26 18:24:04,990] - [train.py line:61] :    == step: [100/391], train loss: 1.578 | train acc: 55.203% | lr: 0.100000
[2019-08-26 18:24:26,618] - [train.py line:61] :    == step: [200/391], train loss: 1.591 | train acc: 54.820% | lr: 0.100000
[2019-08-26 18:24:48,133] - [train.py line:61] :    == step: [300/391], train loss: 1.593 | train acc: 54.961% | lr: 0.100000
[2019-08-26 18:25:07,680] - [train.py line:64] :    == cost time: 84.3659s
[2019-08-26 18:25:07,682] - [train.py line:80] : ======validate =====
[2019-08-26 18:25:12,321] - [train.py line:91] : corret:4937total10000
[2019-08-26 18:25:12,322] - [train.py line:93] :    == test loss: 1.839 | test acc: 49.370%
[2019-08-26 18:25:12,378] - [train.py line:36] : ====Epoch:[9/300]====
[2019-08-26 18:25:33,918] - [train.py line:61] :    == step: [100/391], train loss: 1.527 | train acc: 56.852% | lr: 0.100000
[2019-08-26 18:25:55,314] - [train.py line:61] :    == step: [200/391], train loss: 1.519 | train acc: 56.883% | lr: 0.100000
[2019-08-26 18:26:16,683] - [train.py line:61] :    == step: [300/391], train loss: 1.528 | train acc: 56.578% | lr: 0.100000
[2019-08-26 18:26:36,107] - [train.py line:64] :    == cost time: 83.7294s
[2019-08-26 18:26:36,109] - [train.py line:36] : ====Epoch:[10/300]====
[2019-08-26 18:26:57,689] - [train.py line:61] :    == step: [100/391], train loss: 1.455 | train acc: 58.758% | lr: 0.100000
[2019-08-26 18:27:19,078] - [train.py line:61] :    == step: [200/391], train loss: 1.467 | train acc: 58.281% | lr: 0.100000
[2019-08-26 18:27:40,639] - [train.py line:61] :    == step: [300/391], train loss: 1.477 | train acc: 57.997% | lr: 0.100000
[2019-08-26 18:28:00,129] - [train.py line:64] :    == cost time: 84.0216s
[2019-08-26 18:28:00,131] - [train.py line:80] : ======validate =====
[2019-08-26 18:28:04,735] - [train.py line:91] : corret:4992total10000
[2019-08-26 18:28:04,735] - [train.py line:93] :    == test loss: 1.837 | test acc: 49.920%
[2019-08-26 18:28:04,798] - [train.py line:36] : ====Epoch:[11/300]====
[2019-08-26 18:28:26,298] - [train.py line:61] :    == step: [100/391], train loss: 1.460 | train acc: 58.594% | lr: 0.100000
[2019-08-26 18:28:47,694] - [train.py line:61] :    == step: [200/391], train loss: 1.461 | train acc: 58.496% | lr: 0.100000
[2019-08-26 18:29:08,925] - [train.py line:61] :    == step: [300/391], train loss: 1.462 | train acc: 58.333% | lr: 0.100000
[2019-08-26 18:29:28,319] - [train.py line:64] :    == cost time: 83.5226s
[2019-08-26 18:29:28,321] - [train.py line:36] : ====Epoch:[12/300]====
[2019-08-26 18:29:49,818] - [train.py line:61] :    == step: [100/391], train loss: 1.386 | train acc: 60.234% | lr: 0.100000
[2019-08-26 18:30:11,295] - [train.py line:61] :    == step: [200/391], train loss: 1.404 | train acc: 59.738% | lr: 0.100000
[2019-08-26 18:30:32,639] - [train.py line:61] :    == step: [300/391], train loss: 1.413 | train acc: 59.578% | lr: 0.100000
[2019-08-26 18:30:52,143] - [train.py line:64] :    == cost time: 83.8230s
[2019-08-26 18:30:52,145] - [train.py line:80] : ======validate =====
[2019-08-26 18:30:56,821] - [train.py line:91] : corret:5002total10000
[2019-08-26 18:30:56,821] - [train.py line:93] :    == test loss: 1.867 | test acc: 50.020%
[2019-08-26 18:30:56,883] - [train.py line:36] : ====Epoch:[13/300]====
[2019-08-26 18:31:18,553] - [train.py line:61] :    == step: [100/391], train loss: 1.342 | train acc: 61.914% | lr: 0.100000
[2019-08-26 18:31:40,164] - [train.py line:61] :    == step: [200/391], train loss: 1.367 | train acc: 61.086% | lr: 0.100000
[2019-08-26 18:32:01,592] - [train.py line:61] :    == step: [300/391], train loss: 1.383 | train acc: 60.482% | lr: 0.100000
[2019-08-26 18:32:21,107] - [train.py line:64] :    == cost time: 84.2245s
[2019-08-26 18:32:21,110] - [train.py line:36] : ====Epoch:[14/300]====
[2019-08-26 18:32:42,485] - [train.py line:61] :    == step: [100/391], train loss: 1.332 | train acc: 61.484% | lr: 0.100000
[2019-08-26 18:33:03,931] - [train.py line:61] :    == step: [200/391], train loss: 1.342 | train acc: 61.766% | lr: 0.100000
[2019-08-26 18:33:25,246] - [train.py line:61] :    == step: [300/391], train loss: 1.350 | train acc: 61.628% | lr: 0.100000
[2019-08-26 18:33:44,533] - [train.py line:64] :    == cost time: 83.4246s
[2019-08-26 18:33:44,535] - [train.py line:80] : ======validate =====
[2019-08-26 18:33:49,117] - [train.py line:91] : corret:4958total10000
[2019-08-26 18:33:49,117] - [train.py line:93] :    == test loss: 1.878 | test acc: 49.580%
[2019-08-26 18:33:49,152] - [train.py line:36] : ====Epoch:[15/300]====
[2019-08-26 18:34:10,671] - [train.py line:61] :    == step: [100/391], train loss: 1.297 | train acc: 62.883% | lr: 0.100000
[2019-08-26 18:34:32,011] - [train.py line:61] :    == step: [200/391], train loss: 1.317 | train acc: 62.410% | lr: 0.100000
[2019-08-26 18:34:53,316] - [train.py line:61] :    == step: [300/391], train loss: 1.327 | train acc: 62.089% | lr: 0.100000
[2019-08-26 18:35:12,708] - [train.py line:64] :    == cost time: 83.5573s
[2019-08-26 18:35:12,710] - [train.py line:36] : ====Epoch:[16/300]====
[2019-08-26 18:35:34,168] - [train.py line:61] :    == step: [100/391], train loss: 1.278 | train acc: 63.180% | lr: 0.100000
[2019-08-26 18:35:55,771] - [train.py line:61] :    == step: [200/391], train loss: 1.292 | train acc: 62.727% | lr: 0.100000
[2019-08-26 18:36:17,120] - [train.py line:61] :    == step: [300/391], train loss: 1.308 | train acc: 62.362% | lr: 0.100000
[2019-08-26 18:36:36,431] - [train.py line:64] :    == cost time: 83.7217s
[2019-08-26 18:36:36,433] - [train.py line:80] : ======validate =====
[2019-08-26 18:36:41,015] - [train.py line:91] : corret:5246total10000
[2019-08-26 18:36:41,016] - [train.py line:93] :    == test loss: 1.735 | test acc: 52.460%
[2019-08-26 18:36:41,082] - [train.py line:36] : ====Epoch:[17/300]====
[2019-08-26 18:37:02,539] - [train.py line:61] :    == step: [100/391], train loss: 1.277 | train acc: 62.828% | lr: 0.100000
[2019-08-26 18:37:23,870] - [train.py line:61] :    == step: [200/391], train loss: 1.280 | train acc: 62.910% | lr: 0.100000
[2019-08-26 18:37:45,169] - [train.py line:61] :    == step: [300/391], train loss: 1.295 | train acc: 62.625% | lr: 0.100000
[2019-08-26 18:38:04,417] - [train.py line:64] :    == cost time: 83.3355s
[2019-08-26 18:38:04,419] - [train.py line:36] : ====Epoch:[18/300]====
[2019-08-26 18:38:25,779] - [train.py line:61] :    == step: [100/391], train loss: 1.246 | train acc: 64.305% | lr: 0.100000
[2019-08-26 18:38:47,128] - [train.py line:61] :    == step: [200/391], train loss: 1.261 | train acc: 63.547% | lr: 0.100000
[2019-08-26 18:39:08,446] - [train.py line:61] :    == step: [300/391], train loss: 1.271 | train acc: 63.227% | lr: 0.100000
[2019-08-26 18:39:27,756] - [train.py line:64] :    == cost time: 83.3388s
[2019-08-26 18:39:27,759] - [train.py line:80] : ======validate =====
[2019-08-26 18:39:32,346] - [train.py line:91] : corret:5485total10000
[2019-08-26 18:39:32,347] - [train.py line:93] :    == test loss: 1.683 | test acc: 54.850%
[2019-08-26 18:39:32,411] - [train.py line:36] : ====Epoch:[19/300]====
[2019-08-26 18:39:53,736] - [train.py line:61] :    == step: [100/391], train loss: 1.215 | train acc: 64.820% | lr: 0.100000
[2019-08-26 18:40:15,026] - [train.py line:61] :    == step: [200/391], train loss: 1.242 | train acc: 64.145% | lr: 0.100000
[2019-08-26 18:40:36,342] - [train.py line:61] :    == step: [300/391], train loss: 1.259 | train acc: 63.693% | lr: 0.100000
[2019-08-26 18:40:55,735] - [train.py line:64] :    == cost time: 83.3251s
[2019-08-26 18:40:55,737] - [train.py line:36] : ====Epoch:[20/300]====
[2019-08-26 18:41:17,169] - [train.py line:61] :    == step: [100/391], train loss: 1.200 | train acc: 65.219% | lr: 0.100000
[2019-08-26 18:41:38,416] - [train.py line:61] :    == step: [200/391], train loss: 1.223 | train acc: 64.590% | lr: 0.100000
[2019-08-26 18:41:59,921] - [train.py line:61] :    == step: [300/391], train loss: 1.225 | train acc: 64.440% | lr: 0.100000
[2019-08-26 18:42:19,218] - [train.py line:64] :    == cost time: 83.4826s
[2019-08-26 18:42:19,220] - [train.py line:80] : ======validate =====
[2019-08-26 18:42:24,008] - [train.py line:91] : corret:5415total10000
[2019-08-26 18:42:24,009] - [train.py line:93] :    == test loss: 1.683 | test acc: 54.150%
[2019-08-26 18:42:24,054] - [train.py line:36] : ====Epoch:[21/300]====
[2019-08-26 18:42:45,369] - [train.py line:61] :    == step: [100/391], train loss: 1.180 | train acc: 65.812% | lr: 0.100000
[2019-08-26 18:43:06,671] - [train.py line:61] :    == step: [200/391], train loss: 1.211 | train acc: 65.156% | lr: 0.100000
[2019-08-26 18:43:27,986] - [train.py line:61] :    == step: [300/391], train loss: 1.227 | train acc: 64.719% | lr: 0.100000
[2019-08-26 18:43:47,395] - [train.py line:64] :    == cost time: 83.3425s
[2019-08-26 18:43:47,397] - [train.py line:36] : ====Epoch:[22/300]====
[2019-08-26 18:44:08,802] - [train.py line:61] :    == step: [100/391], train loss: 1.169 | train acc: 66.109% | lr: 0.100000
[2019-08-26 18:44:30,115] - [train.py line:61] :    == step: [200/391], train loss: 1.202 | train acc: 65.211% | lr: 0.100000
[2019-08-26 18:44:51,434] - [train.py line:61] :    == step: [300/391], train loss: 1.224 | train acc: 64.648% | lr: 0.100000
[2019-08-26 18:45:10,863] - [train.py line:64] :    == cost time: 83.4665s
[2019-08-26 18:45:10,864] - [train.py line:80] : ======validate =====
[2019-08-26 18:45:15,490] - [train.py line:91] : corret:5391total10000
[2019-08-26 18:45:15,490] - [train.py line:93] :    == test loss: 1.671 | test acc: 53.910%
[2019-08-26 18:45:15,564] - [train.py line:36] : ====Epoch:[23/300]====
[2019-08-26 18:45:37,005] - [train.py line:61] :    == step: [100/391], train loss: 1.157 | train acc: 66.445% | lr: 0.100000
[2019-08-26 18:45:58,339] - [train.py line:61] :    == step: [200/391], train loss: 1.189 | train acc: 65.438% | lr: 0.100000
[2019-08-26 18:46:19,691] - [train.py line:61] :    == step: [300/391], train loss: 1.205 | train acc: 65.198% | lr: 0.100000
[2019-08-26 18:46:38,987] - [train.py line:64] :    == cost time: 83.4263s
[2019-08-26 18:46:38,989] - [train.py line:36] : ====Epoch:[24/300]====
[2019-08-26 18:47:00,341] - [train.py line:61] :    == step: [100/391], train loss: 1.172 | train acc: 66.320% | lr: 0.100000
[2019-08-26 18:47:21,563] - [train.py line:61] :    == step: [200/391], train loss: 1.182 | train acc: 65.809% | lr: 0.100000
[2019-08-26 18:47:42,923] - [train.py line:61] :    == step: [300/391], train loss: 1.195 | train acc: 65.576% | lr: 0.100000
[2019-08-26 18:48:02,263] - [train.py line:64] :    == cost time: 83.2750s
[2019-08-26 18:48:02,265] - [train.py line:80] : ======validate =====
[2019-08-26 18:48:06,880] - [train.py line:91] : corret:5355total10000
[2019-08-26 18:48:06,881] - [train.py line:93] :    == test loss: 1.746 | test acc: 53.550%
[2019-08-26 18:48:06,920] - [train.py line:36] : ====Epoch:[25/300]====
[2019-08-26 18:48:28,502] - [train.py line:61] :    == step: [100/391], train loss: 1.155 | train acc: 66.688% | lr: 0.100000
[2019-08-26 18:48:49,912] - [train.py line:61] :    == step: [200/391], train loss: 1.170 | train acc: 66.207% | lr: 0.100000
[2019-08-26 18:49:11,245] - [train.py line:61] :    == step: [300/391], train loss: 1.186 | train acc: 65.732% | lr: 0.100000
[2019-08-26 18:49:30,687] - [train.py line:64] :    == cost time: 83.7682s
[2019-08-26 18:49:30,689] - [train.py line:36] : ====Epoch:[26/300]====
[2019-08-26 18:49:52,273] - [train.py line:61] :    == step: [100/391], train loss: 1.153 | train acc: 66.000% | lr: 0.100000
[2019-08-26 18:50:13,666] - [train.py line:61] :    == step: [200/391], train loss: 1.169 | train acc: 65.867% | lr: 0.100000
[2019-08-26 18:50:35,131] - [train.py line:61] :    == step: [300/391], train loss: 1.188 | train acc: 65.419% | lr: 0.100000
[2019-08-26 18:50:54,447] - [train.py line:64] :    == cost time: 83.7596s
[2019-08-26 18:50:54,449] - [train.py line:80] : ======validate =====
[2019-08-26 18:50:59,024] - [train.py line:91] : corret:5679total10000
[2019-08-26 18:50:59,025] - [train.py line:93] :    == test loss: 1.541 | test acc: 56.790%
[2019-08-26 18:50:59,090] - [train.py line:36] : ====Epoch:[27/300]====
[2019-08-26 18:51:20,550] - [train.py line:61] :    == step: [100/391], train loss: 1.116 | train acc: 67.688% | lr: 0.100000
[2019-08-26 18:51:41,761] - [train.py line:61] :    == step: [200/391], train loss: 1.152 | train acc: 66.508% | lr: 0.100000
[2019-08-26 18:52:03,046] - [train.py line:61] :    == step: [300/391], train loss: 1.178 | train acc: 65.927% | lr: 0.100000
[2019-08-26 18:52:22,386] - [train.py line:64] :    == cost time: 83.2975s
[2019-08-26 18:52:22,388] - [train.py line:36] : ====Epoch:[28/300]====
[2019-08-26 18:52:43,909] - [train.py line:61] :    == step: [100/391], train loss: 1.145 | train acc: 66.234% | lr: 0.100000
[2019-08-26 18:53:05,188] - [train.py line:61] :    == step: [200/391], train loss: 1.159 | train acc: 66.348% | lr: 0.100000
[2019-08-26 18:53:26,393] - [train.py line:61] :    == step: [300/391], train loss: 1.173 | train acc: 66.042% | lr: 0.100000
[2019-08-26 18:53:45,697] - [train.py line:64] :    == cost time: 83.3097s
[2019-08-26 18:53:45,699] - [train.py line:80] : ======validate =====
[2019-08-26 18:53:50,290] - [train.py line:91] : corret:5752total10000
[2019-08-26 18:53:50,290] - [train.py line:93] :    == test loss: 1.553 | test acc: 57.520%
[2019-08-26 18:53:50,352] - [train.py line:36] : ====Epoch:[29/300]====
[2019-08-26 18:54:11,830] - [train.py line:61] :    == step: [100/391], train loss: 1.102 | train acc: 68.227% | lr: 0.100000
[2019-08-26 18:54:33,127] - [train.py line:61] :    == step: [200/391], train loss: 1.140 | train acc: 67.262% | lr: 0.100000
[2019-08-26 18:54:54,435] - [train.py line:61] :    == step: [300/391], train loss: 1.156 | train acc: 66.740% | lr: 0.100000
[2019-08-26 18:55:13,767] - [train.py line:64] :    == cost time: 83.4157s
[2019-08-26 18:55:13,769] - [train.py line:36] : ====Epoch:[30/300]====
[2019-08-26 18:55:35,131] - [train.py line:61] :    == step: [100/391], train loss: 1.108 | train acc: 67.695% | lr: 0.100000
[2019-08-26 18:55:56,432] - [train.py line:61] :    == step: [200/391], train loss: 1.135 | train acc: 67.105% | lr: 0.100000
[2019-08-26 18:56:17,774] - [train.py line:61] :    == step: [300/391], train loss: 1.153 | train acc: 66.576% | lr: 0.100000
[2019-08-26 18:56:37,224] - [train.py line:64] :    == cost time: 83.4561s
[2019-08-26 18:56:37,226] - [train.py line:80] : ======validate =====
[2019-08-26 18:56:41,830] - [train.py line:91] : corret:5678total10000
[2019-08-26 18:56:41,830] - [train.py line:93] :    == test loss: 1.573 | test acc: 56.780%
[2019-08-26 18:56:41,879] - [train.py line:36] : ====Epoch:[31/300]====
[2019-08-26 18:57:03,377] - [train.py line:61] :    == step: [100/391], train loss: 1.115 | train acc: 67.500% | lr: 0.100000
[2019-08-26 18:57:24,710] - [train.py line:61] :    == step: [200/391], train loss: 1.146 | train acc: 66.836% | lr: 0.100000
[2019-08-26 18:57:46,011] - [train.py line:61] :    == step: [300/391], train loss: 1.151 | train acc: 66.727% | lr: 0.100000
[2019-08-26 18:58:05,391] - [train.py line:64] :    == cost time: 83.5155s
[2019-08-26 18:58:05,393] - [train.py line:36] : ====Epoch:[32/300]====
[2019-08-26 18:58:26,901] - [train.py line:61] :    == step: [100/391], train loss: 1.105 | train acc: 68.062% | lr: 0.100000
[2019-08-26 18:58:48,229] - [train.py line:61] :    == step: [200/391], train loss: 1.120 | train acc: 67.562% | lr: 0.100000
[2019-08-26 18:59:09,605] - [train.py line:61] :    == step: [300/391], train loss: 1.140 | train acc: 67.034% | lr: 0.100000
[2019-08-26 18:59:28,918] - [train.py line:64] :    == cost time: 83.5257s
[2019-08-26 18:59:28,920] - [train.py line:80] : ======validate =====
[2019-08-26 18:59:33,569] - [train.py line:91] : corret:5661total10000
[2019-08-26 18:59:33,569] - [train.py line:93] :    == test loss: 1.572 | test acc: 56.610%
[2019-08-26 18:59:33,618] - [train.py line:36] : ====Epoch:[33/300]====
[2019-08-26 18:59:55,116] - [train.py line:61] :    == step: [100/391], train loss: 1.114 | train acc: 67.781% | lr: 0.100000
[2019-08-26 19:00:16,480] - [train.py line:61] :    == step: [200/391], train loss: 1.124 | train acc: 67.309% | lr: 0.100000
[2019-08-26 19:00:37,859] - [train.py line:61] :    == step: [300/391], train loss: 1.141 | train acc: 66.807% | lr: 0.100000
[2019-08-26 19:00:57,405] - [train.py line:64] :    == cost time: 83.7898s
[2019-08-26 19:00:57,407] - [train.py line:36] : ====Epoch:[34/300]====
[2019-08-26 19:01:19,141] - [train.py line:61] :    == step: [100/391], train loss: 1.090 | train acc: 67.922% | lr: 0.100000
[2019-08-26 19:01:40,803] - [train.py line:61] :    == step: [200/391], train loss: 1.104 | train acc: 67.773% | lr: 0.100000
[2019-08-26 19:02:02,395] - [train.py line:61] :    == step: [300/391], train loss: 1.128 | train acc: 67.294% | lr: 0.100000
[2019-08-26 19:02:22,022] - [train.py line:64] :    == cost time: 84.6167s
[2019-08-26 19:02:22,024] - [train.py line:80] : ======validate =====
[2019-08-26 19:02:26,686] - [train.py line:91] : corret:5522total10000
[2019-08-26 19:02:26,686] - [train.py line:93] :    == test loss: 1.649 | test acc: 55.220%
[2019-08-26 19:02:26,733] - [train.py line:36] : ====Epoch:[35/300]====
[2019-08-26 19:02:48,544] - [train.py line:61] :    == step: [100/391], train loss: 1.108 | train acc: 67.602% | lr: 0.100000
[2019-08-26 19:03:10,157] - [train.py line:61] :    == step: [200/391], train loss: 1.123 | train acc: 67.328% | lr: 0.100000
[2019-08-26 19:03:31,767] - [train.py line:61] :    == step: [300/391], train loss: 1.132 | train acc: 67.219% | lr: 0.100000
[2019-08-26 19:03:51,386] - [train.py line:64] :    == cost time: 84.6552s
[2019-08-26 19:03:51,388] - [train.py line:36] : ====Epoch:[36/300]====
[2019-08-26 19:04:12,961] - [train.py line:61] :    == step: [100/391], train loss: 1.075 | train acc: 68.359% | lr: 0.100000
[2019-08-26 19:04:34,415] - [train.py line:61] :    == step: [200/391], train loss: 1.118 | train acc: 67.172% | lr: 0.100000
[2019-08-26 19:04:55,997] - [train.py line:61] :    == step: [300/391], train loss: 1.131 | train acc: 66.880% | lr: 0.100000
[2019-08-26 19:05:15,364] - [train.py line:64] :    == cost time: 83.9772s
[2019-08-26 19:05:15,366] - [train.py line:80] : ======validate =====
[2019-08-26 19:05:19,939] - [train.py line:91] : corret:5626total10000
[2019-08-26 19:05:19,939] - [train.py line:93] :    == test loss: 1.582 | test acc: 56.260%
[2019-08-26 19:05:19,990] - [train.py line:36] : ====Epoch:[37/300]====
[2019-08-26 19:05:41,495] - [train.py line:61] :    == step: [100/391], train loss: 1.078 | train acc: 68.812% | lr: 0.100000
[2019-08-26 19:06:03,056] - [train.py line:61] :    == step: [200/391], train loss: 1.104 | train acc: 67.980% | lr: 0.100000
[2019-08-26 19:06:24,513] - [train.py line:61] :    == step: [300/391], train loss: 1.128 | train acc: 67.237% | lr: 0.100000
[2019-08-26 19:06:43,863] - [train.py line:64] :    == cost time: 83.8750s
[2019-08-26 19:06:43,866] - [train.py line:36] : ====Epoch:[38/300]====
[2019-08-26 19:07:05,285] - [train.py line:61] :    == step: [100/391], train loss: 1.069 | train acc: 68.664% | lr: 0.100000
[2019-08-26 19:07:26,638] - [train.py line:61] :    == step: [200/391], train loss: 1.095 | train acc: 67.969% | lr: 0.100000
[2019-08-26 19:07:47,953] - [train.py line:61] :    == step: [300/391], train loss: 1.115 | train acc: 67.492% | lr: 0.100000
[2019-08-26 19:08:07,316] - [train.py line:64] :    == cost time: 83.4519s
[2019-08-26 19:08:07,318] - [train.py line:80] : ======validate =====
[2019-08-26 19:08:11,968] - [train.py line:91] : corret:5209total10000
[2019-08-26 19:08:11,969] - [train.py line:93] :    == test loss: 1.827 | test acc: 52.090%
[2019-08-26 19:08:12,023] - [train.py line:36] : ====Epoch:[39/300]====
[2019-08-26 19:08:33,713] - [train.py line:61] :    == step: [100/391], train loss: 1.110 | train acc: 67.734% | lr: 0.100000
[2019-08-26 19:08:54,984] - [train.py line:61] :    == step: [200/391], train loss: 1.114 | train acc: 67.488% | lr: 0.100000
[2019-08-26 19:09:16,319] - [train.py line:61] :    == step: [300/391], train loss: 1.122 | train acc: 67.464% | lr: 0.100000
[2019-08-26 19:09:35,831] - [train.py line:64] :    == cost time: 83.8119s
[2019-08-26 19:09:35,833] - [train.py line:36] : ====Epoch:[40/300]====
[2019-08-26 19:09:57,488] - [train.py line:61] :    == step: [100/391], train loss: 1.089 | train acc: 68.156% | lr: 0.100000
[2019-08-26 19:10:19,065] - [train.py line:61] :    == step: [200/391], train loss: 1.106 | train acc: 67.648% | lr: 0.100000
[2019-08-26 19:10:40,345] - [train.py line:61] :    == step: [300/391], train loss: 1.114 | train acc: 67.508% | lr: 0.100000
[2019-08-26 19:10:59,714] - [train.py line:64] :    == cost time: 83.8823s
[2019-08-26 19:10:59,717] - [train.py line:80] : ======validate =====
[2019-08-26 19:11:04,359] - [train.py line:91] : corret:5793total10000
[2019-08-26 19:11:04,359] - [train.py line:93] :    == test loss: 1.536 | test acc: 57.930%
[2019-08-26 19:11:04,420] - [train.py line:36] : ====Epoch:[41/300]====
[2019-08-26 19:11:25,840] - [train.py line:61] :    == step: [100/391], train loss: 1.066 | train acc: 69.039% | lr: 0.100000
[2019-08-26 19:11:47,170] - [train.py line:61] :    == step: [200/391], train loss: 1.081 | train acc: 68.613% | lr: 0.100000
[2019-08-26 19:12:08,487] - [train.py line:61] :    == step: [300/391], train loss: 1.099 | train acc: 68.013% | lr: 0.100000
[2019-08-26 19:12:27,881] - [train.py line:64] :    == cost time: 83.4625s
[2019-08-26 19:12:27,884] - [train.py line:36] : ====Epoch:[42/300]====
[2019-08-26 19:12:49,410] - [train.py line:61] :    == step: [100/391], train loss: 1.055 | train acc: 69.234% | lr: 0.100000
[2019-08-26 19:13:10,746] - [train.py line:61] :    == step: [200/391], train loss: 1.085 | train acc: 68.352% | lr: 0.100000
[2019-08-26 19:13:32,099] - [train.py line:61] :    == step: [300/391], train loss: 1.102 | train acc: 67.922% | lr: 0.100000
[2019-08-26 19:13:51,486] - [train.py line:64] :    == cost time: 83.6033s
[2019-08-26 19:13:51,488] - [train.py line:80] : ======validate =====
[2019-08-26 19:13:56,126] - [train.py line:91] : corret:5945total10000
[2019-08-26 19:13:56,127] - [train.py line:93] :    == test loss: 1.448 | test acc: 59.450%
[2019-08-26 19:13:56,189] - [train.py line:36] : ====Epoch:[43/300]====
[2019-08-26 19:14:17,707] - [train.py line:61] :    == step: [100/391], train loss: 1.076 | train acc: 68.406% | lr: 0.100000
[2019-08-26 19:14:39,294] - [train.py line:61] :    == step: [200/391], train loss: 1.092 | train acc: 68.012% | lr: 0.100000
[2019-08-26 19:15:00,598] - [train.py line:61] :    == step: [300/391], train loss: 1.103 | train acc: 67.714% | lr: 0.100000
[2019-08-26 19:15:20,135] - [train.py line:64] :    == cost time: 83.9470s
[2019-08-26 19:15:20,137] - [train.py line:36] : ====Epoch:[44/300]====
[2019-08-26 19:15:41,745] - [train.py line:61] :    == step: [100/391], train loss: 1.052 | train acc: 69.023% | lr: 0.100000
[2019-08-26 19:16:03,157] - [train.py line:61] :    == step: [200/391], train loss: 1.076 | train acc: 68.559% | lr: 0.100000
[2019-08-26 19:16:24,624] - [train.py line:61] :    == step: [300/391], train loss: 1.089 | train acc: 68.203% | lr: 0.100000
[2019-08-26 19:16:44,100] - [train.py line:64] :    == cost time: 83.9645s
[2019-08-26 19:16:44,102] - [train.py line:80] : ======validate =====
[2019-08-26 19:16:48,779] - [train.py line:91] : corret:5821total10000
[2019-08-26 19:16:48,780] - [train.py line:93] :    == test loss: 1.519 | test acc: 58.210%
[2019-08-26 19:16:48,816] - [train.py line:36] : ====Epoch:[45/300]====
[2019-08-26 19:17:10,403] - [train.py line:61] :    == step: [100/391], train loss: 1.038 | train acc: 69.805% | lr: 0.100000
[2019-08-26 19:17:31,847] - [train.py line:61] :    == step: [200/391], train loss: 1.077 | train acc: 68.758% | lr: 0.100000
[2019-08-26 19:17:53,362] - [train.py line:61] :    == step: [300/391], train loss: 1.093 | train acc: 68.414% | lr: 0.100000
[2019-08-26 19:18:12,907] - [train.py line:64] :    == cost time: 84.0929s
[2019-08-26 19:18:12,909] - [train.py line:36] : ====Epoch:[46/300]====
[2019-08-26 19:18:34,431] - [train.py line:61] :    == step: [100/391], train loss: 1.046 | train acc: 69.594% | lr: 0.100000
[2019-08-26 19:18:55,971] - [train.py line:61] :    == step: [200/391], train loss: 1.078 | train acc: 68.406% | lr: 0.100000
[2019-08-26 19:19:17,417] - [train.py line:61] :    == step: [300/391], train loss: 1.096 | train acc: 67.940% | lr: 0.100000
[2019-08-26 19:19:37,098] - [train.py line:64] :    == cost time: 84.1896s
[2019-08-26 19:19:37,100] - [train.py line:80] : ======validate =====
[2019-08-26 19:19:41,708] - [train.py line:91] : corret:5365total10000
[2019-08-26 19:19:41,708] - [train.py line:93] :    == test loss: 1.734 | test acc: 53.650%
[2019-08-26 19:19:41,746] - [train.py line:36] : ====Epoch:[47/300]====
[2019-08-26 19:20:03,193] - [train.py line:61] :    == step: [100/391], train loss: 1.034 | train acc: 69.781% | lr: 0.100000
[2019-08-26 19:20:24,771] - [train.py line:61] :    == step: [200/391], train loss: 1.067 | train acc: 68.680% | lr: 0.100000
[2019-08-26 19:20:46,283] - [train.py line:61] :    == step: [300/391], train loss: 1.094 | train acc: 67.948% | lr: 0.100000
[2019-08-26 19:21:05,796] - [train.py line:64] :    == cost time: 84.0511s
[2019-08-26 19:21:05,798] - [train.py line:36] : ====Epoch:[48/300]====
[2019-08-26 19:21:27,437] - [train.py line:61] :    == step: [100/391], train loss: 1.042 | train acc: 69.648% | lr: 0.100000
[2019-08-26 19:21:48,827] - [train.py line:61] :    == step: [200/391], train loss: 1.068 | train acc: 68.824% | lr: 0.100000
[2019-08-26 19:22:10,343] - [train.py line:61] :    == step: [300/391], train loss: 1.083 | train acc: 68.396% | lr: 0.100000
[2019-08-26 19:22:29,876] - [train.py line:64] :    == cost time: 84.0792s
[2019-08-26 19:22:29,878] - [train.py line:80] : ======validate =====
[2019-08-26 19:22:34,473] - [train.py line:91] : corret:5363total10000
[2019-08-26 19:22:34,474] - [train.py line:93] :    == test loss: 1.721 | test acc: 53.630%
[2019-08-26 19:22:34,519] - [train.py line:36] : ====Epoch:[49/300]====
[2019-08-26 19:22:56,050] - [train.py line:61] :    == step: [100/391], train loss: 1.048 | train acc: 69.086% | lr: 0.100000
[2019-08-26 19:23:17,628] - [train.py line:61] :    == step: [200/391], train loss: 1.058 | train acc: 69.039% | lr: 0.100000
[2019-08-26 19:23:39,122] - [train.py line:61] :    == step: [300/391], train loss: 1.081 | train acc: 68.484% | lr: 0.100000
[2019-08-26 19:23:58,565] - [train.py line:64] :    == cost time: 84.0467s
[2019-08-26 19:23:58,567] - [train.py line:36] : ====Epoch:[50/300]====
[2019-08-26 19:24:20,040] - [train.py line:61] :    == step: [100/391], train loss: 1.035 | train acc: 69.750% | lr: 0.100000
[2019-08-26 19:24:41,355] - [train.py line:61] :    == step: [200/391], train loss: 1.062 | train acc: 69.047% | lr: 0.100000
[2019-08-26 19:25:02,849] - [train.py line:61] :    == step: [300/391], train loss: 1.084 | train acc: 68.365% | lr: 0.100000
[2019-08-26 19:25:22,165] - [train.py line:64] :    == cost time: 83.5988s
[2019-08-26 19:25:22,167] - [train.py line:80] : ======validate =====
[2019-08-26 19:25:26,764] - [train.py line:91] : corret:5844total10000
[2019-08-26 19:25:26,764] - [train.py line:93] :    == test loss: 1.490 | test acc: 58.440%
[2019-08-26 19:25:26,809] - [train.py line:36] : ====Epoch:[51/300]====
[2019-08-26 19:25:48,336] - [train.py line:61] :    == step: [100/391], train loss: 1.030 | train acc: 69.852% | lr: 0.100000
[2019-08-26 19:26:09,688] - [train.py line:61] :    == step: [200/391], train loss: 1.066 | train acc: 68.809% | lr: 0.100000
[2019-08-26 19:26:31,063] - [train.py line:61] :    == step: [300/391], train loss: 1.081 | train acc: 68.284% | lr: 0.100000
[2019-08-26 19:26:50,536] - [train.py line:64] :    == cost time: 83.7276s
[2019-08-26 19:26:50,538] - [train.py line:36] : ====Epoch:[52/300]====
[2019-08-26 19:27:12,045] - [train.py line:61] :    == step: [100/391], train loss: 1.043 | train acc: 69.656% | lr: 0.100000
[2019-08-26 19:27:33,339] - [train.py line:61] :    == step: [200/391], train loss: 1.066 | train acc: 68.711% | lr: 0.100000
[2019-08-26 19:27:54,636] - [train.py line:61] :    == step: [300/391], train loss: 1.075 | train acc: 68.542% | lr: 0.100000
[2019-08-26 19:28:13,975] - [train.py line:64] :    == cost time: 83.4386s
[2019-08-26 19:28:13,977] - [train.py line:80] : ======validate =====
[2019-08-26 19:28:18,595] - [train.py line:91] : corret:5795total10000
[2019-08-26 19:28:18,595] - [train.py line:93] :    == test loss: 1.518 | test acc: 57.950%
[2019-08-26 19:28:18,641] - [train.py line:36] : ====Epoch:[53/300]====
[2019-08-26 19:28:40,045] - [train.py line:61] :    == step: [100/391], train loss: 1.057 | train acc: 69.109% | lr: 0.100000
[2019-08-26 19:29:01,362] - [train.py line:61] :    == step: [200/391], train loss: 1.070 | train acc: 68.875% | lr: 0.100000
[2019-08-26 19:29:22,703] - [train.py line:61] :    == step: [300/391], train loss: 1.083 | train acc: 68.466% | lr: 0.100000
[2019-08-26 19:29:42,008] - [train.py line:64] :    == cost time: 83.3683s
[2019-08-26 19:29:42,010] - [train.py line:36] : ====Epoch:[54/300]====
[2019-08-26 19:30:03,388] - [train.py line:61] :    == step: [100/391], train loss: 1.026 | train acc: 70.219% | lr: 0.100000
[2019-08-26 19:30:24,726] - [train.py line:61] :    == step: [200/391], train loss: 1.061 | train acc: 69.117% | lr: 0.100000
[2019-08-26 19:30:46,059] - [train.py line:61] :    == step: [300/391], train loss: 1.073 | train acc: 68.812% | lr: 0.100000
[2019-08-26 19:31:05,464] - [train.py line:64] :    == cost time: 83.4547s
[2019-08-26 19:31:05,466] - [train.py line:80] : ======validate =====
[2019-08-26 19:31:10,086] - [train.py line:91] : corret:5361total10000
[2019-08-26 19:31:10,086] - [train.py line:93] :    == test loss: 1.785 | test acc: 53.610%
[2019-08-26 19:31:10,136] - [train.py line:36] : ====Epoch:[55/300]====
[2019-08-26 19:31:31,632] - [train.py line:61] :    == step: [100/391], train loss: 1.048 | train acc: 69.195% | lr: 0.100000
[2019-08-26 19:31:52,951] - [train.py line:61] :    == step: [200/391], train loss: 1.058 | train acc: 68.996% | lr: 0.100000
[2019-08-26 19:32:14,185] - [train.py line:61] :    == step: [300/391], train loss: 1.074 | train acc: 68.562% | lr: 0.100000
[2019-08-26 19:32:33,489] - [train.py line:64] :    == cost time: 83.3547s
[2019-08-26 19:32:33,491] - [train.py line:36] : ====Epoch:[56/300]====
[2019-08-26 19:32:54,874] - [train.py line:61] :    == step: [100/391], train loss: 1.040 | train acc: 69.805% | lr: 0.100000
[2019-08-26 19:33:16,162] - [train.py line:61] :    == step: [200/391], train loss: 1.060 | train acc: 69.484% | lr: 0.100000
[2019-08-26 19:33:37,561] - [train.py line:61] :    == step: [300/391], train loss: 1.076 | train acc: 69.049% | lr: 0.100000
[2019-08-26 19:33:57,146] - [train.py line:64] :    == cost time: 83.6557s
[2019-08-26 19:33:57,148] - [train.py line:80] : ======validate =====
[2019-08-26 19:34:01,811] - [train.py line:91] : corret:5347total10000
[2019-08-26 19:34:01,811] - [train.py line:93] :    == test loss: 1.788 | test acc: 53.470%
[2019-08-26 19:34:01,863] - [train.py line:36] : ====Epoch:[57/300]====
[2019-08-26 19:34:23,510] - [train.py line:61] :    == step: [100/391], train loss: 1.011 | train acc: 70.852% | lr: 0.100000
[2019-08-26 19:34:44,954] - [train.py line:61] :    == step: [200/391], train loss: 1.050 | train acc: 69.688% | lr: 0.100000
[2019-08-26 19:35:06,488] - [train.py line:61] :    == step: [300/391], train loss: 1.075 | train acc: 68.997% | lr: 0.100000
[2019-08-26 19:35:25,891] - [train.py line:64] :    == cost time: 84.0298s
[2019-08-26 19:35:25,893] - [train.py line:36] : ====Epoch:[58/300]====
[2019-08-26 19:35:47,578] - [train.py line:61] :    == step: [100/391], train loss: 1.046 | train acc: 68.969% | lr: 0.100000
[2019-08-26 19:36:09,127] - [train.py line:61] :    == step: [200/391], train loss: 1.066 | train acc: 68.582% | lr: 0.100000
[2019-08-26 19:36:30,401] - [train.py line:61] :    == step: [300/391], train loss: 1.071 | train acc: 68.451% | lr: 0.100000
[2019-08-26 19:36:49,703] - [train.py line:64] :    == cost time: 83.8109s
[2019-08-26 19:36:49,705] - [train.py line:80] : ======validate =====
[2019-08-26 19:36:54,328] - [train.py line:91] : corret:5372total10000
[2019-08-26 19:36:54,329] - [train.py line:93] :    == test loss: 1.718 | test acc: 53.720%
[2019-08-26 19:36:54,374] - [train.py line:36] : ====Epoch:[59/300]====
[2019-08-26 19:37:15,742] - [train.py line:61] :    == step: [100/391], train loss: 1.019 | train acc: 69.961% | lr: 0.100000
[2019-08-26 19:37:37,109] - [train.py line:61] :    == step: [200/391], train loss: 1.035 | train acc: 69.520% | lr: 0.100000
[2019-08-26 19:37:58,520] - [train.py line:61] :    == step: [300/391], train loss: 1.060 | train acc: 69.208% | lr: 0.100000
[2019-08-26 19:38:17,930] - [train.py line:64] :    == cost time: 83.5569s
[2019-08-26 19:38:17,932] - [train.py line:36] : ====Epoch:[60/300]====
[2019-08-26 19:38:39,366] - [train.py line:61] :    == step: [100/391], train loss: 1.015 | train acc: 70.391% | lr: 0.100000
[2019-08-26 19:39:00,783] - [train.py line:61] :    == step: [200/391], train loss: 1.049 | train acc: 69.230% | lr: 0.100000
[2019-08-26 19:39:22,289] - [train.py line:61] :    == step: [300/391], train loss: 1.067 | train acc: 68.628% | lr: 0.100000
[2019-08-26 19:39:41,702] - [train.py line:64] :    == cost time: 83.7713s
[2019-08-26 19:39:41,704] - [train.py line:80] : ======validate =====
[2019-08-26 19:39:46,304] - [train.py line:91] : corret:5951total10000
[2019-08-26 19:39:46,304] - [train.py line:93] :    == test loss: 1.478 | test acc: 59.510%
[2019-08-26 19:39:46,370] - [train.py line:36] : ====Epoch:[61/300]====
[2019-08-26 19:40:07,923] - [train.py line:61] :    == step: [100/391], train loss: 1.013 | train acc: 69.922% | lr: 0.100000
[2019-08-26 19:40:29,505] - [train.py line:61] :    == step: [200/391], train loss: 1.044 | train acc: 69.180% | lr: 0.100000
[2019-08-26 19:40:50,986] - [train.py line:61] :    == step: [300/391], train loss: 1.062 | train acc: 68.875% | lr: 0.100000
[2019-08-26 19:41:10,344] - [train.py line:64] :    == cost time: 83.9753s
[2019-08-26 19:41:10,347] - [train.py line:36] : ====Epoch:[62/300]====
[2019-08-26 19:41:31,946] - [train.py line:61] :    == step: [100/391], train loss: 1.012 | train acc: 70.477% | lr: 0.100000
[2019-08-26 19:41:53,362] - [train.py line:61] :    == step: [200/391], train loss: 1.041 | train acc: 69.523% | lr: 0.100000
[2019-08-26 19:42:14,938] - [train.py line:61] :    == step: [300/391], train loss: 1.057 | train acc: 69.005% | lr: 0.100000
[2019-08-26 19:42:34,498] - [train.py line:64] :    == cost time: 84.1527s
[2019-08-26 19:42:34,501] - [train.py line:80] : ======validate =====
[2019-08-26 19:42:39,078] - [train.py line:91] : corret:5475total10000
[2019-08-26 19:42:39,079] - [train.py line:93] :    == test loss: 1.699 | test acc: 54.750%
[2019-08-26 19:42:39,124] - [train.py line:36] : ====Epoch:[63/300]====
[2019-08-26 19:43:00,795] - [train.py line:61] :    == step: [100/391], train loss: 1.009 | train acc: 70.219% | lr: 0.100000
[2019-08-26 19:43:22,458] - [train.py line:61] :    == step: [200/391], train loss: 1.040 | train acc: 69.461% | lr: 0.100000
[2019-08-26 19:43:43,956] - [train.py line:61] :    == step: [300/391], train loss: 1.064 | train acc: 68.870% | lr: 0.100000
[2019-08-26 19:44:03,553] - [train.py line:64] :    == cost time: 84.4304s
[2019-08-26 19:44:03,556] - [train.py line:36] : ====Epoch:[64/300]====
[2019-08-26 19:44:25,133] - [train.py line:61] :    == step: [100/391], train loss: 1.015 | train acc: 70.422% | lr: 0.100000
[2019-08-26 19:44:46,560] - [train.py line:61] :    == step: [200/391], train loss: 1.053 | train acc: 69.258% | lr: 0.100000
[2019-08-26 19:45:07,975] - [train.py line:61] :    == step: [300/391], train loss: 1.061 | train acc: 69.151% | lr: 0.100000
[2019-08-26 19:45:27,457] - [train.py line:64] :    == cost time: 83.9027s
[2019-08-26 19:45:27,460] - [train.py line:80] : ======validate =====
[2019-08-26 19:45:32,122] - [train.py line:91] : corret:5726total10000
[2019-08-26 19:45:32,123] - [train.py line:93] :    == test loss: 1.575 | test acc: 57.260%
[2019-08-26 19:45:32,158] - [train.py line:36] : ====Epoch:[65/300]====
[2019-08-26 19:45:53,712] - [train.py line:61] :    == step: [100/391], train loss: 1.056 | train acc: 69.328% | lr: 0.100000
[2019-08-26 19:46:15,150] - [train.py line:61] :    == step: [200/391], train loss: 1.061 | train acc: 68.844% | lr: 0.100000
[2019-08-26 19:46:36,542] - [train.py line:61] :    == step: [300/391], train loss: 1.066 | train acc: 68.784% | lr: 0.100000
[2019-08-26 19:46:56,071] - [train.py line:64] :    == cost time: 83.9145s
[2019-08-26 19:46:56,073] - [train.py line:36] : ====Epoch:[66/300]====
[2019-08-26 19:47:17,566] - [train.py line:61] :    == step: [100/391], train loss: 1.015 | train acc: 70.305% | lr: 0.100000
[2019-08-26 19:47:38,928] - [train.py line:61] :    == step: [200/391], train loss: 1.043 | train acc: 69.391% | lr: 0.100000
[2019-08-26 19:48:00,182] - [train.py line:61] :    == step: [300/391], train loss: 1.061 | train acc: 69.010% | lr: 0.100000
[2019-08-26 19:48:19,700] - [train.py line:64] :    == cost time: 83.6281s
[2019-08-26 19:48:19,702] - [train.py line:80] : ======validate =====
[2019-08-26 19:48:24,334] - [train.py line:91] : corret:5800total10000
[2019-08-26 19:48:24,334] - [train.py line:93] :    == test loss: 1.526 | test acc: 58.000%
[2019-08-26 19:48:24,380] - [train.py line:36] : ====Epoch:[67/300]====
[2019-08-26 19:48:45,923] - [train.py line:61] :    == step: [100/391], train loss: 1.011 | train acc: 70.406% | lr: 0.100000
[2019-08-26 19:49:07,214] - [train.py line:61] :    == step: [200/391], train loss: 1.035 | train acc: 69.734% | lr: 0.100000
[2019-08-26 19:49:28,420] - [train.py line:61] :    == step: [300/391], train loss: 1.054 | train acc: 69.164% | lr: 0.100000
[2019-08-26 19:49:47,756] - [train.py line:64] :    == cost time: 83.3768s
[2019-08-26 19:49:47,758] - [train.py line:36] : ====Epoch:[68/300]====
[2019-08-26 19:50:09,370] - [train.py line:61] :    == step: [100/391], train loss: 1.013 | train acc: 70.273% | lr: 0.100000
[2019-08-26 19:50:30,834] - [train.py line:61] :    == step: [200/391], train loss: 1.038 | train acc: 69.535% | lr: 0.100000
[2019-08-26 19:50:52,145] - [train.py line:61] :    == step: [300/391], train loss: 1.050 | train acc: 69.289% | lr: 0.100000
[2019-08-26 19:51:11,434] - [train.py line:64] :    == cost time: 83.6770s
[2019-08-26 19:51:11,436] - [train.py line:80] : ======validate =====
[2019-08-26 19:51:16,035] - [train.py line:91] : corret:5519total10000
[2019-08-26 19:51:16,035] - [train.py line:93] :    == test loss: 1.648 | test acc: 55.190%
[2019-08-26 19:51:16,074] - [train.py line:36] : ====Epoch:[69/300]====
[2019-08-26 19:51:37,425] - [train.py line:61] :    == step: [100/391], train loss: 1.015 | train acc: 70.156% | lr: 0.100000
[2019-08-26 19:51:58,646] - [train.py line:61] :    == step: [200/391], train loss: 1.038 | train acc: 69.449% | lr: 0.100000
[2019-08-26 19:52:19,979] - [train.py line:61] :    == step: [300/391], train loss: 1.056 | train acc: 69.164% | lr: 0.100000
[2019-08-26 19:52:39,432] - [train.py line:64] :    == cost time: 83.3587s
[2019-08-26 19:52:39,433] - [train.py line:36] : ====Epoch:[70/300]====
[2019-08-26 19:53:00,972] - [train.py line:61] :    == step: [100/391], train loss: 1.003 | train acc: 70.523% | lr: 0.100000
[2019-08-26 19:53:22,477] - [train.py line:61] :    == step: [200/391], train loss: 1.037 | train acc: 69.543% | lr: 0.100000
[2019-08-26 19:53:43,988] - [train.py line:61] :    == step: [300/391], train loss: 1.059 | train acc: 69.003% | lr: 0.100000
[2019-08-26 19:54:03,395] - [train.py line:64] :    == cost time: 83.9623s
[2019-08-26 19:54:03,397] - [train.py line:80] : ======validate =====
[2019-08-26 19:54:08,049] - [train.py line:91] : corret:5865total10000
[2019-08-26 19:54:08,050] - [train.py line:93] :    == test loss: 1.510 | test acc: 58.650%
[2019-08-26 19:54:08,099] - [train.py line:36] : ====Epoch:[71/300]====
[2019-08-26 19:54:29,764] - [train.py line:61] :    == step: [100/391], train loss: 1.011 | train acc: 70.383% | lr: 0.100000
[2019-08-26 19:54:51,269] - [train.py line:61] :    == step: [200/391], train loss: 1.039 | train acc: 69.551% | lr: 0.100000
[2019-08-26 19:55:12,826] - [train.py line:61] :    == step: [300/391], train loss: 1.061 | train acc: 69.107% | lr: 0.100000
[2019-08-26 19:55:32,377] - [train.py line:64] :    == cost time: 84.2791s
[2019-08-26 19:55:32,379] - [train.py line:36] : ====Epoch:[72/300]====
[2019-08-26 19:55:53,917] - [train.py line:61] :    == step: [100/391], train loss: 1.011 | train acc: 70.109% | lr: 0.100000
[2019-08-26 19:56:15,210] - [train.py line:61] :    == step: [200/391], train loss: 1.043 | train acc: 69.277% | lr: 0.100000
[2019-08-26 19:56:36,621] - [train.py line:61] :    == step: [300/391], train loss: 1.056 | train acc: 68.940% | lr: 0.100000
[2019-08-26 19:56:56,100] - [train.py line:64] :    == cost time: 83.7228s
[2019-08-26 19:56:56,102] - [train.py line:80] : ======validate =====
[2019-08-26 19:57:00,733] - [train.py line:91] : corret:5912total10000
[2019-08-26 19:57:00,734] - [train.py line:93] :    == test loss: 1.501 | test acc: 59.120%
[2019-08-26 19:57:00,769] - [train.py line:36] : ====Epoch:[73/300]====
[2019-08-26 19:57:22,324] - [train.py line:61] :    == step: [100/391], train loss: 1.030 | train acc: 69.797% | lr: 0.100000
[2019-08-26 19:57:43,797] - [train.py line:61] :    == step: [200/391], train loss: 1.043 | train acc: 69.434% | lr: 0.100000
[2019-08-26 19:58:05,313] - [train.py line:61] :    == step: [300/391], train loss: 1.056 | train acc: 69.229% | lr: 0.100000
[2019-08-26 19:58:24,840] - [train.py line:64] :    == cost time: 84.0728s
[2019-08-26 19:58:24,842] - [train.py line:36] : ====Epoch:[74/300]====
[2019-08-26 19:58:46,445] - [train.py line:61] :    == step: [100/391], train loss: 0.997 | train acc: 71.430% | lr: 0.100000
[2019-08-26 19:59:07,934] - [train.py line:61] :    == step: [200/391], train loss: 1.026 | train acc: 70.270% | lr: 0.100000
[2019-08-26 19:59:29,342] - [train.py line:61] :    == step: [300/391], train loss: 1.048 | train acc: 69.409% | lr: 0.100000
[2019-08-26 19:59:48,645] - [train.py line:64] :    == cost time: 83.8035s
[2019-08-26 19:59:48,647] - [train.py line:80] : ======validate =====
[2019-08-26 19:59:53,292] - [train.py line:91] : corret:5722total10000
[2019-08-26 19:59:53,292] - [train.py line:93] :    == test loss: 1.545 | test acc: 57.220%
[2019-08-26 19:59:53,326] - [train.py line:36] : ====Epoch:[75/300]====
[2019-08-26 20:00:14,912] - [train.py line:61] :    == step: [100/391], train loss: 1.018 | train acc: 70.344% | lr: 0.100000
[2019-08-26 20:00:36,393] - [train.py line:61] :    == step: [200/391], train loss: 1.043 | train acc: 69.641% | lr: 0.100000
[2019-08-26 20:00:57,688] - [train.py line:61] :    == step: [300/391], train loss: 1.057 | train acc: 69.193% | lr: 0.100000
[2019-08-26 20:01:17,154] - [train.py line:64] :    == cost time: 83.8283s
[2019-08-26 20:01:17,156] - [train.py line:36] : ====Epoch:[76/300]====
[2019-08-26 20:01:38,783] - [train.py line:61] :    == step: [100/391], train loss: 1.004 | train acc: 71.266% | lr: 0.100000
[2019-08-26 20:02:00,239] - [train.py line:61] :    == step: [200/391], train loss: 1.028 | train acc: 70.344% | lr: 0.100000
[2019-08-26 20:02:21,587] - [train.py line:61] :    == step: [300/391], train loss: 1.047 | train acc: 69.659% | lr: 0.100000
[2019-08-26 20:02:41,125] - [train.py line:64] :    == cost time: 83.9706s
[2019-08-26 20:02:41,127] - [train.py line:80] : ======validate =====
[2019-08-26 20:02:45,712] - [train.py line:91] : corret:5826total10000
[2019-08-26 20:02:45,712] - [train.py line:93] :    == test loss: 1.568 | test acc: 58.260%
[2019-08-26 20:02:45,751] - [train.py line:36] : ====Epoch:[77/300]====
[2019-08-26 20:03:07,131] - [train.py line:61] :    == step: [100/391], train loss: 1.003 | train acc: 70.539% | lr: 0.100000
[2019-08-26 20:03:28,379] - [train.py line:61] :    == step: [200/391], train loss: 1.007 | train acc: 70.418% | lr: 0.100000
[2019-08-26 20:03:49,634] - [train.py line:61] :    == step: [300/391], train loss: 1.034 | train acc: 69.656% | lr: 0.100000
[2019-08-26 20:04:09,031] - [train.py line:64] :    == cost time: 83.2820s
[2019-08-26 20:04:09,033] - [train.py line:36] : ====Epoch:[78/300]====
[2019-08-26 20:04:30,589] - [train.py line:61] :    == step: [100/391], train loss: 1.013 | train acc: 69.789% | lr: 0.100000
[2019-08-26 20:04:52,016] - [train.py line:61] :    == step: [200/391], train loss: 1.024 | train acc: 69.766% | lr: 0.100000
[2019-08-26 20:05:13,293] - [train.py line:61] :    == step: [300/391], train loss: 1.049 | train acc: 69.161% | lr: 0.100000
[2019-08-26 20:05:32,675] - [train.py line:64] :    == cost time: 83.6426s
[2019-08-26 20:05:32,677] - [train.py line:80] : ======validate =====
[2019-08-26 20:05:37,297] - [train.py line:91] : corret:5916total10000
[2019-08-26 20:05:37,297] - [train.py line:93] :    == test loss: 1.471 | test acc: 59.160%
[2019-08-26 20:05:37,343] - [train.py line:36] : ====Epoch:[79/300]====
[2019-08-26 20:05:58,869] - [train.py line:61] :    == step: [100/391], train loss: 0.992 | train acc: 71.156% | lr: 0.100000
[2019-08-26 20:06:20,285] - [train.py line:61] :    == step: [200/391], train loss: 1.029 | train acc: 70.234% | lr: 0.100000
[2019-08-26 20:06:41,586] - [train.py line:61] :    == step: [300/391], train loss: 1.044 | train acc: 69.596% | lr: 0.100000
[2019-08-26 20:07:01,131] - [train.py line:64] :    == cost time: 83.7900s
[2019-08-26 20:07:01,133] - [train.py line:36] : ====Epoch:[80/300]====
[2019-08-26 20:07:22,761] - [train.py line:61] :    == step: [100/391], train loss: 0.997 | train acc: 70.352% | lr: 0.100000
[2019-08-26 20:07:44,192] - [train.py line:61] :    == step: [200/391], train loss: 1.029 | train acc: 69.645% | lr: 0.100000
[2019-08-26 20:08:05,432] - [train.py line:61] :    == step: [300/391], train loss: 1.045 | train acc: 69.333% | lr: 0.100000
[2019-08-26 20:08:24,805] - [train.py line:64] :    == cost time: 83.6728s
[2019-08-26 20:08:24,807] - [train.py line:80] : ======validate =====
[2019-08-26 20:08:29,448] - [train.py line:91] : corret:5763total10000
[2019-08-26 20:08:29,449] - [train.py line:93] :    == test loss: 1.545 | test acc: 57.630%
[2019-08-26 20:08:29,498] - [train.py line:36] : ====Epoch:[81/300]====
[2019-08-26 20:08:51,148] - [train.py line:61] :    == step: [100/391], train loss: 0.994 | train acc: 70.898% | lr: 0.100000
[2019-08-26 20:09:12,763] - [train.py line:61] :    == step: [200/391], train loss: 1.021 | train acc: 70.074% | lr: 0.100000
[2019-08-26 20:09:34,336] - [train.py line:61] :    == step: [300/391], train loss: 1.035 | train acc: 69.641% | lr: 0.100000
[2019-08-26 20:09:53,862] - [train.py line:64] :    == cost time: 84.3650s
[2019-08-26 20:09:53,864] - [train.py line:36] : ====Epoch:[82/300]====
[2019-08-26 20:10:15,612] - [train.py line:61] :    == step: [100/391], train loss: 0.990 | train acc: 71.281% | lr: 0.100000
[2019-08-26 20:10:37,244] - [train.py line:61] :    == step: [200/391], train loss: 1.021 | train acc: 70.121% | lr: 0.100000
[2019-08-26 20:10:58,732] - [train.py line:61] :    == step: [300/391], train loss: 1.047 | train acc: 69.411% | lr: 0.100000
[2019-08-26 20:11:18,298] - [train.py line:64] :    == cost time: 84.4351s
[2019-08-26 20:11:18,300] - [train.py line:80] : ======validate =====
[2019-08-26 20:11:22,985] - [train.py line:91] : corret:5888total10000
[2019-08-26 20:11:22,985] - [train.py line:93] :    == test loss: 1.484 | test acc: 58.880%
[2019-08-26 20:11:23,059] - [train.py line:36] : ====Epoch:[83/300]====
[2019-08-26 20:11:44,744] - [train.py line:61] :    == step: [100/391], train loss: 0.995 | train acc: 70.586% | lr: 0.100000
[2019-08-26 20:12:06,131] - [train.py line:61] :    == step: [200/391], train loss: 1.016 | train acc: 70.195% | lr: 0.100000
[2019-08-26 20:12:27,610] - [train.py line:61] :    == step: [300/391], train loss: 1.041 | train acc: 69.409% | lr: 0.100000
[2019-08-26 20:12:47,155] - [train.py line:64] :    == cost time: 84.0972s
[2019-08-26 20:12:47,157] - [train.py line:36] : ====Epoch:[84/300]====
[2019-08-26 20:13:08,814] - [train.py line:61] :    == step: [100/391], train loss: 0.991 | train acc: 71.031% | lr: 0.100000
[2019-08-26 20:13:30,353] - [train.py line:61] :    == step: [200/391], train loss: 1.031 | train acc: 70.031% | lr: 0.100000
[2019-08-26 20:13:51,841] - [train.py line:61] :    == step: [300/391], train loss: 1.044 | train acc: 69.505% | lr: 0.100000
[2019-08-26 20:14:11,398] - [train.py line:64] :    == cost time: 84.2423s
[2019-08-26 20:14:11,400] - [train.py line:80] : ======validate =====
[2019-08-26 20:14:16,028] - [train.py line:91] : corret:5555total10000
[2019-08-26 20:14:16,028] - [train.py line:93] :    == test loss: 1.617 | test acc: 55.550%
[2019-08-26 20:14:16,075] - [train.py line:36] : ====Epoch:[85/300]====
[2019-08-26 20:14:37,704] - [train.py line:61] :    == step: [100/391], train loss: 1.015 | train acc: 69.891% | lr: 0.100000
[2019-08-26 20:14:59,191] - [train.py line:61] :    == step: [200/391], train loss: 1.037 | train acc: 69.445% | lr: 0.100000
[2019-08-26 20:15:20,743] - [train.py line:61] :    == step: [300/391], train loss: 1.055 | train acc: 69.078% | lr: 0.100000
[2019-08-26 20:15:40,259] - [train.py line:64] :    == cost time: 84.1864s
[2019-08-26 20:15:40,261] - [train.py line:36] : ====Epoch:[86/300]====
[2019-08-26 20:16:01,648] - [train.py line:61] :    == step: [100/391], train loss: 0.987 | train acc: 71.188% | lr: 0.100000
[2019-08-26 20:16:23,059] - [train.py line:61] :    == step: [200/391], train loss: 1.027 | train acc: 70.055% | lr: 0.100000
[2019-08-26 20:16:44,758] - [train.py line:61] :    == step: [300/391], train loss: 1.048 | train acc: 69.383% | lr: 0.100000
[2019-08-26 20:17:04,228] - [train.py line:64] :    == cost time: 83.9689s
[2019-08-26 20:17:04,230] - [train.py line:80] : ======validate =====
[2019-08-26 20:17:08,873] - [train.py line:91] : corret:5731total10000
[2019-08-26 20:17:08,873] - [train.py line:93] :    == test loss: 1.585 | test acc: 57.310%
[2019-08-26 20:17:08,922] - [train.py line:36] : ====Epoch:[87/300]====
[2019-08-26 20:17:30,784] - [train.py line:61] :    == step: [100/391], train loss: 1.000 | train acc: 70.914% | lr: 0.100000
[2019-08-26 20:17:52,218] - [train.py line:61] :    == step: [200/391], train loss: 1.027 | train acc: 69.930% | lr: 0.100000
[2019-08-26 20:18:13,967] - [train.py line:61] :    == step: [300/391], train loss: 1.045 | train acc: 69.427% | lr: 0.100000
[2019-08-26 20:18:33,670] - [train.py line:64] :    == cost time: 84.7491s
[2019-08-26 20:18:33,672] - [train.py line:36] : ====Epoch:[88/300]====
[2019-08-26 20:18:55,090] - [train.py line:61] :    == step: [100/391], train loss: 0.986 | train acc: 70.758% | lr: 0.100000
[2019-08-26 20:19:16,450] - [train.py line:61] :    == step: [200/391], train loss: 1.005 | train acc: 70.664% | lr: 0.100000
[2019-08-26 20:19:38,008] - [train.py line:61] :    == step: [300/391], train loss: 1.029 | train acc: 69.982% | lr: 0.100000
[2019-08-26 20:19:57,533] - [train.py line:64] :    == cost time: 83.8620s
[2019-08-26 20:19:57,535] - [train.py line:80] : ======validate =====
[2019-08-26 20:20:02,173] - [train.py line:91] : corret:5953total10000
[2019-08-26 20:20:02,173] - [train.py line:93] :    == test loss: 1.464 | test acc: 59.530%
[2019-08-26 20:20:02,236] - [train.py line:36] : ====Epoch:[89/300]====
[2019-08-26 20:20:23,983] - [train.py line:61] :    == step: [100/391], train loss: 0.981 | train acc: 70.742% | lr: 0.100000
[2019-08-26 20:20:45,454] - [train.py line:61] :    == step: [200/391], train loss: 1.010 | train acc: 70.129% | lr: 0.100000
[2019-08-26 20:21:07,009] - [train.py line:61] :    == step: [300/391], train loss: 1.034 | train acc: 69.536% | lr: 0.100000
[2019-08-26 20:21:26,496] - [train.py line:64] :    == cost time: 84.2615s
[2019-08-26 20:21:26,498] - [train.py line:36] : ====Epoch:[90/300]====
[2019-08-26 20:21:47,961] - [train.py line:61] :    == step: [100/391], train loss: 0.983 | train acc: 71.305% | lr: 0.100000
[2019-08-26 20:22:09,228] - [train.py line:61] :    == step: [200/391], train loss: 1.017 | train acc: 70.500% | lr: 0.100000
[2019-08-26 20:22:30,653] - [train.py line:61] :    == step: [300/391], train loss: 1.036 | train acc: 69.964% | lr: 0.100000
[2019-08-26 20:22:50,123] - [train.py line:64] :    == cost time: 83.6260s
[2019-08-26 20:22:50,125] - [train.py line:80] : ======validate =====
[2019-08-26 20:22:54,758] - [train.py line:91] : corret:5863total10000
[2019-08-26 20:22:54,758] - [train.py line:93] :    == test loss: 1.510 | test acc: 58.630%
[2019-08-26 20:22:54,810] - [train.py line:36] : ====Epoch:[91/300]====
[2019-08-26 20:23:16,448] - [train.py line:61] :    == step: [100/391], train loss: 0.971 | train acc: 71.320% | lr: 0.100000
[2019-08-26 20:23:37,815] - [train.py line:61] :    == step: [200/391], train loss: 1.020 | train acc: 70.246% | lr: 0.100000
[2019-08-26 20:23:59,202] - [train.py line:61] :    == step: [300/391], train loss: 1.037 | train acc: 69.753% | lr: 0.100000
[2019-08-26 20:24:18,689] - [train.py line:64] :    == cost time: 83.8810s
[2019-08-26 20:24:18,691] - [train.py line:36] : ====Epoch:[92/300]====
[2019-08-26 20:24:40,288] - [train.py line:61] :    == step: [100/391], train loss: 0.986 | train acc: 70.992% | lr: 0.100000
[2019-08-26 20:25:01,709] - [train.py line:61] :    == step: [200/391], train loss: 1.020 | train acc: 70.016% | lr: 0.100000
[2019-08-26 20:25:23,170] - [train.py line:61] :    == step: [300/391], train loss: 1.035 | train acc: 69.755% | lr: 0.100000
[2019-08-26 20:25:42,659] - [train.py line:64] :    == cost time: 83.9693s
[2019-08-26 20:25:42,662] - [train.py line:80] : ======validate =====
[2019-08-26 20:25:47,457] - [train.py line:91] : corret:5891total10000
[2019-08-26 20:25:47,457] - [train.py line:93] :    == test loss: 1.504 | test acc: 58.910%
[2019-08-26 20:25:47,496] - [train.py line:36] : ====Epoch:[93/300]====
[2019-08-26 20:26:09,109] - [train.py line:61] :    == step: [100/391], train loss: 0.992 | train acc: 70.711% | lr: 0.100000
[2019-08-26 20:26:30,389] - [train.py line:61] :    == step: [200/391], train loss: 1.015 | train acc: 70.137% | lr: 0.100000
[2019-08-26 20:26:51,730] - [train.py line:61] :    == step: [300/391], train loss: 1.036 | train acc: 69.586% | lr: 0.100000
[2019-08-26 20:27:11,121] - [train.py line:64] :    == cost time: 83.6265s
[2019-08-26 20:27:11,123] - [train.py line:36] : ====Epoch:[94/300]====
[2019-08-26 20:27:32,599] - [train.py line:61] :    == step: [100/391], train loss: 0.984 | train acc: 70.906% | lr: 0.100000
[2019-08-26 20:27:53,963] - [train.py line:61] :    == step: [200/391], train loss: 1.014 | train acc: 70.133% | lr: 0.100000
[2019-08-26 20:28:15,240] - [train.py line:61] :    == step: [300/391], train loss: 1.035 | train acc: 69.578% | lr: 0.100000
[2019-08-26 20:28:34,522] - [train.py line:64] :    == cost time: 83.4002s
[2019-08-26 20:28:34,524] - [train.py line:80] : ======validate =====
[2019-08-26 20:28:39,164] - [train.py line:91] : corret:5591total10000
[2019-08-26 20:28:39,164] - [train.py line:93] :    == test loss: 1.612 | test acc: 55.910%
[2019-08-26 20:28:39,210] - [train.py line:36] : ====Epoch:[95/300]====
[2019-08-26 20:29:00,701] - [train.py line:61] :    == step: [100/391], train loss: 0.992 | train acc: 71.305% | lr: 0.100000
[2019-08-26 20:29:22,147] - [train.py line:61] :    == step: [200/391], train loss: 1.020 | train acc: 70.484% | lr: 0.100000
[2019-08-26 20:29:43,513] - [train.py line:61] :    == step: [300/391], train loss: 1.027 | train acc: 70.318% | lr: 0.100000
[2019-08-26 20:30:02,865] - [train.py line:64] :    == cost time: 83.6563s
[2019-08-26 20:30:02,867] - [train.py line:36] : ====Epoch:[96/300]====
[2019-08-26 20:30:24,447] - [train.py line:61] :    == step: [100/391], train loss: 0.997 | train acc: 70.414% | lr: 0.100000
[2019-08-26 20:30:45,743] - [train.py line:61] :    == step: [200/391], train loss: 1.017 | train acc: 69.828% | lr: 0.100000
[2019-08-26 20:31:07,297] - [train.py line:61] :    == step: [300/391], train loss: 1.034 | train acc: 69.401% | lr: 0.100000
[2019-08-26 20:31:26,807] - [train.py line:64] :    == cost time: 83.9411s
[2019-08-26 20:31:26,809] - [train.py line:80] : ======validate =====
[2019-08-26 20:31:31,370] - [train.py line:91] : corret:5461total10000
[2019-08-26 20:31:31,370] - [train.py line:93] :    == test loss: 1.737 | test acc: 54.610%
[2019-08-26 20:31:31,420] - [train.py line:36] : ====Epoch:[97/300]====
[2019-08-26 20:31:52,943] - [train.py line:61] :    == step: [100/391], train loss: 1.017 | train acc: 70.406% | lr: 0.100000
[2019-08-26 20:32:14,532] - [train.py line:61] :    == step: [200/391], train loss: 1.011 | train acc: 70.621% | lr: 0.100000
[2019-08-26 20:32:36,092] - [train.py line:61] :    == step: [300/391], train loss: 1.029 | train acc: 70.047% | lr: 0.100000
[2019-08-26 20:32:55,551] - [train.py line:64] :    == cost time: 84.1316s
[2019-08-26 20:32:55,553] - [train.py line:36] : ====Epoch:[98/300]====
[2019-08-26 20:33:17,184] - [train.py line:61] :    == step: [100/391], train loss: 0.992 | train acc: 70.945% | lr: 0.100000
[2019-08-26 20:33:38,586] - [train.py line:61] :    == step: [200/391], train loss: 1.019 | train acc: 70.184% | lr: 0.100000
[2019-08-26 20:33:59,844] - [train.py line:61] :    == step: [300/391], train loss: 1.030 | train acc: 69.854% | lr: 0.100000
[2019-08-26 20:34:19,226] - [train.py line:64] :    == cost time: 83.6737s
[2019-08-26 20:34:19,228] - [train.py line:80] : ======validate =====
[2019-08-26 20:34:23,904] - [train.py line:91] : corret:5832total10000
[2019-08-26 20:34:23,905] - [train.py line:93] :    == test loss: 1.524 | test acc: 58.320%
[2019-08-26 20:34:23,940] - [train.py line:36] : ====Epoch:[99/300]====
[2019-08-26 20:34:45,393] - [train.py line:61] :    == step: [100/391], train loss: 1.000 | train acc: 70.859% | lr: 0.100000
[2019-08-26 20:35:06,748] - [train.py line:61] :    == step: [200/391], train loss: 1.028 | train acc: 70.023% | lr: 0.100000
[2019-08-26 20:35:28,082] - [train.py line:61] :    == step: [300/391], train loss: 1.040 | train acc: 69.771% | lr: 0.100000
[2019-08-26 20:35:47,475] - [train.py line:64] :    == cost time: 83.5362s
[2019-08-26 20:35:47,477] - [train.py line:36] : ====Epoch:[100/300]====
[2019-08-26 20:36:09,014] - [train.py line:61] :    == step: [100/391], train loss: 0.988 | train acc: 70.648% | lr: 0.100000
[2019-08-26 20:36:30,356] - [train.py line:61] :    == step: [200/391], train loss: 1.018 | train acc: 69.938% | lr: 0.100000
[2019-08-26 20:36:51,705] - [train.py line:61] :    == step: [300/391], train loss: 1.037 | train acc: 69.453% | lr: 0.100000
[2019-08-26 20:37:11,181] - [train.py line:64] :    == cost time: 83.7053s
[2019-08-26 20:37:11,183] - [train.py line:80] : ======validate =====
[2019-08-26 20:37:15,832] - [train.py line:91] : corret:5832total10000
[2019-08-26 20:37:15,833] - [train.py line:93] :    == test loss: 1.525 | test acc: 58.320%
[2019-08-26 20:37:15,871] - [train.py line:36] : ====Epoch:[101/300]====
[2019-08-26 20:37:37,341] - [train.py line:61] :    == step: [100/391], train loss: 0.780 | train acc: 77.547% | lr: 0.010000
[2019-08-26 20:37:58,737] - [train.py line:61] :    == step: [200/391], train loss: 0.726 | train acc: 78.883% | lr: 0.010000
[2019-08-26 20:38:20,055] - [train.py line:61] :    == step: [300/391], train loss: 0.700 | train acc: 79.625% | lr: 0.010000
[2019-08-26 20:38:39,446] - [train.py line:64] :    == cost time: 83.5762s
[2019-08-26 20:38:39,448] - [train.py line:36] : ====Epoch:[102/300]====
[2019-08-26 20:39:00,915] - [train.py line:61] :    == step: [100/391], train loss: 0.583 | train acc: 82.984% | lr: 0.010000
[2019-08-26 20:39:22,222] - [train.py line:61] :    == step: [200/391], train loss: 0.575 | train acc: 83.211% | lr: 0.010000
[2019-08-26 20:39:43,542] - [train.py line:61] :    == step: [300/391], train loss: 0.573 | train acc: 83.302% | lr: 0.010000
[2019-08-26 20:40:02,797] - [train.py line:64] :    == cost time: 83.3506s
[2019-08-26 20:40:02,799] - [train.py line:80] : ======validate =====
[2019-08-26 20:40:07,428] - [train.py line:91] : corret:7461total10000
[2019-08-26 20:40:07,428] - [train.py line:93] :    == test loss: 0.856 | test acc: 74.610%
[2019-08-26 20:40:07,500] - [train.py line:36] : ====Epoch:[103/300]====
[2019-08-26 20:40:28,955] - [train.py line:61] :    == step: [100/391], train loss: 0.523 | train acc: 85.016% | lr: 0.010000
[2019-08-26 20:40:50,316] - [train.py line:61] :    == step: [200/391], train loss: 0.524 | train acc: 85.027% | lr: 0.010000
[2019-08-26 20:41:11,646] - [train.py line:61] :    == step: [300/391], train loss: 0.525 | train acc: 84.880% | lr: 0.010000
[2019-08-26 20:41:31,051] - [train.py line:64] :    == cost time: 83.5573s
[2019-08-26 20:41:31,053] - [train.py line:36] : ====Epoch:[104/300]====
[2019-08-26 20:41:52,562] - [train.py line:61] :    == step: [100/391], train loss: 0.493 | train acc: 86.141% | lr: 0.010000
[2019-08-26 20:42:13,981] - [train.py line:61] :    == step: [200/391], train loss: 0.491 | train acc: 86.016% | lr: 0.010000
[2019-08-26 20:42:35,254] - [train.py line:61] :    == step: [300/391], train loss: 0.487 | train acc: 86.076% | lr: 0.010000
[2019-08-26 20:42:54,694] - [train.py line:64] :    == cost time: 83.6415s
[2019-08-26 20:42:54,696] - [train.py line:80] : ======validate =====
[2019-08-26 20:42:59,389] - [train.py line:91] : corret:7513total10000
[2019-08-26 20:42:59,389] - [train.py line:93] :    == test loss: 0.845 | test acc: 75.130%
[2019-08-26 20:42:59,452] - [train.py line:36] : ====Epoch:[105/300]====
[2019-08-26 20:43:21,083] - [train.py line:61] :    == step: [100/391], train loss: 0.454 | train acc: 86.883% | lr: 0.010000
[2019-08-26 20:43:42,520] - [train.py line:61] :    == step: [200/391], train loss: 0.455 | train acc: 86.875% | lr: 0.010000
[2019-08-26 20:44:04,140] - [train.py line:61] :    == step: [300/391], train loss: 0.457 | train acc: 86.893% | lr: 0.010000
[2019-08-26 20:44:23,752] - [train.py line:64] :    == cost time: 84.3008s
[2019-08-26 20:44:23,754] - [train.py line:36] : ====Epoch:[106/300]====
[2019-08-26 20:44:45,306] - [train.py line:61] :    == step: [100/391], train loss: 0.419 | train acc: 88.297% | lr: 0.010000
[2019-08-26 20:45:06,789] - [train.py line:61] :    == step: [200/391], train loss: 0.428 | train acc: 87.820% | lr: 0.010000
[2019-08-26 20:45:28,151] - [train.py line:61] :    == step: [300/391], train loss: 0.434 | train acc: 87.628% | lr: 0.010000
[2019-08-26 20:45:47,675] - [train.py line:64] :    == cost time: 83.9218s
[2019-08-26 20:45:47,677] - [train.py line:80] : ======validate =====
[2019-08-26 20:45:52,297] - [train.py line:91] : corret:7504total10000
[2019-08-26 20:45:52,298] - [train.py line:93] :    == test loss: 0.855 | test acc: 75.040%
[2019-08-26 20:45:52,348] - [train.py line:36] : ====Epoch:[107/300]====
[2019-08-26 20:46:13,867] - [train.py line:61] :    == step: [100/391], train loss: 0.406 | train acc: 88.500% | lr: 0.010000
[2019-08-26 20:46:35,240] - [train.py line:61] :    == step: [200/391], train loss: 0.413 | train acc: 88.289% | lr: 0.010000
[2019-08-26 20:46:56,774] - [train.py line:61] :    == step: [300/391], train loss: 0.414 | train acc: 88.214% | lr: 0.010000
[2019-08-26 20:47:16,379] - [train.py line:64] :    == cost time: 84.0323s
[2019-08-26 20:47:16,381] - [train.py line:36] : ====Epoch:[108/300]====
[2019-08-26 20:47:38,095] - [train.py line:61] :    == step: [100/391], train loss: 0.389 | train acc: 88.891% | lr: 0.010000
[2019-08-26 20:47:59,681] - [train.py line:61] :    == step: [200/391], train loss: 0.389 | train acc: 88.949% | lr: 0.010000
[2019-08-26 20:48:21,271] - [train.py line:61] :    == step: [300/391], train loss: 0.395 | train acc: 88.794% | lr: 0.010000
[2019-08-26 20:48:40,905] - [train.py line:64] :    == cost time: 84.5249s
[2019-08-26 20:48:40,907] - [train.py line:80] : ======validate =====
[2019-08-26 20:48:45,596] - [train.py line:91] : corret:7532total10000
[2019-08-26 20:48:45,597] - [train.py line:93] :    == test loss: 0.855 | test acc: 75.320%
[2019-08-26 20:48:45,659] - [train.py line:36] : ====Epoch:[109/300]====
[2019-08-26 20:49:07,331] - [train.py line:61] :    == step: [100/391], train loss: 0.372 | train acc: 89.711% | lr: 0.010000
[2019-08-26 20:49:28,964] - [train.py line:61] :    == step: [200/391], train loss: 0.379 | train acc: 89.422% | lr: 0.010000
[2019-08-26 20:49:50,503] - [train.py line:61] :    == step: [300/391], train loss: 0.382 | train acc: 89.237% | lr: 0.010000
[2019-08-26 20:50:09,861] - [train.py line:64] :    == cost time: 84.2064s
[2019-08-26 20:50:09,863] - [train.py line:36] : ====Epoch:[110/300]====
[2019-08-26 20:50:31,575] - [train.py line:61] :    == step: [100/391], train loss: 0.353 | train acc: 90.188% | lr: 0.010000
[2019-08-26 20:50:53,038] - [train.py line:61] :    == step: [200/391], train loss: 0.362 | train acc: 89.809% | lr: 0.010000
[2019-08-26 20:51:14,364] - [train.py line:61] :    == step: [300/391], train loss: 0.368 | train acc: 89.688% | lr: 0.010000
[2019-08-26 20:51:33,872] - [train.py line:64] :    == cost time: 84.0102s
[2019-08-26 20:51:33,874] - [train.py line:80] : ======validate =====
[2019-08-26 20:51:38,491] - [train.py line:91] : corret:7521total10000
[2019-08-26 20:51:38,491] - [train.py line:93] :    == test loss: 0.856 | test acc: 75.210%
[2019-08-26 20:51:38,537] - [train.py line:36] : ====Epoch:[111/300]====
[2019-08-26 20:52:00,134] - [train.py line:61] :    == step: [100/391], train loss: 0.339 | train acc: 90.430% | lr: 0.010000
[2019-08-26 20:52:21,637] - [train.py line:61] :    == step: [200/391], train loss: 0.343 | train acc: 90.336% | lr: 0.010000
[2019-08-26 20:52:43,071] - [train.py line:61] :    == step: [300/391], train loss: 0.349 | train acc: 90.013% | lr: 0.010000
[2019-08-26 20:53:02,525] - [train.py line:64] :    == cost time: 83.9897s
[2019-08-26 20:53:02,527] - [train.py line:36] : ====Epoch:[112/300]====
[2019-08-26 20:53:24,187] - [train.py line:61] :    == step: [100/391], train loss: 0.314 | train acc: 91.445% | lr: 0.010000
[2019-08-26 20:53:45,495] - [train.py line:61] :    == step: [200/391], train loss: 0.332 | train acc: 90.754% | lr: 0.010000
[2019-08-26 20:54:06,832] - [train.py line:61] :    == step: [300/391], train loss: 0.338 | train acc: 90.607% | lr: 0.010000
[2019-08-26 20:54:26,292] - [train.py line:64] :    == cost time: 83.7659s
[2019-08-26 20:54:26,294] - [train.py line:80] : ======validate =====
[2019-08-26 20:54:30,972] - [train.py line:91] : corret:7491total10000
[2019-08-26 20:54:30,973] - [train.py line:93] :    == test loss: 0.881 | test acc: 74.910%
[2019-08-26 20:54:31,018] - [train.py line:36] : ====Epoch:[113/300]====
[2019-08-26 20:54:52,638] - [train.py line:61] :    == step: [100/391], train loss: 0.313 | train acc: 91.445% | lr: 0.010000
[2019-08-26 20:55:14,091] - [train.py line:61] :    == step: [200/391], train loss: 0.321 | train acc: 91.078% | lr: 0.010000
[2019-08-26 20:55:35,474] - [train.py line:61] :    == step: [300/391], train loss: 0.332 | train acc: 90.635% | lr: 0.010000
[2019-08-26 20:55:55,069] - [train.py line:64] :    == cost time: 84.0514s
[2019-08-26 20:55:55,071] - [train.py line:36] : ====Epoch:[114/300]====
[2019-08-26 20:56:16,585] - [train.py line:61] :    == step: [100/391], train loss: 0.303 | train acc: 91.492% | lr: 0.010000
[2019-08-26 20:56:38,152] - [train.py line:61] :    == step: [200/391], train loss: 0.313 | train acc: 91.238% | lr: 0.010000
[2019-08-26 20:56:59,733] - [train.py line:61] :    == step: [300/391], train loss: 0.318 | train acc: 91.115% | lr: 0.010000
[2019-08-26 20:57:19,128] - [train.py line:64] :    == cost time: 84.0582s
[2019-08-26 20:57:19,130] - [train.py line:80] : ======validate =====
[2019-08-26 20:57:23,774] - [train.py line:91] : corret:7482total10000
[2019-08-26 20:57:23,775] - [train.py line:93] :    == test loss: 0.895 | test acc: 74.820%
[2019-08-26 20:57:23,823] - [train.py line:36] : ====Epoch:[115/300]====
[2019-08-26 20:57:45,354] - [train.py line:61] :    == step: [100/391], train loss: 0.290 | train acc: 92.352% | lr: 0.010000
[2019-08-26 20:58:06,753] - [train.py line:61] :    == step: [200/391], train loss: 0.298 | train acc: 92.141% | lr: 0.010000
[2019-08-26 20:58:28,160] - [train.py line:61] :    == step: [300/391], train loss: 0.307 | train acc: 91.680% | lr: 0.010000
[2019-08-26 20:58:47,593] - [train.py line:64] :    == cost time: 83.7706s
[2019-08-26 20:58:47,595] - [train.py line:36] : ====Epoch:[116/300]====
[2019-08-26 20:59:09,005] - [train.py line:61] :    == step: [100/391], train loss: 0.286 | train acc: 92.156% | lr: 0.010000
[2019-08-26 20:59:30,406] - [train.py line:61] :    == step: [200/391], train loss: 0.295 | train acc: 91.750% | lr: 0.010000
[2019-08-26 20:59:51,853] - [train.py line:61] :    == step: [300/391], train loss: 0.299 | train acc: 91.596% | lr: 0.010000
[2019-08-26 21:00:11,307] - [train.py line:64] :    == cost time: 83.7133s
[2019-08-26 21:00:11,309] - [train.py line:80] : ======validate =====
[2019-08-26 21:00:15,949] - [train.py line:91] : corret:7463total10000
[2019-08-26 21:00:15,950] - [train.py line:93] :    == test loss: 0.898 | test acc: 74.630%
[2019-08-26 21:00:15,996] - [train.py line:36] : ====Epoch:[117/300]====
[2019-08-26 21:00:37,511] - [train.py line:61] :    == step: [100/391], train loss: 0.261 | train acc: 93.195% | lr: 0.010000
[2019-08-26 21:00:58,762] - [train.py line:61] :    == step: [200/391], train loss: 0.278 | train acc: 92.445% | lr: 0.010000
[2019-08-26 21:01:19,997] - [train.py line:61] :    == step: [300/391], train loss: 0.288 | train acc: 92.146% | lr: 0.010000
[2019-08-26 21:01:39,350] - [train.py line:64] :    == cost time: 83.3565s
[2019-08-26 21:01:39,352] - [train.py line:36] : ====Epoch:[118/300]====
[2019-08-26 21:02:01,095] - [train.py line:61] :    == step: [100/391], train loss: 0.281 | train acc: 92.195% | lr: 0.010000
[2019-08-26 21:02:22,512] - [train.py line:61] :    == step: [200/391], train loss: 0.284 | train acc: 92.047% | lr: 0.010000
[2019-08-26 21:02:44,013] - [train.py line:61] :    == step: [300/391], train loss: 0.287 | train acc: 92.052% | lr: 0.010000
[2019-08-26 21:03:03,588] - [train.py line:64] :    == cost time: 84.2369s
[2019-08-26 21:03:03,590] - [train.py line:80] : ======validate =====
[2019-08-26 21:03:08,214] - [train.py line:91] : corret:7340total10000
[2019-08-26 21:03:08,214] - [train.py line:93] :    == test loss: 0.950 | test acc: 73.400%
[2019-08-26 21:03:08,259] - [train.py line:36] : ====Epoch:[119/300]====
[2019-08-26 21:03:29,853] - [train.py line:61] :    == step: [100/391], train loss: 0.263 | train acc: 93.000% | lr: 0.010000
[2019-08-26 21:03:51,403] - [train.py line:61] :    == step: [200/391], train loss: 0.268 | train acc: 92.785% | lr: 0.010000
[2019-08-26 21:04:12,892] - [train.py line:61] :    == step: [300/391], train loss: 0.281 | train acc: 92.224% | lr: 0.010000
[2019-08-26 21:04:32,386] - [train.py line:64] :    == cost time: 84.1284s
[2019-08-26 21:04:32,388] - [train.py line:36] : ====Epoch:[120/300]====
[2019-08-26 21:04:53,852] - [train.py line:61] :    == step: [100/391], train loss: 0.261 | train acc: 92.938% | lr: 0.010000
[2019-08-26 21:05:15,279] - [train.py line:61] :    == step: [200/391], train loss: 0.268 | train acc: 92.672% | lr: 0.010000
[2019-08-26 21:05:36,769] - [train.py line:61] :    == step: [300/391], train loss: 0.280 | train acc: 92.279% | lr: 0.010000
[2019-08-26 21:05:56,248] - [train.py line:64] :    == cost time: 83.8603s
[2019-08-26 21:05:56,250] - [train.py line:80] : ======validate =====
[2019-08-26 21:06:00,896] - [train.py line:91] : corret:7402total10000
[2019-08-26 21:06:00,896] - [train.py line:93] :    == test loss: 0.941 | test acc: 74.020%
[2019-08-26 21:06:00,942] - [train.py line:36] : ====Epoch:[121/300]====
[2019-08-26 21:06:22,507] - [train.py line:61] :    == step: [100/391], train loss: 0.257 | train acc: 93.219% | lr: 0.010000
[2019-08-26 21:06:44,001] - [train.py line:61] :    == step: [200/391], train loss: 0.264 | train acc: 92.891% | lr: 0.010000
[2019-08-26 21:07:05,588] - [train.py line:61] :    == step: [300/391], train loss: 0.269 | train acc: 92.659% | lr: 0.010000
[2019-08-26 21:07:25,092] - [train.py line:64] :    == cost time: 84.1510s
[2019-08-26 21:07:25,094] - [train.py line:36] : ====Epoch:[122/300]====
[2019-08-26 21:07:46,753] - [train.py line:61] :    == step: [100/391], train loss: 0.249 | train acc: 93.312% | lr: 0.010000
[2019-08-26 21:08:08,137] - [train.py line:61] :    == step: [200/391], train loss: 0.262 | train acc: 92.953% | lr: 0.010000
[2019-08-26 21:08:29,448] - [train.py line:61] :    == step: [300/391], train loss: 0.267 | train acc: 92.815% | lr: 0.010000
[2019-08-26 21:08:48,868] - [train.py line:64] :    == cost time: 83.7751s
[2019-08-26 21:08:48,870] - [train.py line:80] : ======validate =====
[2019-08-26 21:08:53,538] - [train.py line:91] : corret:7252total10000
[2019-08-26 21:08:53,539] - [train.py line:93] :    == test loss: 1.025 | test acc: 72.520%
[2019-08-26 21:08:53,588] - [train.py line:36] : ====Epoch:[123/300]====
[2019-08-26 21:09:15,073] - [train.py line:61] :    == step: [100/391], train loss: 0.259 | train acc: 92.945% | lr: 0.010000
[2019-08-26 21:09:36,465] - [train.py line:61] :    == step: [200/391], train loss: 0.259 | train acc: 92.879% | lr: 0.010000
[2019-08-26 21:09:57,882] - [train.py line:61] :    == step: [300/391], train loss: 0.264 | train acc: 92.698% | lr: 0.010000
[2019-08-26 21:10:17,339] - [train.py line:64] :    == cost time: 83.7520s
[2019-08-26 21:10:17,341] - [train.py line:36] : ====Epoch:[124/300]====
[2019-08-26 21:10:38,813] - [train.py line:61] :    == step: [100/391], train loss: 0.237 | train acc: 93.852% | lr: 0.010000
[2019-08-26 21:11:00,157] - [train.py line:61] :    == step: [200/391], train loss: 0.250 | train acc: 93.289% | lr: 0.010000
[2019-08-26 21:11:21,542] - [train.py line:61] :    == step: [300/391], train loss: 0.257 | train acc: 92.953% | lr: 0.010000
[2019-08-26 21:11:40,968] - [train.py line:64] :    == cost time: 83.6285s
[2019-08-26 21:11:40,970] - [train.py line:80] : ======validate =====
[2019-08-26 21:11:45,582] - [train.py line:91] : corret:7334total10000
[2019-08-26 21:11:45,583] - [train.py line:93] :    == test loss: 0.967 | test acc: 73.340%
[2019-08-26 21:11:45,623] - [train.py line:36] : ====Epoch:[125/300]====
[2019-08-26 21:12:07,113] - [train.py line:61] :    == step: [100/391], train loss: 0.245 | train acc: 93.461% | lr: 0.010000
[2019-08-26 21:12:28,397] - [train.py line:61] :    == step: [200/391], train loss: 0.256 | train acc: 93.008% | lr: 0.010000
[2019-08-26 21:12:49,605] - [train.py line:61] :    == step: [300/391], train loss: 0.261 | train acc: 92.810% | lr: 0.010000
[2019-08-26 21:13:09,074] - [train.py line:64] :    == cost time: 83.4528s
[2019-08-26 21:13:09,077] - [train.py line:36] : ====Epoch:[126/300]====
[2019-08-26 21:13:30,631] - [train.py line:61] :    == step: [100/391], train loss: 0.242 | train acc: 93.539% | lr: 0.010000
[2019-08-26 21:13:52,019] - [train.py line:61] :    == step: [200/391], train loss: 0.250 | train acc: 93.227% | lr: 0.010000
[2019-08-26 21:14:13,288] - [train.py line:61] :    == step: [300/391], train loss: 0.259 | train acc: 92.898% | lr: 0.010000
[2019-08-26 21:14:32,679] - [train.py line:64] :    == cost time: 83.6033s
[2019-08-26 21:14:32,681] - [train.py line:80] : ======validate =====
[2019-08-26 21:14:37,278] - [train.py line:91] : corret:7304total10000
[2019-08-26 21:14:37,278] - [train.py line:93] :    == test loss: 0.989 | test acc: 73.040%
[2019-08-26 21:14:37,326] - [train.py line:36] : ====Epoch:[127/300]====
[2019-08-26 21:14:58,828] - [train.py line:61] :    == step: [100/391], train loss: 0.231 | train acc: 94.094% | lr: 0.010000
[2019-08-26 21:15:20,336] - [train.py line:61] :    == step: [200/391], train loss: 0.244 | train acc: 93.539% | lr: 0.010000
[2019-08-26 21:15:41,766] - [train.py line:61] :    == step: [300/391], train loss: 0.252 | train acc: 93.216% | lr: 0.010000
[2019-08-26 21:16:01,296] - [train.py line:64] :    == cost time: 83.9722s
[2019-08-26 21:16:01,298] - [train.py line:36] : ====Epoch:[128/300]====
[2019-08-26 21:16:22,875] - [train.py line:61] :    == step: [100/391], train loss: 0.241 | train acc: 93.641% | lr: 0.010000
[2019-08-26 21:16:44,427] - [train.py line:61] :    == step: [200/391], train loss: 0.245 | train acc: 93.523% | lr: 0.010000
[2019-08-26 21:17:05,897] - [train.py line:61] :    == step: [300/391], train loss: 0.256 | train acc: 93.049% | lr: 0.010000
[2019-08-26 21:17:25,399] - [train.py line:64] :    == cost time: 84.1020s
[2019-08-26 21:17:25,400] - [train.py line:80] : ======validate =====
[2019-08-26 21:17:30,078] - [train.py line:91] : corret:7255total10000
[2019-08-26 21:17:30,078] - [train.py line:93] :    == test loss: 1.007 | test acc: 72.550%
[2019-08-26 21:17:30,113] - [train.py line:36] : ====Epoch:[129/300]====
[2019-08-26 21:17:51,692] - [train.py line:61] :    == step: [100/391], train loss: 0.237 | train acc: 93.586% | lr: 0.010000
[2019-08-26 21:18:13,232] - [train.py line:61] :    == step: [200/391], train loss: 0.248 | train acc: 93.270% | lr: 0.010000
[2019-08-26 21:18:34,667] - [train.py line:61] :    == step: [300/391], train loss: 0.256 | train acc: 92.951% | lr: 0.010000
[2019-08-26 21:18:54,052] - [train.py line:64] :    == cost time: 83.9406s
[2019-08-26 21:18:54,055] - [train.py line:36] : ====Epoch:[130/300]====
[2019-08-26 21:19:15,559] - [train.py line:61] :    == step: [100/391], train loss: 0.236 | train acc: 93.867% | lr: 0.010000
[2019-08-26 21:19:36,941] - [train.py line:61] :    == step: [200/391], train loss: 0.241 | train acc: 93.648% | lr: 0.010000
[2019-08-26 21:19:58,358] - [train.py line:61] :    == step: [300/391], train loss: 0.247 | train acc: 93.346% | lr: 0.010000
[2019-08-26 21:20:17,831] - [train.py line:64] :    == cost time: 83.7774s
[2019-08-26 21:20:17,833] - [train.py line:80] : ======validate =====
[2019-08-26 21:20:22,456] - [train.py line:91] : corret:7134total10000
[2019-08-26 21:20:22,457] - [train.py line:93] :    == test loss: 1.046 | test acc: 71.340%
[2019-08-26 21:20:22,502] - [train.py line:36] : ====Epoch:[131/300]====
[2019-08-26 21:20:43,995] - [train.py line:61] :    == step: [100/391], train loss: 0.234 | train acc: 93.695% | lr: 0.010000
[2019-08-26 21:21:05,452] - [train.py line:61] :    == step: [200/391], train loss: 0.241 | train acc: 93.449% | lr: 0.010000
[2019-08-26 21:21:26,909] - [train.py line:61] :    == step: [300/391], train loss: 0.255 | train acc: 92.870% | lr: 0.010000
[2019-08-26 21:21:46,448] - [train.py line:64] :    == cost time: 83.9471s
[2019-08-26 21:21:46,450] - [train.py line:36] : ====Epoch:[132/300]====
[2019-08-26 21:22:07,954] - [train.py line:61] :    == step: [100/391], train loss: 0.227 | train acc: 93.930% | lr: 0.010000
[2019-08-26 21:22:29,142] - [train.py line:61] :    == step: [200/391], train loss: 0.240 | train acc: 93.480% | lr: 0.010000
[2019-08-26 21:22:50,459] - [train.py line:61] :    == step: [300/391], train loss: 0.250 | train acc: 93.120% | lr: 0.010000
[2019-08-26 21:23:09,814] - [train.py line:64] :    == cost time: 83.3646s
[2019-08-26 21:23:09,816] - [train.py line:80] : ======validate =====
[2019-08-26 21:23:14,465] - [train.py line:91] : corret:7177total10000
[2019-08-26 21:23:14,466] - [train.py line:93] :    == test loss: 1.037 | test acc: 71.770%
[2019-08-26 21:23:14,521] - [train.py line:36] : ====Epoch:[133/300]====
[2019-08-26 21:23:36,019] - [train.py line:61] :    == step: [100/391], train loss: 0.229 | train acc: 93.906% | lr: 0.010000
[2019-08-26 21:23:57,381] - [train.py line:61] :    == step: [200/391], train loss: 0.237 | train acc: 93.586% | lr: 0.010000
[2019-08-26 21:24:18,726] - [train.py line:61] :    == step: [300/391], train loss: 0.250 | train acc: 93.070% | lr: 0.010000
[2019-08-26 21:24:38,012] - [train.py line:64] :    == cost time: 83.4928s
[2019-08-26 21:24:38,014] - [train.py line:36] : ====Epoch:[134/300]====
[2019-08-26 21:24:59,455] - [train.py line:61] :    == step: [100/391], train loss: 0.229 | train acc: 93.898% | lr: 0.010000
[2019-08-26 21:25:20,870] - [train.py line:61] :    == step: [200/391], train loss: 0.239 | train acc: 93.379% | lr: 0.010000
[2019-08-26 21:25:42,237] - [train.py line:61] :    == step: [300/391], train loss: 0.249 | train acc: 93.018% | lr: 0.010000
[2019-08-26 21:26:01,608] - [train.py line:64] :    == cost time: 83.5949s
[2019-08-26 21:26:01,610] - [train.py line:80] : ======validate =====
[2019-08-26 21:26:06,209] - [train.py line:91] : corret:7277total10000
[2019-08-26 21:26:06,210] - [train.py line:93] :    == test loss: 1.014 | test acc: 72.770%
[2019-08-26 21:26:06,255] - [train.py line:36] : ====Epoch:[135/300]====
[2019-08-26 21:26:27,619] - [train.py line:61] :    == step: [100/391], train loss: 0.227 | train acc: 94.008% | lr: 0.010000
[2019-08-26 21:26:48,878] - [train.py line:61] :    == step: [200/391], train loss: 0.231 | train acc: 93.664% | lr: 0.010000
[2019-08-26 21:27:10,224] - [train.py line:61] :    == step: [300/391], train loss: 0.245 | train acc: 93.198% | lr: 0.010000
[2019-08-26 21:27:29,722] - [train.py line:64] :    == cost time: 83.4685s
[2019-08-26 21:27:29,724] - [train.py line:36] : ====Epoch:[136/300]====
[2019-08-26 21:27:51,259] - [train.py line:61] :    == step: [100/391], train loss: 0.231 | train acc: 93.820% | lr: 0.010000
[2019-08-26 21:28:12,607] - [train.py line:61] :    == step: [200/391], train loss: 0.240 | train acc: 93.480% | lr: 0.010000
[2019-08-26 21:28:34,073] - [train.py line:61] :    == step: [300/391], train loss: 0.251 | train acc: 93.029% | lr: 0.010000
[2019-08-26 21:28:53,593] - [train.py line:64] :    == cost time: 83.8704s
[2019-08-26 21:28:53,595] - [train.py line:80] : ======validate =====
[2019-08-26 21:28:58,182] - [train.py line:91] : corret:7228total10000
[2019-08-26 21:28:58,183] - [train.py line:93] :    == test loss: 1.033 | test acc: 72.280%
[2019-08-26 21:28:58,229] - [train.py line:36] : ====Epoch:[137/300]====
[2019-08-26 21:29:19,743] - [train.py line:61] :    == step: [100/391], train loss: 0.230 | train acc: 93.906% | lr: 0.010000
[2019-08-26 21:29:41,059] - [train.py line:61] :    == step: [200/391], train loss: 0.232 | train acc: 93.875% | lr: 0.010000
[2019-08-26 21:30:02,423] - [train.py line:61] :    == step: [300/391], train loss: 0.243 | train acc: 93.393% | lr: 0.010000
[2019-08-26 21:30:21,764] - [train.py line:64] :    == cost time: 83.5366s
[2019-08-26 21:30:21,767] - [train.py line:36] : ====Epoch:[138/300]====
[2019-08-26 21:30:43,251] - [train.py line:61] :    == step: [100/391], train loss: 0.221 | train acc: 94.117% | lr: 0.010000
[2019-08-26 21:31:04,651] - [train.py line:61] :    == step: [200/391], train loss: 0.235 | train acc: 93.484% | lr: 0.010000
[2019-08-26 21:31:26,060] - [train.py line:61] :    == step: [300/391], train loss: 0.247 | train acc: 93.096% | lr: 0.010000
[2019-08-26 21:31:45,446] - [train.py line:64] :    == cost time: 83.6809s
[2019-08-26 21:31:45,448] - [train.py line:80] : ======validate =====
[2019-08-26 21:31:50,040] - [train.py line:91] : corret:7206total10000
[2019-08-26 21:31:50,040] - [train.py line:93] :    == test loss: 1.035 | test acc: 72.060%
[2019-08-26 21:31:50,086] - [train.py line:36] : ====Epoch:[139/300]====
[2019-08-26 21:32:11,539] - [train.py line:61] :    == step: [100/391], train loss: 0.220 | train acc: 94.516% | lr: 0.010000
[2019-08-26 21:32:33,038] - [train.py line:61] :    == step: [200/391], train loss: 0.233 | train acc: 93.895% | lr: 0.010000
[2019-08-26 21:32:54,365] - [train.py line:61] :    == step: [300/391], train loss: 0.245 | train acc: 93.409% | lr: 0.010000
[2019-08-26 21:33:13,807] - [train.py line:64] :    == cost time: 83.7225s
[2019-08-26 21:33:13,809] - [train.py line:36] : ====Epoch:[140/300]====
[2019-08-26 21:33:35,365] - [train.py line:61] :    == step: [100/391], train loss: 0.229 | train acc: 93.969% | lr: 0.010000
[2019-08-26 21:33:56,871] - [train.py line:61] :    == step: [200/391], train loss: 0.237 | train acc: 93.711% | lr: 0.010000
[2019-08-26 21:34:18,338] - [train.py line:61] :    == step: [300/391], train loss: 0.248 | train acc: 93.297% | lr: 0.010000
[2019-08-26 21:34:38,012] - [train.py line:64] :    == cost time: 84.2044s
[2019-08-26 21:34:38,014] - [train.py line:80] : ======validate =====
[2019-08-26 21:34:42,699] - [train.py line:91] : corret:7138total10000
[2019-08-26 21:34:42,699] - [train.py line:93] :    == test loss: 1.068 | test acc: 71.380%
[2019-08-26 21:34:42,735] - [train.py line:36] : ====Epoch:[141/300]====
[2019-08-26 21:35:04,475] - [train.py line:61] :    == step: [100/391], train loss: 0.233 | train acc: 93.961% | lr: 0.010000
[2019-08-26 21:35:26,107] - [train.py line:61] :    == step: [200/391], train loss: 0.238 | train acc: 93.547% | lr: 0.010000
[2019-08-26 21:35:47,776] - [train.py line:61] :    == step: [300/391], train loss: 0.246 | train acc: 93.164% | lr: 0.010000
[2019-08-26 21:36:07,487] - [train.py line:64] :    == cost time: 84.7534s
[2019-08-26 21:36:07,489] - [train.py line:36] : ====Epoch:[142/300]====
[2019-08-26 21:36:29,143] - [train.py line:61] :    == step: [100/391], train loss: 0.216 | train acc: 94.438% | lr: 0.010000
[2019-08-26 21:36:50,751] - [train.py line:61] :    == step: [200/391], train loss: 0.225 | train acc: 94.020% | lr: 0.010000
[2019-08-26 21:37:12,297] - [train.py line:61] :    == step: [300/391], train loss: 0.237 | train acc: 93.521% | lr: 0.010000
[2019-08-26 21:37:31,660] - [train.py line:64] :    == cost time: 84.1726s
[2019-08-26 21:37:31,662] - [train.py line:80] : ======validate =====
[2019-08-26 21:37:36,280] - [train.py line:91] : corret:7120total10000
[2019-08-26 21:37:36,280] - [train.py line:93] :    == test loss: 1.060 | test acc: 71.200%
[2019-08-26 21:37:36,330] - [train.py line:36] : ====Epoch:[143/300]====
[2019-08-26 21:37:57,917] - [train.py line:61] :    == step: [100/391], train loss: 0.222 | train acc: 94.094% | lr: 0.010000
[2019-08-26 21:38:19,383] - [train.py line:61] :    == step: [200/391], train loss: 0.230 | train acc: 93.836% | lr: 0.010000
[2019-08-26 21:38:40,808] - [train.py line:61] :    == step: [300/391], train loss: 0.241 | train acc: 93.396% | lr: 0.010000
[2019-08-26 21:39:00,271] - [train.py line:64] :    == cost time: 83.9423s
[2019-08-26 21:39:00,273] - [train.py line:36] : ====Epoch:[144/300]====
[2019-08-26 21:39:21,915] - [train.py line:61] :    == step: [100/391], train loss: 0.224 | train acc: 93.867% | lr: 0.010000
[2019-08-26 21:39:43,370] - [train.py line:61] :    == step: [200/391], train loss: 0.229 | train acc: 93.883% | lr: 0.010000
[2019-08-26 21:40:04,850] - [train.py line:61] :    == step: [300/391], train loss: 0.240 | train acc: 93.474% | lr: 0.010000
[2019-08-26 21:40:24,397] - [train.py line:64] :    == cost time: 84.1250s
[2019-08-26 21:40:24,400] - [train.py line:80] : ======validate =====
[2019-08-26 21:40:29,058] - [train.py line:91] : corret:7203total10000
[2019-08-26 21:40:29,059] - [train.py line:93] :    == test loss: 1.046 | test acc: 72.030%
[2019-08-26 21:40:29,130] - [train.py line:36] : ====Epoch:[145/300]====
[2019-08-26 21:40:50,620] - [train.py line:61] :    == step: [100/391], train loss: 0.222 | train acc: 93.883% | lr: 0.010000
[2019-08-26 21:41:12,124] - [train.py line:61] :    == step: [200/391], train loss: 0.228 | train acc: 93.711% | lr: 0.010000
[2019-08-26 21:41:33,749] - [train.py line:61] :    == step: [300/391], train loss: 0.238 | train acc: 93.414% | lr: 0.010000
[2019-08-26 21:41:53,240] - [train.py line:64] :    == cost time: 84.1110s
[2019-08-26 21:41:53,242] - [train.py line:36] : ====Epoch:[146/300]====
[2019-08-26 21:42:14,732] - [train.py line:61] :    == step: [100/391], train loss: 0.219 | train acc: 94.281% | lr: 0.010000
[2019-08-26 21:42:36,239] - [train.py line:61] :    == step: [200/391], train loss: 0.225 | train acc: 93.961% | lr: 0.010000
[2019-08-26 21:42:57,904] - [train.py line:61] :    == step: [300/391], train loss: 0.231 | train acc: 93.685% | lr: 0.010000
[2019-08-26 21:43:17,387] - [train.py line:64] :    == cost time: 84.1461s
[2019-08-26 21:43:17,389] - [train.py line:80] : ======validate =====
[2019-08-26 21:43:22,107] - [train.py line:91] : corret:7183total10000
[2019-08-26 21:43:22,107] - [train.py line:93] :    == test loss: 1.042 | test acc: 71.830%
[2019-08-26 21:43:22,164] - [train.py line:36] : ====Epoch:[147/300]====
[2019-08-26 21:43:43,726] - [train.py line:61] :    == step: [100/391], train loss: 0.212 | train acc: 94.469% | lr: 0.010000
[2019-08-26 21:44:05,230] - [train.py line:61] :    == step: [200/391], train loss: 0.218 | train acc: 94.332% | lr: 0.010000
[2019-08-26 21:44:26,528] - [train.py line:61] :    == step: [300/391], train loss: 0.231 | train acc: 93.896% | lr: 0.010000
[2019-08-26 21:44:45,901] - [train.py line:64] :    == cost time: 83.7394s
[2019-08-26 21:44:45,903] - [train.py line:36] : ====Epoch:[148/300]====
[2019-08-26 21:45:07,569] - [train.py line:61] :    == step: [100/391], train loss: 0.206 | train acc: 94.797% | lr: 0.010000
[2019-08-26 21:45:28,964] - [train.py line:61] :    == step: [200/391], train loss: 0.219 | train acc: 94.141% | lr: 0.010000
[2019-08-26 21:45:50,279] - [train.py line:61] :    == step: [300/391], train loss: 0.230 | train acc: 93.776% | lr: 0.010000
[2019-08-26 21:46:09,795] - [train.py line:64] :    == cost time: 83.8930s
[2019-08-26 21:46:09,797] - [train.py line:80] : ======validate =====
[2019-08-26 21:46:14,476] - [train.py line:91] : corret:7076total10000
[2019-08-26 21:46:14,477] - [train.py line:93] :    == test loss: 1.089 | test acc: 70.760%
[2019-08-26 21:46:14,525] - [train.py line:36] : ====Epoch:[149/300]====
[2019-08-26 21:46:36,119] - [train.py line:61] :    == step: [100/391], train loss: 0.221 | train acc: 94.203% | lr: 0.010000
[2019-08-26 21:46:57,600] - [train.py line:61] :    == step: [200/391], train loss: 0.229 | train acc: 93.855% | lr: 0.010000
[2019-08-26 21:47:19,023] - [train.py line:61] :    == step: [300/391], train loss: 0.241 | train acc: 93.305% | lr: 0.010000
[2019-08-26 21:47:38,438] - [train.py line:64] :    == cost time: 83.9147s
[2019-08-26 21:47:38,440] - [train.py line:36] : ====Epoch:[150/300]====
[2019-08-26 21:47:59,889] - [train.py line:61] :    == step: [100/391], train loss: 0.215 | train acc: 94.062% | lr: 0.010000
[2019-08-26 21:48:21,394] - [train.py line:61] :    == step: [200/391], train loss: 0.227 | train acc: 93.754% | lr: 0.010000
[2019-08-26 21:48:42,934] - [train.py line:61] :    == step: [300/391], train loss: 0.236 | train acc: 93.458% | lr: 0.010000
[2019-08-26 21:49:02,616] - [train.py line:64] :    == cost time: 84.1765s
[2019-08-26 21:49:02,618] - [train.py line:80] : ======validate =====
[2019-08-26 21:49:07,294] - [train.py line:91] : corret:7109total10000
[2019-08-26 21:49:07,294] - [train.py line:93] :    == test loss: 1.125 | test acc: 71.090%
[2019-08-26 21:49:07,335] - [train.py line:36] : ====Epoch:[151/300]====
[2019-08-26 21:49:28,945] - [train.py line:61] :    == step: [100/391], train loss: 0.179 | train acc: 95.727% | lr: 0.001000
[2019-08-26 21:49:50,628] - [train.py line:61] :    == step: [200/391], train loss: 0.160 | train acc: 96.344% | lr: 0.001000
[2019-08-26 21:50:12,172] - [train.py line:61] :    == step: [300/391], train loss: 0.149 | train acc: 96.677% | lr: 0.001000
[2019-08-26 21:50:31,792] - [train.py line:64] :    == cost time: 84.4589s
[2019-08-26 21:50:31,794] - [train.py line:36] : ====Epoch:[152/300]====
[2019-08-26 21:50:53,427] - [train.py line:61] :    == step: [100/391], train loss: 0.106 | train acc: 98.164% | lr: 0.001000
[2019-08-26 21:51:14,871] - [train.py line:61] :    == step: [200/391], train loss: 0.105 | train acc: 98.273% | lr: 0.001000
[2019-08-26 21:51:36,573] - [train.py line:61] :    == step: [300/391], train loss: 0.103 | train acc: 98.323% | lr: 0.001000
[2019-08-26 21:51:55,928] - [train.py line:64] :    == cost time: 84.1350s
[2019-08-26 21:51:55,930] - [train.py line:80] : ======validate =====
[2019-08-26 21:52:00,658] - [train.py line:91] : corret:7601total10000
[2019-08-26 21:52:00,658] - [train.py line:93] :    == test loss: 0.890 | test acc: 76.010%
[2019-08-26 21:52:00,724] - [train.py line:36] : ====Epoch:[153/300]====
[2019-08-26 21:52:22,587] - [train.py line:61] :    == step: [100/391], train loss: 0.088 | train acc: 98.719% | lr: 0.001000
[2019-08-26 21:52:44,055] - [train.py line:61] :    == step: [200/391], train loss: 0.089 | train acc: 98.715% | lr: 0.001000
[2019-08-26 21:53:05,442] - [train.py line:61] :    == step: [300/391], train loss: 0.089 | train acc: 98.732% | lr: 0.001000
[2019-08-26 21:53:25,113] - [train.py line:64] :    == cost time: 84.3914s
[2019-08-26 21:53:25,115] - [train.py line:36] : ====Epoch:[154/300]====
[2019-08-26 21:53:46,972] - [train.py line:61] :    == step: [100/391], train loss: 0.083 | train acc: 99.078% | lr: 0.001000
[2019-08-26 21:54:08,582] - [train.py line:61] :    == step: [200/391], train loss: 0.082 | train acc: 99.008% | lr: 0.001000
[2019-08-26 21:54:29,837] - [train.py line:61] :    == step: [300/391], train loss: 0.081 | train acc: 99.010% | lr: 0.001000
[2019-08-26 21:54:49,190] - [train.py line:64] :    == cost time: 84.0765s
[2019-08-26 21:54:49,193] - [train.py line:80] : ======validate =====
[2019-08-26 21:54:53,861] - [train.py line:91] : corret:7653total10000
[2019-08-26 21:54:53,861] - [train.py line:93] :    == test loss: 0.888 | test acc: 76.530%
[2019-08-26 21:54:53,928] - [train.py line:36] : ====Epoch:[155/300]====
[2019-08-26 21:55:15,363] - [train.py line:61] :    == step: [100/391], train loss: 0.074 | train acc: 99.281% | lr: 0.001000
[2019-08-26 21:55:36,736] - [train.py line:61] :    == step: [200/391], train loss: 0.076 | train acc: 99.180% | lr: 0.001000
[2019-08-26 21:55:58,070] - [train.py line:61] :    == step: [300/391], train loss: 0.077 | train acc: 99.068% | lr: 0.001000
[2019-08-26 21:56:17,402] - [train.py line:64] :    == cost time: 83.4748s
[2019-08-26 21:56:17,404] - [train.py line:36] : ====Epoch:[156/300]====
[2019-08-26 21:56:38,857] - [train.py line:61] :    == step: [100/391], train loss: 0.075 | train acc: 99.078% | lr: 0.001000
[2019-08-26 21:57:00,240] - [train.py line:61] :    == step: [200/391], train loss: 0.075 | train acc: 99.043% | lr: 0.001000
[2019-08-26 21:57:21,588] - [train.py line:61] :    == step: [300/391], train loss: 0.074 | train acc: 99.005% | lr: 0.001000
[2019-08-26 21:57:40,936] - [train.py line:64] :    == cost time: 83.5338s
[2019-08-26 21:57:40,938] - [train.py line:80] : ======validate =====
[2019-08-26 21:57:45,552] - [train.py line:91] : corret:7602total10000
[2019-08-26 21:57:45,552] - [train.py line:93] :    == test loss: 0.904 | test acc: 76.020%
[2019-08-26 21:57:45,591] - [train.py line:36] : ====Epoch:[157/300]====
[2019-08-26 21:58:07,126] - [train.py line:61] :    == step: [100/391], train loss: 0.067 | train acc: 99.289% | lr: 0.001000
[2019-08-26 21:58:28,440] - [train.py line:61] :    == step: [200/391], train loss: 0.069 | train acc: 99.215% | lr: 0.001000
[2019-08-26 21:58:49,694] - [train.py line:61] :    == step: [300/391], train loss: 0.069 | train acc: 99.167% | lr: 0.001000
[2019-08-26 21:59:09,069] - [train.py line:64] :    == cost time: 83.4791s
[2019-08-26 21:59:09,071] - [train.py line:36] : ====Epoch:[158/300]====
[2019-08-26 21:59:30,618] - [train.py line:61] :    == step: [100/391], train loss: 0.067 | train acc: 99.406% | lr: 0.001000
[2019-08-26 21:59:51,950] - [train.py line:61] :    == step: [200/391], train loss: 0.066 | train acc: 99.418% | lr: 0.001000
[2019-08-26 22:00:13,317] - [train.py line:61] :    == step: [300/391], train loss: 0.067 | train acc: 99.346% | lr: 0.001000
[2019-08-26 22:00:32,747] - [train.py line:64] :    == cost time: 83.6769s
[2019-08-26 22:00:32,749] - [train.py line:80] : ======validate =====
[2019-08-26 22:00:37,352] - [train.py line:91] : corret:7573total10000
[2019-08-26 22:00:37,352] - [train.py line:93] :    == test loss: 0.896 | test acc: 75.730%
[2019-08-26 22:00:37,398] - [train.py line:36] : ====Epoch:[159/300]====
[2019-08-26 22:00:58,804] - [train.py line:61] :    == step: [100/391], train loss: 0.064 | train acc: 99.367% | lr: 0.001000
[2019-08-26 22:01:20,145] - [train.py line:61] :    == step: [200/391], train loss: 0.064 | train acc: 99.371% | lr: 0.001000
[2019-08-26 22:01:41,482] - [train.py line:61] :    == step: [300/391], train loss: 0.064 | train acc: 99.378% | lr: 0.001000
[2019-08-26 22:02:00,923] - [train.py line:64] :    == cost time: 83.5257s
[2019-08-26 22:02:00,925] - [train.py line:36] : ====Epoch:[160/300]====
[2019-08-26 22:02:22,404] - [train.py line:61] :    == step: [100/391], train loss: 0.064 | train acc: 99.383% | lr: 0.001000
[2019-08-26 22:02:43,748] - [train.py line:61] :    == step: [200/391], train loss: 0.063 | train acc: 99.430% | lr: 0.001000
[2019-08-26 22:03:05,587] - [train.py line:61] :    == step: [300/391], train loss: 0.064 | train acc: 99.422% | lr: 0.001000
[2019-08-26 22:03:24,986] - [train.py line:64] :    == cost time: 84.0620s
[2019-08-26 22:03:24,988] - [train.py line:80] : ======validate =====
[2019-08-26 22:03:29,643] - [train.py line:91] : corret:7628total10000
[2019-08-26 22:03:29,644] - [train.py line:93] :    == test loss: 0.895 | test acc: 76.280%
[2019-08-26 22:03:29,679] - [train.py line:36] : ====Epoch:[161/300]====
[2019-08-26 22:03:51,440] - [train.py line:61] :    == step: [100/391], train loss: 0.063 | train acc: 99.336% | lr: 0.001000
[2019-08-26 22:04:12,981] - [train.py line:61] :    == step: [200/391], train loss: 0.062 | train acc: 99.363% | lr: 0.001000
[2019-08-26 22:04:34,561] - [train.py line:61] :    == step: [300/391], train loss: 0.062 | train acc: 99.380% | lr: 0.001000
[2019-08-26 22:04:54,236] - [train.py line:64] :    == cost time: 84.5578s
[2019-08-26 22:04:54,238] - [train.py line:36] : ====Epoch:[162/300]====
[2019-08-26 22:05:15,953] - [train.py line:61] :    == step: [100/391], train loss: 0.060 | train acc: 99.484% | lr: 0.001000
[2019-08-26 22:05:37,536] - [train.py line:61] :    == step: [200/391], train loss: 0.059 | train acc: 99.539% | lr: 0.001000
[2019-08-26 22:05:59,150] - [train.py line:61] :    == step: [300/391], train loss: 0.060 | train acc: 99.469% | lr: 0.001000
[2019-08-26 22:06:18,759] - [train.py line:64] :    == cost time: 84.5226s
[2019-08-26 22:06:18,761] - [train.py line:80] : ======validate =====
[2019-08-26 22:06:23,436] - [train.py line:91] : corret:7615total10000
[2019-08-26 22:06:23,436] - [train.py line:93] :    == test loss: 0.908 | test acc: 76.150%
[2019-08-26 22:06:23,484] - [train.py line:36] : ====Epoch:[163/300]====
[2019-08-26 22:06:45,333] - [train.py line:61] :    == step: [100/391], train loss: 0.058 | train acc: 99.438% | lr: 0.001000
[2019-08-26 22:07:06,680] - [train.py line:61] :    == step: [200/391], train loss: 0.059 | train acc: 99.430% | lr: 0.001000
[2019-08-26 22:07:28,230] - [train.py line:61] :    == step: [300/391], train loss: 0.060 | train acc: 99.427% | lr: 0.001000
[2019-08-26 22:07:47,848] - [train.py line:64] :    == cost time: 84.3653s
[2019-08-26 22:07:47,850] - [train.py line:36] : ====Epoch:[164/300]====
[2019-08-26 22:08:09,439] - [train.py line:61] :    == step: [100/391], train loss: 0.059 | train acc: 99.398% | lr: 0.001000
[2019-08-26 22:08:30,760] - [train.py line:61] :    == step: [200/391], train loss: 0.058 | train acc: 99.496% | lr: 0.001000
[2019-08-26 22:08:52,312] - [train.py line:61] :    == step: [300/391], train loss: 0.058 | train acc: 99.495% | lr: 0.001000
[2019-08-26 22:09:11,882] - [train.py line:64] :    == cost time: 84.0327s
[2019-08-26 22:09:11,884] - [train.py line:80] : ======validate =====
[2019-08-26 22:09:16,565] - [train.py line:91] : corret:7598total10000
[2019-08-26 22:09:16,565] - [train.py line:93] :    == test loss: 0.916 | test acc: 75.980%
[2019-08-26 22:09:16,611] - [train.py line:36] : ====Epoch:[165/300]====
[2019-08-26 22:09:38,098] - [train.py line:61] :    == step: [100/391], train loss: 0.056 | train acc: 99.547% | lr: 0.001000
[2019-08-26 22:09:59,421] - [train.py line:61] :    == step: [200/391], train loss: 0.056 | train acc: 99.566% | lr: 0.001000
[2019-08-26 22:10:20,910] - [train.py line:61] :    == step: [300/391], train loss: 0.057 | train acc: 99.500% | lr: 0.001000
[2019-08-26 22:10:40,332] - [train.py line:64] :    == cost time: 83.7230s
[2019-08-26 22:10:40,334] - [train.py line:36] : ====Epoch:[166/300]====
[2019-08-26 22:11:01,883] - [train.py line:61] :    == step: [100/391], train loss: 0.055 | train acc: 99.531% | lr: 0.001000
[2019-08-26 22:11:23,123] - [train.py line:61] :    == step: [200/391], train loss: 0.054 | train acc: 99.539% | lr: 0.001000
[2019-08-26 22:11:44,356] - [train.py line:61] :    == step: [300/391], train loss: 0.055 | train acc: 99.513% | lr: 0.001000
[2019-08-26 22:12:03,634] - [train.py line:64] :    == cost time: 83.3007s
[2019-08-26 22:12:03,636] - [train.py line:80] : ======validate =====
[2019-08-26 22:12:08,231] - [train.py line:91] : corret:7631total10000
[2019-08-26 22:12:08,231] - [train.py line:93] :    == test loss: 0.907 | test acc: 76.310%
[2019-08-26 22:12:08,276] - [train.py line:36] : ====Epoch:[167/300]====
[2019-08-26 22:12:29,761] - [train.py line:61] :    == step: [100/391], train loss: 0.053 | train acc: 99.594% | lr: 0.001000
[2019-08-26 22:12:51,031] - [train.py line:61] :    == step: [200/391], train loss: 0.054 | train acc: 99.598% | lr: 0.001000
[2019-08-26 22:13:12,353] - [train.py line:61] :    == step: [300/391], train loss: 0.055 | train acc: 99.542% | lr: 0.001000
[2019-08-26 22:13:31,784] - [train.py line:64] :    == cost time: 83.5087s
[2019-08-26 22:13:31,786] - [train.py line:36] : ====Epoch:[168/300]====
[2019-08-26 22:13:53,319] - [train.py line:61] :    == step: [100/391], train loss: 0.054 | train acc: 99.625% | lr: 0.001000
[2019-08-26 22:14:14,694] - [train.py line:61] :    == step: [200/391], train loss: 0.054 | train acc: 99.613% | lr: 0.001000
[2019-08-26 22:14:35,911] - [train.py line:61] :    == step: [300/391], train loss: 0.054 | train acc: 99.612% | lr: 0.001000
[2019-08-26 22:14:55,305] - [train.py line:64] :    == cost time: 83.5194s
[2019-08-26 22:14:55,307] - [train.py line:80] : ======validate =====
[2019-08-26 22:14:59,915] - [train.py line:91] : corret:7612total10000
[2019-08-26 22:14:59,915] - [train.py line:93] :    == test loss: 0.903 | test acc: 76.120%
[2019-08-26 22:14:59,965] - [train.py line:36] : ====Epoch:[169/300]====
[2019-08-26 22:15:21,522] - [train.py line:61] :    == step: [100/391], train loss: 0.052 | train acc: 99.617% | lr: 0.001000
[2019-08-26 22:15:42,910] - [train.py line:61] :    == step: [200/391], train loss: 0.052 | train acc: 99.594% | lr: 0.001000
[2019-08-26 22:16:04,259] - [train.py line:61] :    == step: [300/391], train loss: 0.052 | train acc: 99.573% | lr: 0.001000
[2019-08-26 22:16:23,680] - [train.py line:64] :    == cost time: 83.7177s
[2019-08-26 22:16:23,683] - [train.py line:36] : ====Epoch:[170/300]====
[2019-08-26 22:16:45,089] - [train.py line:61] :    == step: [100/391], train loss: 0.051 | train acc: 99.727% | lr: 0.001000
[2019-08-26 22:17:06,380] - [train.py line:61] :    == step: [200/391], train loss: 0.052 | train acc: 99.617% | lr: 0.001000
[2019-08-26 22:17:27,706] - [train.py line:61] :    == step: [300/391], train loss: 0.052 | train acc: 99.646% | lr: 0.001000
[2019-08-26 22:17:47,119] - [train.py line:64] :    == cost time: 83.4371s
[2019-08-26 22:17:47,120] - [train.py line:80] : ======validate =====
[2019-08-26 22:17:51,728] - [train.py line:91] : corret:7620total10000
[2019-08-26 22:17:51,728] - [train.py line:93] :    == test loss: 0.908 | test acc: 76.200%
[2019-08-26 22:17:51,780] - [train.py line:36] : ====Epoch:[171/300]====
[2019-08-26 22:18:13,396] - [train.py line:61] :    == step: [100/391], train loss: 0.050 | train acc: 99.688% | lr: 0.001000
[2019-08-26 22:18:34,781] - [train.py line:61] :    == step: [200/391], train loss: 0.051 | train acc: 99.684% | lr: 0.001000
[2019-08-26 22:18:56,194] - [train.py line:61] :    == step: [300/391], train loss: 0.051 | train acc: 99.659% | lr: 0.001000
[2019-08-26 22:19:15,605] - [train.py line:64] :    == cost time: 83.8272s
[2019-08-26 22:19:15,608] - [train.py line:36] : ====Epoch:[172/300]====
[2019-08-26 22:19:37,179] - [train.py line:61] :    == step: [100/391], train loss: 0.049 | train acc: 99.664% | lr: 0.001000
[2019-08-26 22:19:58,685] - [train.py line:61] :    == step: [200/391], train loss: 0.049 | train acc: 99.676% | lr: 0.001000
[2019-08-26 22:20:19,988] - [train.py line:61] :    == step: [300/391], train loss: 0.051 | train acc: 99.620% | lr: 0.001000
[2019-08-26 22:20:39,270] - [train.py line:64] :    == cost time: 83.6634s
[2019-08-26 22:20:39,272] - [train.py line:80] : ======validate =====
[2019-08-26 22:20:43,883] - [train.py line:91] : corret:7584total10000
[2019-08-26 22:20:43,883] - [train.py line:93] :    == test loss: 0.904 | test acc: 75.840%
[2019-08-26 22:20:43,929] - [train.py line:36] : ====Epoch:[173/300]====
[2019-08-26 22:21:05,441] - [train.py line:61] :    == step: [100/391], train loss: 0.050 | train acc: 99.609% | lr: 0.001000
[2019-08-26 22:21:27,031] - [train.py line:61] :    == step: [200/391], train loss: 0.050 | train acc: 99.641% | lr: 0.001000
[2019-08-26 22:21:48,540] - [train.py line:61] :    == step: [300/391], train loss: 0.050 | train acc: 99.630% | lr: 0.001000
[2019-08-26 22:22:08,076] - [train.py line:64] :    == cost time: 84.1486s
[2019-08-26 22:22:08,078] - [train.py line:36] : ====Epoch:[174/300]====
[2019-08-26 22:22:29,815] - [train.py line:61] :    == step: [100/391], train loss: 0.049 | train acc: 99.734% | lr: 0.001000
[2019-08-26 22:22:51,351] - [train.py line:61] :    == step: [200/391], train loss: 0.050 | train acc: 99.621% | lr: 0.001000
[2019-08-26 22:23:12,890] - [train.py line:61] :    == step: [300/391], train loss: 0.051 | train acc: 99.596% | lr: 0.001000
[2019-08-26 22:23:32,385] - [train.py line:64] :    == cost time: 84.3085s
[2019-08-26 22:23:32,387] - [train.py line:80] : ======validate =====
[2019-08-26 22:23:37,043] - [train.py line:91] : corret:7619total10000
[2019-08-26 22:23:37,044] - [train.py line:93] :    == test loss: 0.906 | test acc: 76.190%
[2019-08-26 22:23:37,092] - [train.py line:36] : ====Epoch:[175/300]====
[2019-08-26 22:23:58,811] - [train.py line:61] :    == step: [100/391], train loss: 0.050 | train acc: 99.688% | lr: 0.001000
[2019-08-26 22:24:20,206] - [train.py line:61] :    == step: [200/391], train loss: 0.049 | train acc: 99.695% | lr: 0.001000
[2019-08-26 22:24:41,681] - [train.py line:61] :    == step: [300/391], train loss: 0.050 | train acc: 99.664% | lr: 0.001000
[2019-08-26 22:25:01,305] - [train.py line:64] :    == cost time: 84.2147s
[2019-08-26 22:25:01,307] - [train.py line:36] : ====Epoch:[176/300]====
[2019-08-26 22:25:22,893] - [train.py line:61] :    == step: [100/391], train loss: 0.048 | train acc: 99.742% | lr: 0.001000
[2019-08-26 22:25:44,230] - [train.py line:61] :    == step: [200/391], train loss: 0.048 | train acc: 99.672% | lr: 0.001000
[2019-08-26 22:26:05,743] - [train.py line:61] :    == step: [300/391], train loss: 0.049 | train acc: 99.656% | lr: 0.001000
[2019-08-26 22:26:25,337] - [train.py line:64] :    == cost time: 84.0313s
[2019-08-26 22:26:25,339] - [train.py line:80] : ======validate =====
[2019-08-26 22:26:30,051] - [train.py line:91] : corret:7575total10000
[2019-08-26 22:26:30,052] - [train.py line:93] :    == test loss: 0.926 | test acc: 75.750%
[2019-08-26 22:26:30,097] - [train.py line:36] : ====Epoch:[177/300]====
[2019-08-26 22:26:51,505] - [train.py line:61] :    == step: [100/391], train loss: 0.045 | train acc: 99.602% | lr: 0.001000
[2019-08-26 22:27:12,873] - [train.py line:61] :    == step: [200/391], train loss: 0.048 | train acc: 99.617% | lr: 0.001000
[2019-08-26 22:27:34,250] - [train.py line:61] :    == step: [300/391], train loss: 0.048 | train acc: 99.617% | lr: 0.001000
[2019-08-26 22:27:53,734] - [train.py line:64] :    == cost time: 83.6379s
[2019-08-26 22:27:53,736] - [train.py line:36] : ====Epoch:[178/300]====
[2019-08-26 22:28:15,307] - [train.py line:61] :    == step: [100/391], train loss: 0.047 | train acc: 99.680% | lr: 0.001000
[2019-08-26 22:28:36,773] - [train.py line:61] :    == step: [200/391], train loss: 0.048 | train acc: 99.676% | lr: 0.001000
[2019-08-26 22:28:58,234] - [train.py line:61] :    == step: [300/391], train loss: 0.048 | train acc: 99.677% | lr: 0.001000
[2019-08-26 22:29:17,758] - [train.py line:64] :    == cost time: 84.0231s
[2019-08-26 22:29:17,761] - [train.py line:80] : ======validate =====
[2019-08-26 22:29:22,426] - [train.py line:91] : corret:7599total10000
[2019-08-26 22:29:22,427] - [train.py line:93] :    == test loss: 0.913 | test acc: 75.990%
[2019-08-26 22:29:22,472] - [train.py line:36] : ====Epoch:[179/300]====
[2019-08-26 22:29:44,048] - [train.py line:61] :    == step: [100/391], train loss: 0.047 | train acc: 99.625% | lr: 0.001000
[2019-08-26 22:30:05,412] - [train.py line:61] :    == step: [200/391], train loss: 0.048 | train acc: 99.660% | lr: 0.001000
[2019-08-26 22:30:26,740] - [train.py line:61] :    == step: [300/391], train loss: 0.047 | train acc: 99.690% | lr: 0.001000
[2019-08-26 22:30:46,099] - [train.py line:64] :    == cost time: 83.6273s
[2019-08-26 22:30:46,100] - [train.py line:36] : ====Epoch:[180/300]====
[2019-08-26 22:31:07,738] - [train.py line:61] :    == step: [100/391], train loss: 0.046 | train acc: 99.688% | lr: 0.001000
[2019-08-26 22:31:29,188] - [train.py line:61] :    == step: [200/391], train loss: 0.046 | train acc: 99.676% | lr: 0.001000
[2019-08-26 22:31:50,601] - [train.py line:61] :    == step: [300/391], train loss: 0.047 | train acc: 99.674% | lr: 0.001000
[2019-08-26 22:32:10,239] - [train.py line:64] :    == cost time: 84.1392s
[2019-08-26 22:32:10,241] - [train.py line:80] : ======validate =====
[2019-08-26 22:32:14,904] - [train.py line:91] : corret:7623total10000
[2019-08-26 22:32:14,904] - [train.py line:93] :    == test loss: 0.914 | test acc: 76.230%
[2019-08-26 22:32:14,950] - [train.py line:36] : ====Epoch:[181/300]====
[2019-08-26 22:32:36,521] - [train.py line:61] :    == step: [100/391], train loss: 0.047 | train acc: 99.625% | lr: 0.001000
[2019-08-26 22:32:57,962] - [train.py line:61] :    == step: [200/391], train loss: 0.046 | train acc: 99.703% | lr: 0.001000
[2019-08-26 22:33:19,367] - [train.py line:61] :    == step: [300/391], train loss: 0.047 | train acc: 99.703% | lr: 0.001000
[2019-08-26 22:33:38,755] - [train.py line:64] :    == cost time: 83.8061s
[2019-08-26 22:33:38,757] - [train.py line:36] : ====Epoch:[182/300]====
[2019-08-26 22:34:00,131] - [train.py line:61] :    == step: [100/391], train loss: 0.046 | train acc: 99.781% | lr: 0.001000
[2019-08-26 22:34:21,503] - [train.py line:61] :    == step: [200/391], train loss: 0.045 | train acc: 99.762% | lr: 0.001000
[2019-08-26 22:34:42,908] - [train.py line:61] :    == step: [300/391], train loss: 0.046 | train acc: 99.745% | lr: 0.001000
[2019-08-26 22:35:02,300] - [train.py line:64] :    == cost time: 83.5436s
[2019-08-26 22:35:02,302] - [train.py line:80] : ======validate =====
[2019-08-26 22:35:06,939] - [train.py line:91] : corret:7627total10000
[2019-08-26 22:35:06,940] - [train.py line:93] :    == test loss: 0.913 | test acc: 76.270%
[2019-08-26 22:35:06,985] - [train.py line:36] : ====Epoch:[183/300]====
[2019-08-26 22:35:28,543] - [train.py line:61] :    == step: [100/391], train loss: 0.044 | train acc: 99.773% | lr: 0.001000
[2019-08-26 22:35:50,000] - [train.py line:61] :    == step: [200/391], train loss: 0.045 | train acc: 99.746% | lr: 0.001000
[2019-08-26 22:36:11,426] - [train.py line:61] :    == step: [300/391], train loss: 0.045 | train acc: 99.760% | lr: 0.001000
[2019-08-26 22:36:30,962] - [train.py line:64] :    == cost time: 83.9777s
[2019-08-26 22:36:30,964] - [train.py line:36] : ====Epoch:[184/300]====
[2019-08-26 22:36:52,631] - [train.py line:61] :    == step: [100/391], train loss: 0.047 | train acc: 99.789% | lr: 0.001000
[2019-08-26 22:37:14,048] - [train.py line:61] :    == step: [200/391], train loss: 0.046 | train acc: 99.750% | lr: 0.001000
[2019-08-26 22:37:35,554] - [train.py line:61] :    == step: [300/391], train loss: 0.046 | train acc: 99.740% | lr: 0.001000
[2019-08-26 22:37:54,947] - [train.py line:64] :    == cost time: 83.9839s
[2019-08-26 22:37:54,949] - [train.py line:80] : ======validate =====
[2019-08-26 22:37:59,586] - [train.py line:91] : corret:7589total10000
[2019-08-26 22:37:59,586] - [train.py line:93] :    == test loss: 0.925 | test acc: 75.890%
[2019-08-26 22:37:59,633] - [train.py line:36] : ====Epoch:[185/300]====
[2019-08-26 22:38:21,222] - [train.py line:61] :    == step: [100/391], train loss: 0.045 | train acc: 99.703% | lr: 0.001000
[2019-08-26 22:38:42,585] - [train.py line:61] :    == step: [200/391], train loss: 0.045 | train acc: 99.711% | lr: 0.001000
[2019-08-26 22:39:03,922] - [train.py line:61] :    == step: [300/391], train loss: 0.045 | train acc: 99.740% | lr: 0.001000
[2019-08-26 22:39:23,255] - [train.py line:64] :    == cost time: 83.6239s
[2019-08-26 22:39:23,256] - [train.py line:36] : ====Epoch:[186/300]====
[2019-08-26 22:39:44,785] - [train.py line:61] :    == step: [100/391], train loss: 0.045 | train acc: 99.711% | lr: 0.001000
[2019-08-26 22:40:06,193] - [train.py line:61] :    == step: [200/391], train loss: 0.045 | train acc: 99.723% | lr: 0.001000
[2019-08-26 22:40:27,581] - [train.py line:61] :    == step: [300/391], train loss: 0.045 | train acc: 99.719% | lr: 0.001000
[2019-08-26 22:40:46,938] - [train.py line:64] :    == cost time: 83.6830s
[2019-08-26 22:40:46,940] - [train.py line:80] : ======validate =====
[2019-08-26 22:40:51,513] - [train.py line:91] : corret:7599total10000
[2019-08-26 22:40:51,513] - [train.py line:93] :    == test loss: 0.921 | test acc: 75.990%
[2019-08-26 22:40:51,564] - [train.py line:36] : ====Epoch:[187/300]====
[2019-08-26 22:41:13,043] - [train.py line:61] :    == step: [100/391], train loss: 0.043 | train acc: 99.758% | lr: 0.001000
[2019-08-26 22:41:34,328] - [train.py line:61] :    == step: [200/391], train loss: 0.044 | train acc: 99.758% | lr: 0.001000
[2019-08-26 22:41:56,045] - [train.py line:61] :    == step: [300/391], train loss: 0.044 | train acc: 99.742% | lr: 0.001000
[2019-08-26 22:42:15,737] - [train.py line:64] :    == cost time: 84.1746s
[2019-08-26 22:42:15,739] - [train.py line:36] : ====Epoch:[188/300]====
[2019-08-26 22:42:37,329] - [train.py line:61] :    == step: [100/391], train loss: 0.044 | train acc: 99.680% | lr: 0.001000
[2019-08-26 22:42:59,047] - [train.py line:61] :    == step: [200/391], train loss: 0.044 | train acc: 99.719% | lr: 0.001000
[2019-08-26 22:43:20,528] - [train.py line:61] :    == step: [300/391], train loss: 0.044 | train acc: 99.719% | lr: 0.001000
[2019-08-26 22:43:40,159] - [train.py line:64] :    == cost time: 84.4216s
[2019-08-26 22:43:40,162] - [train.py line:80] : ======validate =====
[2019-08-26 22:43:44,873] - [train.py line:91] : corret:7590total10000
[2019-08-26 22:43:44,873] - [train.py line:93] :    == test loss: 0.920 | test acc: 75.900%
[2019-08-26 22:43:44,923] - [train.py line:36] : ====Epoch:[189/300]====
[2019-08-26 22:44:06,777] - [train.py line:61] :    == step: [100/391], train loss: 0.043 | train acc: 99.742% | lr: 0.001000
[2019-08-26 22:44:28,489] - [train.py line:61] :    == step: [200/391], train loss: 0.043 | train acc: 99.758% | lr: 0.001000
[2019-08-26 22:44:49,902] - [train.py line:61] :    == step: [300/391], train loss: 0.044 | train acc: 99.721% | lr: 0.001000
[2019-08-26 22:45:09,686] - [train.py line:64] :    == cost time: 84.7638s
[2019-08-26 22:45:09,688] - [train.py line:36] : ====Epoch:[190/300]====
[2019-08-26 22:45:31,274] - [train.py line:61] :    == step: [100/391], train loss: 0.043 | train acc: 99.742% | lr: 0.001000
[2019-08-26 22:45:52,590] - [train.py line:61] :    == step: [200/391], train loss: 0.044 | train acc: 99.707% | lr: 0.001000
[2019-08-26 22:46:13,903] - [train.py line:61] :    == step: [300/391], train loss: 0.044 | train acc: 99.742% | lr: 0.001000
[2019-08-26 22:46:33,323] - [train.py line:64] :    == cost time: 83.6367s
[2019-08-26 22:46:33,325] - [train.py line:80] : ======validate =====
[2019-08-26 22:46:37,957] - [train.py line:91] : corret:7591total10000
[2019-08-26 22:46:37,958] - [train.py line:93] :    == test loss: 0.930 | test acc: 75.910%
[2019-08-26 22:46:38,006] - [train.py line:36] : ====Epoch:[191/300]====
[2019-08-26 22:46:59,489] - [train.py line:61] :    == step: [100/391], train loss: 0.042 | train acc: 99.703% | lr: 0.001000
[2019-08-26 22:47:20,735] - [train.py line:61] :    == step: [200/391], train loss: 0.043 | train acc: 99.750% | lr: 0.001000
[2019-08-26 22:47:42,058] - [train.py line:61] :    == step: [300/391], train loss: 0.043 | train acc: 99.755% | lr: 0.001000
[2019-08-26 22:48:01,424] - [train.py line:64] :    == cost time: 83.4188s
[2019-08-26 22:48:01,426] - [train.py line:36] : ====Epoch:[192/300]====
[2019-08-26 22:48:22,901] - [train.py line:61] :    == step: [100/391], train loss: 0.044 | train acc: 99.719% | lr: 0.001000
[2019-08-26 22:48:44,290] - [train.py line:61] :    == step: [200/391], train loss: 0.043 | train acc: 99.750% | lr: 0.001000
[2019-08-26 22:49:05,669] - [train.py line:61] :    == step: [300/391], train loss: 0.043 | train acc: 99.745% | lr: 0.001000
[2019-08-26 22:49:25,075] - [train.py line:64] :    == cost time: 83.6503s
[2019-08-26 22:49:25,077] - [train.py line:80] : ======validate =====
[2019-08-26 22:49:29,667] - [train.py line:91] : corret:7618total10000
[2019-08-26 22:49:29,667] - [train.py line:93] :    == test loss: 0.922 | test acc: 76.180%
[2019-08-26 22:49:29,715] - [train.py line:36] : ====Epoch:[193/300]====
[2019-08-26 22:49:51,331] - [train.py line:61] :    == step: [100/391], train loss: 0.042 | train acc: 99.789% | lr: 0.001000
[2019-08-26 22:50:12,614] - [train.py line:61] :    == step: [200/391], train loss: 0.042 | train acc: 99.777% | lr: 0.001000
[2019-08-26 22:50:33,955] - [train.py line:61] :    == step: [300/391], train loss: 0.042 | train acc: 99.766% | lr: 0.001000
[2019-08-26 22:50:53,330] - [train.py line:64] :    == cost time: 83.6169s
[2019-08-26 22:50:53,333] - [train.py line:36] : ====Epoch:[194/300]====
[2019-08-26 22:51:14,831] - [train.py line:61] :    == step: [100/391], train loss: 0.041 | train acc: 99.742% | lr: 0.001000
[2019-08-26 22:51:36,163] - [train.py line:61] :    == step: [200/391], train loss: 0.041 | train acc: 99.754% | lr: 0.001000
[2019-08-26 22:51:57,593] - [train.py line:61] :    == step: [300/391], train loss: 0.042 | train acc: 99.729% | lr: 0.001000
[2019-08-26 22:52:17,027] - [train.py line:64] :    == cost time: 83.6951s
[2019-08-26 22:52:17,029] - [train.py line:80] : ======validate =====
[2019-08-26 22:52:21,686] - [train.py line:91] : corret:7597total10000
[2019-08-26 22:52:21,686] - [train.py line:93] :    == test loss: 0.929 | test acc: 75.970%
[2019-08-26 22:52:21,721] - [train.py line:36] : ====Epoch:[195/300]====
[2019-08-26 22:52:43,363] - [train.py line:61] :    == step: [100/391], train loss: 0.042 | train acc: 99.766% | lr: 0.001000
[2019-08-26 22:53:04,717] - [train.py line:61] :    == step: [200/391], train loss: 0.043 | train acc: 99.742% | lr: 0.001000
[2019-08-26 22:53:26,055] - [train.py line:61] :    == step: [300/391], train loss: 0.043 | train acc: 99.758% | lr: 0.001000
[2019-08-26 22:53:45,397] - [train.py line:64] :    == cost time: 83.6775s
[2019-08-26 22:53:45,399] - [train.py line:36] : ====Epoch:[196/300]====
[2019-08-26 22:54:07,172] - [train.py line:61] :    == step: [100/391], train loss: 0.041 | train acc: 99.750% | lr: 0.001000
[2019-08-26 22:54:28,765] - [train.py line:61] :    == step: [200/391], train loss: 0.042 | train acc: 99.793% | lr: 0.001000
[2019-08-26 22:54:50,320] - [train.py line:61] :    == step: [300/391], train loss: 0.042 | train acc: 99.771% | lr: 0.001000
[2019-08-26 22:55:09,972] - [train.py line:64] :    == cost time: 84.5737s
[2019-08-26 22:55:09,974] - [train.py line:80] : ======validate =====
[2019-08-26 22:55:14,621] - [train.py line:91] : corret:7620total10000
[2019-08-26 22:55:14,621] - [train.py line:93] :    == test loss: 0.928 | test acc: 76.200%
[2019-08-26 22:55:14,667] - [train.py line:36] : ====Epoch:[197/300]====
[2019-08-26 22:55:36,516] - [train.py line:61] :    == step: [100/391], train loss: 0.043 | train acc: 99.773% | lr: 0.001000
[2019-08-26 22:55:57,973] - [train.py line:61] :    == step: [200/391], train loss: 0.043 | train acc: 99.797% | lr: 0.001000
[2019-08-26 22:56:19,581] - [train.py line:61] :    == step: [300/391], train loss: 0.043 | train acc: 99.786% | lr: 0.001000
[2019-08-26 22:56:39,228] - [train.py line:64] :    == cost time: 84.5619s
[2019-08-26 22:56:39,231] - [train.py line:36] : ====Epoch:[198/300]====
[2019-08-26 22:57:00,843] - [train.py line:61] :    == step: [100/391], train loss: 0.041 | train acc: 99.781% | lr: 0.001000
[2019-08-26 22:57:22,077] - [train.py line:61] :    == step: [200/391], train loss: 0.041 | train acc: 99.797% | lr: 0.001000
[2019-08-26 22:57:43,704] - [train.py line:61] :    == step: [300/391], train loss: 0.042 | train acc: 99.779% | lr: 0.001000
[2019-08-26 22:58:03,326] - [train.py line:64] :    == cost time: 84.0971s
[2019-08-26 22:58:03,328] - [train.py line:80] : ======validate =====
[2019-08-26 22:58:08,001] - [train.py line:91] : corret:7581total10000
[2019-08-26 22:58:08,001] - [train.py line:93] :    == test loss: 0.935 | test acc: 75.810%
[2019-08-26 22:58:08,050] - [train.py line:36] : ====Epoch:[199/300]====
[2019-08-26 22:58:29,788] - [train.py line:61] :    == step: [100/391], train loss: 0.043 | train acc: 99.742% | lr: 0.001000
[2019-08-26 22:58:51,518] - [train.py line:61] :    == step: [200/391], train loss: 0.042 | train acc: 99.773% | lr: 0.001000
[2019-08-26 22:59:13,128] - [train.py line:61] :    == step: [300/391], train loss: 0.043 | train acc: 99.781% | lr: 0.001000
[2019-08-26 22:59:32,691] - [train.py line:64] :    == cost time: 84.6422s
[2019-08-26 22:59:32,693] - [train.py line:36] : ====Epoch:[200/300]====
[2019-08-26 22:59:54,372] - [train.py line:61] :    == step: [100/391], train loss: 0.041 | train acc: 99.820% | lr: 0.001000
[2019-08-26 23:00:15,982] - [train.py line:61] :    == step: [200/391], train loss: 0.041 | train acc: 99.809% | lr: 0.001000
[2019-08-26 23:00:37,417] - [train.py line:61] :    == step: [300/391], train loss: 0.041 | train acc: 99.794% | lr: 0.001000
[2019-08-26 23:00:56,770] - [train.py line:64] :    == cost time: 84.0779s
[2019-08-26 23:00:56,772] - [train.py line:80] : ======validate =====
[2019-08-26 23:01:01,360] - [train.py line:91] : corret:7575total10000
[2019-08-26 23:01:01,361] - [train.py line:93] :    == test loss: 0.936 | test acc: 75.750%
[2019-08-26 23:01:01,408] - [train.py line:36] : ====Epoch:[201/300]====
[2019-08-26 23:01:22,905] - [train.py line:61] :    == step: [100/391], train loss: 0.040 | train acc: 99.836% | lr: 0.000100
[2019-08-26 23:01:44,211] - [train.py line:61] :    == step: [200/391], train loss: 0.040 | train acc: 99.832% | lr: 0.000100
[2019-08-26 23:02:05,639] - [train.py line:61] :    == step: [300/391], train loss: 0.040 | train acc: 99.836% | lr: 0.000100
[2019-08-26 23:02:25,137] - [train.py line:64] :    == cost time: 83.7306s
[2019-08-26 23:02:25,139] - [train.py line:36] : ====Epoch:[202/300]====
[2019-08-26 23:02:46,690] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.820% | lr: 0.000100
[2019-08-26 23:03:08,151] - [train.py line:61] :    == step: [200/391], train loss: 0.039 | train acc: 99.820% | lr: 0.000100
[2019-08-26 23:03:29,559] - [train.py line:61] :    == step: [300/391], train loss: 0.039 | train acc: 99.823% | lr: 0.000100
[2019-08-26 23:03:48,950] - [train.py line:64] :    == cost time: 83.8121s
[2019-08-26 23:03:48,952] - [train.py line:80] : ======validate =====
[2019-08-26 23:03:53,549] - [train.py line:91] : corret:7590total10000
[2019-08-26 23:03:53,549] - [train.py line:93] :    == test loss: 0.936 | test acc: 75.900%
[2019-08-26 23:03:53,587] - [train.py line:36] : ====Epoch:[203/300]====
[2019-08-26 23:04:15,174] - [train.py line:61] :    == step: [100/391], train loss: 0.040 | train acc: 99.844% | lr: 0.000100
[2019-08-26 23:04:36,413] - [train.py line:61] :    == step: [200/391], train loss: 0.040 | train acc: 99.848% | lr: 0.000100
[2019-08-26 23:04:57,691] - [train.py line:61] :    == step: [300/391], train loss: 0.040 | train acc: 99.815% | lr: 0.000100
[2019-08-26 23:05:17,115] - [train.py line:64] :    == cost time: 83.5287s
[2019-08-26 23:05:17,117] - [train.py line:36] : ====Epoch:[204/300]====
[2019-08-26 23:05:38,632] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.836% | lr: 0.000100
[2019-08-26 23:06:00,001] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.820% | lr: 0.000100
[2019-08-26 23:06:21,459] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.818% | lr: 0.000100
[2019-08-26 23:06:40,876] - [train.py line:64] :    == cost time: 83.7600s
[2019-08-26 23:06:40,878] - [train.py line:80] : ======validate =====
[2019-08-26 23:06:45,475] - [train.py line:91] : corret:7615total10000
[2019-08-26 23:06:45,475] - [train.py line:93] :    == test loss: 0.922 | test acc: 76.150%
[2019-08-26 23:06:45,521] - [train.py line:36] : ====Epoch:[205/300]====
[2019-08-26 23:07:06,871] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.812% | lr: 0.000100
[2019-08-26 23:07:28,213] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.848% | lr: 0.000100
[2019-08-26 23:07:49,680] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.844% | lr: 0.000100
[2019-08-26 23:08:09,173] - [train.py line:64] :    == cost time: 83.6528s
[2019-08-26 23:08:09,175] - [train.py line:36] : ====Epoch:[206/300]====
[2019-08-26 23:08:30,769] - [train.py line:61] :    == step: [100/391], train loss: 0.040 | train acc: 99.789% | lr: 0.000100
[2019-08-26 23:08:52,144] - [train.py line:61] :    == step: [200/391], train loss: 0.039 | train acc: 99.801% | lr: 0.000100
[2019-08-26 23:09:13,777] - [train.py line:61] :    == step: [300/391], train loss: 0.039 | train acc: 99.815% | lr: 0.000100
[2019-08-26 23:09:33,127] - [train.py line:64] :    == cost time: 83.9529s
[2019-08-26 23:09:33,129] - [train.py line:80] : ======validate =====
[2019-08-26 23:09:37,738] - [train.py line:91] : corret:7584total10000
[2019-08-26 23:09:37,738] - [train.py line:93] :    == test loss: 0.923 | test acc: 75.840%
[2019-08-26 23:09:37,811] - [train.py line:36] : ====Epoch:[207/300]====
[2019-08-26 23:09:59,280] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.867% | lr: 0.000100
[2019-08-26 23:10:20,597] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.871% | lr: 0.000100
[2019-08-26 23:10:41,952] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.841% | lr: 0.000100
[2019-08-26 23:11:01,413] - [train.py line:64] :    == cost time: 83.6037s
[2019-08-26 23:11:01,415] - [train.py line:36] : ====Epoch:[208/300]====
[2019-08-26 23:11:22,910] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.891% | lr: 0.000100
[2019-08-26 23:11:44,140] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.848% | lr: 0.000100
[2019-08-26 23:12:05,478] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.857% | lr: 0.000100
[2019-08-26 23:12:24,928] - [train.py line:64] :    == cost time: 83.5136s
[2019-08-26 23:12:24,930] - [train.py line:80] : ======validate =====
[2019-08-26 23:12:29,602] - [train.py line:91] : corret:7575total10000
[2019-08-26 23:12:29,602] - [train.py line:93] :    == test loss: 0.936 | test acc: 75.750%
[2019-08-26 23:12:29,642] - [train.py line:36] : ====Epoch:[209/300]====
[2019-08-26 23:12:51,156] - [train.py line:61] :    == step: [100/391], train loss: 0.039 | train acc: 99.844% | lr: 0.000100
[2019-08-26 23:13:12,541] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.855% | lr: 0.000100
[2019-08-26 23:13:34,381] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.852% | lr: 0.000100
[2019-08-26 23:13:53,728] - [train.py line:64] :    == cost time: 84.0872s
[2019-08-26 23:13:53,730] - [train.py line:36] : ====Epoch:[210/300]====
[2019-08-26 23:14:15,135] - [train.py line:61] :    == step: [100/391], train loss: 0.039 | train acc: 99.797% | lr: 0.000100
[2019-08-26 23:14:36,502] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.832% | lr: 0.000100
[2019-08-26 23:14:57,770] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.833% | lr: 0.000100
[2019-08-26 23:15:17,092] - [train.py line:64] :    == cost time: 83.3631s
[2019-08-26 23:15:17,094] - [train.py line:80] : ======validate =====
[2019-08-26 23:15:21,680] - [train.py line:91] : corret:7575total10000
[2019-08-26 23:15:21,681] - [train.py line:93] :    == test loss: 0.931 | test acc: 75.750%
[2019-08-26 23:15:21,730] - [train.py line:36] : ====Epoch:[211/300]====
[2019-08-26 23:15:43,132] - [train.py line:61] :    == step: [100/391], train loss: 0.039 | train acc: 99.781% | lr: 0.000100
[2019-08-26 23:16:04,431] - [train.py line:61] :    == step: [200/391], train loss: 0.039 | train acc: 99.809% | lr: 0.000100
[2019-08-26 23:16:25,775] - [train.py line:61] :    == step: [300/391], train loss: 0.039 | train acc: 99.815% | lr: 0.000100
[2019-08-26 23:16:45,125] - [train.py line:64] :    == cost time: 83.3964s
[2019-08-26 23:16:45,127] - [train.py line:36] : ====Epoch:[212/300]====
[2019-08-26 23:17:06,528] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.875% | lr: 0.000100
[2019-08-26 23:17:27,895] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.867% | lr: 0.000100
[2019-08-26 23:17:49,488] - [train.py line:61] :    == step: [300/391], train loss: 0.039 | train acc: 99.846% | lr: 0.000100
[2019-08-26 23:18:09,093] - [train.py line:64] :    == cost time: 83.9672s
[2019-08-26 23:18:09,095] - [train.py line:80] : ======validate =====
[2019-08-26 23:18:13,737] - [train.py line:91] : corret:7605total10000
[2019-08-26 23:18:13,738] - [train.py line:93] :    == test loss: 0.921 | test acc: 76.050%
[2019-08-26 23:18:13,784] - [train.py line:36] : ====Epoch:[213/300]====
[2019-08-26 23:18:35,668] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.852% | lr: 0.000100
[2019-08-26 23:18:57,494] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.875% | lr: 0.000100
[2019-08-26 23:19:19,235] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.849% | lr: 0.000100
[2019-08-26 23:19:38,967] - [train.py line:64] :    == cost time: 85.1840s
[2019-08-26 23:19:38,969] - [train.py line:36] : ====Epoch:[214/300]====
[2019-08-26 23:20:00,581] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.859% | lr: 0.000100
[2019-08-26 23:20:21,954] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.797% | lr: 0.000100
[2019-08-26 23:20:43,254] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.810% | lr: 0.000100
[2019-08-26 23:21:02,594] - [train.py line:64] :    == cost time: 83.6269s
[2019-08-26 23:21:02,597] - [train.py line:80] : ======validate =====
[2019-08-26 23:21:07,210] - [train.py line:91] : corret:7588total10000
[2019-08-26 23:21:07,210] - [train.py line:93] :    == test loss: 0.931 | test acc: 75.880%
[2019-08-26 23:21:07,256] - [train.py line:36] : ====Epoch:[215/300]====
[2019-08-26 23:21:28,789] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.859% | lr: 0.000100
[2019-08-26 23:21:50,119] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.863% | lr: 0.000100
[2019-08-26 23:22:11,418] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.862% | lr: 0.000100
[2019-08-26 23:22:30,778] - [train.py line:64] :    == cost time: 83.5240s
[2019-08-26 23:22:30,781] - [train.py line:36] : ====Epoch:[216/300]====
[2019-08-26 23:22:52,352] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.828% | lr: 0.000100
[2019-08-26 23:23:13,787] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.855% | lr: 0.000100
[2019-08-26 23:23:35,251] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.854% | lr: 0.000100
[2019-08-26 23:23:54,722] - [train.py line:64] :    == cost time: 83.9422s
[2019-08-26 23:23:54,724] - [train.py line:80] : ======validate =====
[2019-08-26 23:23:59,360] - [train.py line:91] : corret:7589total10000
[2019-08-26 23:23:59,361] - [train.py line:93] :    == test loss: 0.932 | test acc: 75.890%
[2019-08-26 23:23:59,396] - [train.py line:36] : ====Epoch:[217/300]====
[2019-08-26 23:24:20,787] - [train.py line:61] :    == step: [100/391], train loss: 0.040 | train acc: 99.773% | lr: 0.000100
[2019-08-26 23:24:42,029] - [train.py line:61] :    == step: [200/391], train loss: 0.039 | train acc: 99.793% | lr: 0.000100
[2019-08-26 23:25:03,495] - [train.py line:61] :    == step: [300/391], train loss: 0.039 | train acc: 99.799% | lr: 0.000100
[2019-08-26 23:25:23,167] - [train.py line:64] :    == cost time: 83.7720s
[2019-08-26 23:25:23,169] - [train.py line:36] : ====Epoch:[218/300]====
[2019-08-26 23:25:44,937] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.844% | lr: 0.000100
[2019-08-26 23:26:06,364] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.859% | lr: 0.000100
[2019-08-26 23:26:27,878] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.836% | lr: 0.000100
[2019-08-26 23:26:47,452] - [train.py line:64] :    == cost time: 84.2840s
[2019-08-26 23:26:47,454] - [train.py line:80] : ======validate =====
[2019-08-26 23:26:52,101] - [train.py line:91] : corret:7630total10000
[2019-08-26 23:26:52,102] - [train.py line:93] :    == test loss: 0.926 | test acc: 76.300%
[2019-08-26 23:26:52,148] - [train.py line:36] : ====Epoch:[219/300]====
[2019-08-26 23:27:13,796] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.844% | lr: 0.000100
[2019-08-26 23:27:35,322] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.859% | lr: 0.000100
[2019-08-26 23:27:56,871] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.841% | lr: 0.000100
[2019-08-26 23:28:16,271] - [train.py line:64] :    == cost time: 84.1247s
[2019-08-26 23:28:16,273] - [train.py line:36] : ====Epoch:[220/300]====
[2019-08-26 23:28:37,760] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.859% | lr: 0.000100
[2019-08-26 23:28:59,097] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.832% | lr: 0.000100
[2019-08-26 23:29:20,313] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.844% | lr: 0.000100
[2019-08-26 23:29:39,619] - [train.py line:64] :    == cost time: 83.3475s
[2019-08-26 23:29:39,621] - [train.py line:80] : ======validate =====
[2019-08-26 23:29:44,232] - [train.py line:91] : corret:7607total10000
[2019-08-26 23:29:44,232] - [train.py line:93] :    == test loss: 0.924 | test acc: 76.070%
[2019-08-26 23:29:44,278] - [train.py line:36] : ====Epoch:[221/300]====
[2019-08-26 23:30:05,934] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.812% | lr: 0.000100
[2019-08-26 23:30:27,447] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.812% | lr: 0.000100
[2019-08-26 23:30:48,700] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.828% | lr: 0.000100
[2019-08-26 23:31:08,290] - [train.py line:64] :    == cost time: 84.0135s
[2019-08-26 23:31:08,292] - [train.py line:36] : ====Epoch:[222/300]====
[2019-08-26 23:31:29,966] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.852% | lr: 0.000100
[2019-08-26 23:31:51,455] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.840% | lr: 0.000100
[2019-08-26 23:32:12,963] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.836% | lr: 0.000100
[2019-08-26 23:32:32,364] - [train.py line:64] :    == cost time: 84.0733s
[2019-08-26 23:32:32,366] - [train.py line:80] : ======validate =====
[2019-08-26 23:32:37,029] - [train.py line:91] : corret:7598total10000
[2019-08-26 23:32:37,030] - [train.py line:93] :    == test loss: 0.933 | test acc: 75.980%
[2019-08-26 23:32:37,077] - [train.py line:36] : ====Epoch:[223/300]====
[2019-08-26 23:32:58,689] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.836% | lr: 0.000100
[2019-08-26 23:33:20,358] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.852% | lr: 0.000100
[2019-08-26 23:33:41,973] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.841% | lr: 0.000100
[2019-08-26 23:34:01,621] - [train.py line:64] :    == cost time: 84.5453s
[2019-08-26 23:34:01,623] - [train.py line:36] : ====Epoch:[224/300]====
[2019-08-26 23:34:23,298] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.852% | lr: 0.000100
[2019-08-26 23:34:44,912] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.848% | lr: 0.000100
[2019-08-26 23:35:06,643] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.839% | lr: 0.000100
[2019-08-26 23:35:26,200] - [train.py line:64] :    == cost time: 84.5778s
[2019-08-26 23:35:26,202] - [train.py line:80] : ======validate =====
[2019-08-26 23:35:30,825] - [train.py line:91] : corret:7583total10000
[2019-08-26 23:35:30,825] - [train.py line:93] :    == test loss: 0.937 | test acc: 75.830%
[2019-08-26 23:35:30,875] - [train.py line:36] : ====Epoch:[225/300]====
[2019-08-26 23:35:52,637] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.836% | lr: 0.000100
[2019-08-26 23:36:14,298] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.863% | lr: 0.000100
[2019-08-26 23:36:35,622] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.862% | lr: 0.000100
[2019-08-26 23:36:54,935] - [train.py line:64] :    == cost time: 84.0612s
[2019-08-26 23:36:54,937] - [train.py line:36] : ====Epoch:[226/300]====
[2019-08-26 23:37:16,412] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.820% | lr: 0.000100
[2019-08-26 23:37:37,724] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.797% | lr: 0.000100
[2019-08-26 23:37:59,043] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.792% | lr: 0.000100
[2019-08-26 23:38:18,508] - [train.py line:64] :    == cost time: 83.5720s
[2019-08-26 23:38:18,510] - [train.py line:80] : ======validate =====
[2019-08-26 23:38:23,142] - [train.py line:91] : corret:7574total10000
[2019-08-26 23:38:23,142] - [train.py line:93] :    == test loss: 0.930 | test acc: 75.740%
[2019-08-26 23:38:23,191] - [train.py line:36] : ====Epoch:[227/300]====
[2019-08-26 23:38:44,597] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.812% | lr: 0.000100
[2019-08-26 23:39:05,928] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.816% | lr: 0.000100
[2019-08-26 23:39:27,339] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.820% | lr: 0.000100
[2019-08-26 23:39:46,932] - [train.py line:64] :    == cost time: 83.7420s
[2019-08-26 23:39:46,934] - [train.py line:36] : ====Epoch:[228/300]====
[2019-08-26 23:40:08,365] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.828% | lr: 0.000100
[2019-08-26 23:40:29,590] - [train.py line:61] :    == step: [200/391], train loss: 0.039 | train acc: 99.797% | lr: 0.000100
[2019-08-26 23:40:50,818] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.831% | lr: 0.000100
[2019-08-26 23:41:10,121] - [train.py line:64] :    == cost time: 83.1880s
[2019-08-26 23:41:10,123] - [train.py line:80] : ======validate =====
[2019-08-26 23:41:14,679] - [train.py line:91] : corret:7618total10000
[2019-08-26 23:41:14,679] - [train.py line:93] :    == test loss: 0.926 | test acc: 76.180%
[2019-08-26 23:41:14,715] - [train.py line:36] : ====Epoch:[229/300]====
[2019-08-26 23:41:36,093] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.906% | lr: 0.000100
[2019-08-26 23:41:57,312] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.859% | lr: 0.000100
[2019-08-26 23:42:18,612] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.875% | lr: 0.000100
[2019-08-26 23:42:37,973] - [train.py line:64] :    == cost time: 83.2591s
[2019-08-26 23:42:37,975] - [train.py line:36] : ====Epoch:[230/300]====
[2019-08-26 23:42:59,469] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.875% | lr: 0.000100
[2019-08-26 23:43:20,799] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.859% | lr: 0.000100
[2019-08-26 23:43:42,098] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.867% | lr: 0.000100
[2019-08-26 23:44:01,494] - [train.py line:64] :    == cost time: 83.5209s
[2019-08-26 23:44:01,496] - [train.py line:80] : ======validate =====
[2019-08-26 23:44:06,083] - [train.py line:91] : corret:7564total10000
[2019-08-26 23:44:06,083] - [train.py line:93] :    == test loss: 0.927 | test acc: 75.640%
[2019-08-26 23:44:06,129] - [train.py line:36] : ====Epoch:[231/300]====
[2019-08-26 23:44:27,525] - [train.py line:61] :    == step: [100/391], train loss: 0.039 | train acc: 99.844% | lr: 0.000100
[2019-08-26 23:44:48,844] - [train.py line:61] :    == step: [200/391], train loss: 0.039 | train acc: 99.812% | lr: 0.000100
[2019-08-26 23:45:10,205] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.815% | lr: 0.000100
[2019-08-26 23:45:29,607] - [train.py line:64] :    == cost time: 83.4795s
[2019-08-26 23:45:29,609] - [train.py line:36] : ====Epoch:[232/300]====
[2019-08-26 23:45:51,093] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.812% | lr: 0.000100
[2019-08-26 23:46:12,352] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.836% | lr: 0.000100
[2019-08-26 23:46:33,656] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.836% | lr: 0.000100
[2019-08-26 23:46:52,971] - [train.py line:64] :    == cost time: 83.3633s
[2019-08-26 23:46:52,973] - [train.py line:80] : ======validate =====
[2019-08-26 23:46:57,536] - [train.py line:91] : corret:7557total10000
[2019-08-26 23:46:57,537] - [train.py line:93] :    == test loss: 0.936 | test acc: 75.570%
[2019-08-26 23:46:57,572] - [train.py line:36] : ====Epoch:[233/300]====
[2019-08-26 23:47:18,960] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.859% | lr: 0.000100
[2019-08-26 23:47:40,294] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.844% | lr: 0.000100
[2019-08-26 23:48:01,679] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.841% | lr: 0.000100
[2019-08-26 23:48:21,071] - [train.py line:64] :    == cost time: 83.5001s
[2019-08-26 23:48:21,073] - [train.py line:36] : ====Epoch:[234/300]====
[2019-08-26 23:48:42,528] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.820% | lr: 0.000100
[2019-08-26 23:49:03,821] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.797% | lr: 0.000100
[2019-08-26 23:49:25,126] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.820% | lr: 0.000100
[2019-08-26 23:49:44,532] - [train.py line:64] :    == cost time: 83.4605s
[2019-08-26 23:49:44,535] - [train.py line:80] : ======validate =====
[2019-08-26 23:49:49,174] - [train.py line:91] : corret:7614total10000
[2019-08-26 23:49:49,174] - [train.py line:93] :    == test loss: 0.918 | test acc: 76.140%
[2019-08-26 23:49:49,209] - [train.py line:36] : ====Epoch:[235/300]====
[2019-08-26 23:50:10,669] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.812% | lr: 0.000100
[2019-08-26 23:50:32,009] - [train.py line:61] :    == step: [200/391], train loss: 0.039 | train acc: 99.812% | lr: 0.000100
[2019-08-26 23:50:53,391] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.839% | lr: 0.000100
[2019-08-26 23:51:12,674] - [train.py line:64] :    == cost time: 83.4653s
[2019-08-26 23:51:12,676] - [train.py line:36] : ====Epoch:[236/300]====
[2019-08-26 23:51:34,148] - [train.py line:61] :    == step: [100/391], train loss: 0.039 | train acc: 99.797% | lr: 0.000100
[2019-08-26 23:51:55,452] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.809% | lr: 0.000100
[2019-08-26 23:52:16,684] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.826% | lr: 0.000100
[2019-08-26 23:52:36,056] - [train.py line:64] :    == cost time: 83.3820s
[2019-08-26 23:52:36,058] - [train.py line:80] : ======validate =====
[2019-08-26 23:52:40,670] - [train.py line:91] : corret:7549total10000
[2019-08-26 23:52:40,670] - [train.py line:93] :    == test loss: 0.938 | test acc: 75.490%
[2019-08-26 23:52:40,716] - [train.py line:36] : ====Epoch:[237/300]====
[2019-08-26 23:53:02,198] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.812% | lr: 0.000100
[2019-08-26 23:53:23,640] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.840% | lr: 0.000100
[2019-08-26 23:53:45,085] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.844% | lr: 0.000100
[2019-08-26 23:54:04,514] - [train.py line:64] :    == cost time: 83.7984s
[2019-08-26 23:54:04,516] - [train.py line:36] : ====Epoch:[238/300]====
[2019-08-26 23:54:26,036] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.852% | lr: 0.000100
[2019-08-26 23:54:47,470] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.828% | lr: 0.000100
[2019-08-26 23:55:08,888] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.818% | lr: 0.000100
[2019-08-26 23:55:28,361] - [train.py line:64] :    == cost time: 83.8463s
[2019-08-26 23:55:28,363] - [train.py line:80] : ======validate =====
[2019-08-26 23:55:33,027] - [train.py line:91] : corret:7603total10000
[2019-08-26 23:55:33,028] - [train.py line:93] :    == test loss: 0.927 | test acc: 76.030%
[2019-08-26 23:55:33,067] - [train.py line:36] : ====Epoch:[239/300]====
[2019-08-26 23:55:54,650] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.805% | lr: 0.000100
[2019-08-26 23:56:15,980] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.785% | lr: 0.000100
[2019-08-26 23:56:37,216] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.794% | lr: 0.000100
[2019-08-26 23:56:56,561] - [train.py line:64] :    == cost time: 83.4956s
[2019-08-26 23:56:56,563] - [train.py line:36] : ====Epoch:[240/300]====
[2019-08-26 23:57:17,984] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.820% | lr: 0.000100
[2019-08-26 23:57:39,246] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.824% | lr: 0.000100
[2019-08-26 23:58:00,520] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.833% | lr: 0.000100
[2019-08-26 23:58:19,877] - [train.py line:64] :    == cost time: 83.3147s
[2019-08-26 23:58:19,879] - [train.py line:80] : ======validate =====
[2019-08-26 23:58:24,441] - [train.py line:91] : corret:7583total10000
[2019-08-26 23:58:24,441] - [train.py line:93] :    == test loss: 0.932 | test acc: 75.830%
[2019-08-26 23:58:24,492] - [train.py line:36] : ====Epoch:[241/300]====
[2019-08-26 23:58:46,031] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.844% | lr: 0.000100
[2019-08-26 23:59:07,318] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.816% | lr: 0.000100
[2019-08-26 23:59:28,617] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.844% | lr: 0.000100
[2019-08-26 23:59:48,091] - [train.py line:64] :    == cost time: 83.6050s
[2019-08-26 23:59:48,093] - [train.py line:36] : ====Epoch:[242/300]====
[2019-08-27 00:00:09,561] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.805% | lr: 0.000100
[2019-08-27 00:00:30,992] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.824% | lr: 0.000100
[2019-08-27 00:00:52,260] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.836% | lr: 0.000100
[2019-08-27 00:01:11,530] - [train.py line:64] :    == cost time: 83.4376s
[2019-08-27 00:01:11,532] - [train.py line:80] : ======validate =====
[2019-08-27 00:01:16,149] - [train.py line:91] : corret:7593total10000
[2019-08-27 00:01:16,150] - [train.py line:93] :    == test loss: 0.928 | test acc: 75.930%
[2019-08-27 00:01:16,195] - [train.py line:36] : ====Epoch:[243/300]====
[2019-08-27 00:01:37,536] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.852% | lr: 0.000100
[2019-08-27 00:01:58,753] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.863% | lr: 0.000100
[2019-08-27 00:02:20,103] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.841% | lr: 0.000100
[2019-08-27 00:02:39,762] - [train.py line:64] :    == cost time: 83.5685s
[2019-08-27 00:02:39,764] - [train.py line:36] : ====Epoch:[244/300]====
[2019-08-27 00:03:01,256] - [train.py line:61] :    == step: [100/391], train loss: 0.039 | train acc: 99.805% | lr: 0.000100
[2019-08-27 00:03:22,659] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.820% | lr: 0.000100
[2019-08-27 00:03:44,072] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.820% | lr: 0.000100
[2019-08-27 00:04:03,449] - [train.py line:64] :    == cost time: 83.6854s
[2019-08-27 00:04:03,451] - [train.py line:80] : ======validate =====
[2019-08-27 00:04:08,072] - [train.py line:91] : corret:7600total10000
[2019-08-27 00:04:08,072] - [train.py line:93] :    == test loss: 0.933 | test acc: 76.000%
[2019-08-27 00:04:08,118] - [train.py line:36] : ====Epoch:[245/300]====
[2019-08-27 00:04:29,590] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.781% | lr: 0.000100
[2019-08-27 00:04:51,020] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.809% | lr: 0.000100
[2019-08-27 00:05:12,379] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.826% | lr: 0.000100
[2019-08-27 00:05:31,756] - [train.py line:64] :    == cost time: 83.6388s
[2019-08-27 00:05:31,758] - [train.py line:36] : ====Epoch:[246/300]====
[2019-08-27 00:05:53,219] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.891% | lr: 0.000100
[2019-08-27 00:06:14,528] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.887% | lr: 0.000100
[2019-08-27 00:06:35,844] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.885% | lr: 0.000100
[2019-08-27 00:06:55,531] - [train.py line:64] :    == cost time: 83.7738s
[2019-08-27 00:06:55,533] - [train.py line:80] : ======validate =====
[2019-08-27 00:07:00,220] - [train.py line:91] : corret:7576total10000
[2019-08-27 00:07:00,220] - [train.py line:93] :    == test loss: 0.940 | test acc: 75.760%
[2019-08-27 00:07:00,270] - [train.py line:36] : ====Epoch:[247/300]====
[2019-08-27 00:07:21,947] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.883% | lr: 0.000100
[2019-08-27 00:07:43,456] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.879% | lr: 0.000100
[2019-08-27 00:08:05,053] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.854% | lr: 0.000100
[2019-08-27 00:08:24,594] - [train.py line:64] :    == cost time: 84.3249s
[2019-08-27 00:08:24,596] - [train.py line:36] : ====Epoch:[248/300]====
[2019-08-27 00:08:46,226] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.891% | lr: 0.000100
[2019-08-27 00:09:07,699] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.879% | lr: 0.000100
[2019-08-27 00:09:29,278] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.870% | lr: 0.000100
[2019-08-27 00:09:48,740] - [train.py line:64] :    == cost time: 84.1453s
[2019-08-27 00:09:48,742] - [train.py line:80] : ======validate =====
[2019-08-27 00:09:53,325] - [train.py line:91] : corret:7576total10000
[2019-08-27 00:09:53,325] - [train.py line:93] :    == test loss: 0.936 | test acc: 75.760%
[2019-08-27 00:09:53,365] - [train.py line:36] : ====Epoch:[249/300]====
[2019-08-27 00:10:14,793] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.820% | lr: 0.000100
[2019-08-27 00:10:36,143] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.844% | lr: 0.000100
[2019-08-27 00:10:57,520] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.833% | lr: 0.000100
[2019-08-27 00:11:16,984] - [train.py line:64] :    == cost time: 83.6204s
[2019-08-27 00:11:16,986] - [train.py line:36] : ====Epoch:[250/300]====
[2019-08-27 00:11:38,502] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.867% | lr: 0.000100
[2019-08-27 00:11:59,914] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.828% | lr: 0.000100
[2019-08-27 00:12:21,297] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.815% | lr: 0.000100
[2019-08-27 00:12:40,770] - [train.py line:64] :    == cost time: 83.7851s
[2019-08-27 00:12:40,772] - [train.py line:80] : ======validate =====
[2019-08-27 00:12:45,359] - [train.py line:91] : corret:7579total10000
[2019-08-27 00:12:45,359] - [train.py line:93] :    == test loss: 0.927 | test acc: 75.790%
[2019-08-27 00:12:45,409] - [train.py line:36] : ====Epoch:[251/300]====
[2019-08-27 00:13:06,976] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.797% | lr: 0.000100
[2019-08-27 00:13:28,433] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.832% | lr: 0.000100
[2019-08-27 00:13:49,852] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.828% | lr: 0.000100
[2019-08-27 00:14:09,300] - [train.py line:64] :    == cost time: 83.8927s
[2019-08-27 00:14:09,302] - [train.py line:36] : ====Epoch:[252/300]====
[2019-08-27 00:14:30,662] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.805% | lr: 0.000100
[2019-08-27 00:14:51,914] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.809% | lr: 0.000100
[2019-08-27 00:15:13,157] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.820% | lr: 0.000100
[2019-08-27 00:15:32,623] - [train.py line:64] :    == cost time: 83.3222s
[2019-08-27 00:15:32,625] - [train.py line:80] : ======validate =====
[2019-08-27 00:15:37,283] - [train.py line:91] : corret:7583total10000
[2019-08-27 00:15:37,283] - [train.py line:93] :    == test loss: 0.934 | test acc: 75.830%
[2019-08-27 00:15:37,334] - [train.py line:36] : ====Epoch:[253/300]====
[2019-08-27 00:15:58,891] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.844% | lr: 0.000100
[2019-08-27 00:16:20,124] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.836% | lr: 0.000100
[2019-08-27 00:16:41,448] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.846% | lr: 0.000100
[2019-08-27 00:17:00,798] - [train.py line:64] :    == cost time: 83.4653s
[2019-08-27 00:17:00,800] - [train.py line:36] : ====Epoch:[254/300]====
[2019-08-27 00:17:22,365] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.781% | lr: 0.000100
[2019-08-27 00:17:43,763] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.797% | lr: 0.000100
[2019-08-27 00:18:05,010] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.807% | lr: 0.000100
[2019-08-27 00:18:24,309] - [train.py line:64] :    == cost time: 83.5100s
[2019-08-27 00:18:24,311] - [train.py line:80] : ======validate =====
[2019-08-27 00:18:28,919] - [train.py line:91] : corret:7598total10000
[2019-08-27 00:18:28,919] - [train.py line:93] :    == test loss: 0.933 | test acc: 75.980%
[2019-08-27 00:18:28,965] - [train.py line:36] : ====Epoch:[255/300]====
[2019-08-27 00:18:50,439] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.805% | lr: 0.000100
[2019-08-27 00:19:11,704] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.805% | lr: 0.000100
[2019-08-27 00:19:32,937] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.831% | lr: 0.000100
[2019-08-27 00:19:52,269] - [train.py line:64] :    == cost time: 83.3057s
[2019-08-27 00:19:52,271] - [train.py line:36] : ====Epoch:[256/300]====
[2019-08-27 00:20:14,119] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.820% | lr: 0.000100
[2019-08-27 00:20:35,664] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.875% | lr: 0.000100
[2019-08-27 00:20:56,972] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.859% | lr: 0.000100
[2019-08-27 00:21:16,465] - [train.py line:64] :    == cost time: 84.1946s
[2019-08-27 00:21:16,466] - [train.py line:80] : ======validate =====
[2019-08-27 00:21:21,122] - [train.py line:91] : corret:7639total10000
[2019-08-27 00:21:21,122] - [train.py line:93] :    == test loss: 0.934 | test acc: 76.390%
[2019-08-27 00:21:21,158] - [train.py line:36] : ====Epoch:[257/300]====
[2019-08-27 00:21:42,754] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.875% | lr: 0.000100
[2019-08-27 00:22:04,095] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.883% | lr: 0.000100
[2019-08-27 00:22:25,530] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.865% | lr: 0.000100
[2019-08-27 00:22:44,905] - [train.py line:64] :    == cost time: 83.7479s
[2019-08-27 00:22:44,907] - [train.py line:36] : ====Epoch:[258/300]====
[2019-08-27 00:23:06,725] - [train.py line:61] :    == step: [100/391], train loss: 0.035 | train acc: 99.914% | lr: 0.000100
[2019-08-27 00:23:28,337] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.871% | lr: 0.000100
[2019-08-27 00:23:49,633] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.862% | lr: 0.000100
[2019-08-27 00:24:08,932] - [train.py line:64] :    == cost time: 84.0260s
[2019-08-27 00:24:08,934] - [train.py line:80] : ======validate =====
[2019-08-27 00:24:13,527] - [train.py line:91] : corret:7593total10000
[2019-08-27 00:24:13,527] - [train.py line:93] :    == test loss: 0.931 | test acc: 75.930%
[2019-08-27 00:24:13,563] - [train.py line:36] : ====Epoch:[259/300]====
[2019-08-27 00:24:35,117] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.852% | lr: 0.000100
[2019-08-27 00:24:56,605] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.859% | lr: 0.000100
[2019-08-27 00:25:18,111] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.870% | lr: 0.000100
[2019-08-27 00:25:37,689] - [train.py line:64] :    == cost time: 84.1265s
[2019-08-27 00:25:37,691] - [train.py line:36] : ====Epoch:[260/300]====
[2019-08-27 00:25:59,529] - [train.py line:61] :    == step: [100/391], train loss: 0.039 | train acc: 99.742% | lr: 0.000100
[2019-08-27 00:26:21,103] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.770% | lr: 0.000100
[2019-08-27 00:26:42,624] - [train.py line:61] :    == step: [300/391], train loss: 0.038 | train acc: 99.807% | lr: 0.000100
[2019-08-27 00:27:02,150] - [train.py line:64] :    == cost time: 84.4608s
[2019-08-27 00:27:02,153] - [train.py line:80] : ======validate =====
[2019-08-27 00:27:06,898] - [train.py line:91] : corret:7573total10000
[2019-08-27 00:27:06,898] - [train.py line:93] :    == test loss: 0.937 | test acc: 75.730%
[2019-08-27 00:27:06,948] - [train.py line:36] : ====Epoch:[261/300]====
[2019-08-27 00:27:28,749] - [train.py line:61] :    == step: [100/391], train loss: 0.035 | train acc: 99.922% | lr: 0.000100
[2019-08-27 00:27:50,145] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.848% | lr: 0.000100
[2019-08-27 00:28:11,362] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.867% | lr: 0.000100
[2019-08-27 00:28:30,659] - [train.py line:64] :    == cost time: 83.7123s
[2019-08-27 00:28:30,661] - [train.py line:36] : ====Epoch:[262/300]====
[2019-08-27 00:28:52,006] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.898% | lr: 0.000100
[2019-08-27 00:29:13,244] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.848% | lr: 0.000100
[2019-08-27 00:29:34,515] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.844% | lr: 0.000100
[2019-08-27 00:29:53,826] - [train.py line:64] :    == cost time: 83.1658s
[2019-08-27 00:29:53,828] - [train.py line:80] : ======validate =====
[2019-08-27 00:29:58,416] - [train.py line:91] : corret:7556total10000
[2019-08-27 00:29:58,416] - [train.py line:93] :    == test loss: 0.935 | test acc: 75.560%
[2019-08-27 00:29:58,462] - [train.py line:36] : ====Epoch:[263/300]====
[2019-08-27 00:30:19,882] - [train.py line:61] :    == step: [100/391], train loss: 0.039 | train acc: 99.781% | lr: 0.000100
[2019-08-27 00:30:41,185] - [train.py line:61] :    == step: [200/391], train loss: 0.038 | train acc: 99.809% | lr: 0.000100
[2019-08-27 00:31:02,477] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.828% | lr: 0.000100
[2019-08-27 00:31:21,826] - [train.py line:64] :    == cost time: 83.3652s
[2019-08-27 00:31:21,828] - [train.py line:36] : ====Epoch:[264/300]====
[2019-08-27 00:31:43,243] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.914% | lr: 0.000100
[2019-08-27 00:32:04,617] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.891% | lr: 0.000100
[2019-08-27 00:32:25,951] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.880% | lr: 0.000100
[2019-08-27 00:32:45,354] - [train.py line:64] :    == cost time: 83.5273s
[2019-08-27 00:32:45,356] - [train.py line:80] : ======validate =====
[2019-08-27 00:32:49,978] - [train.py line:91] : corret:7609total10000
[2019-08-27 00:32:49,978] - [train.py line:93] :    == test loss: 0.926 | test acc: 76.090%
[2019-08-27 00:32:50,014] - [train.py line:36] : ====Epoch:[265/300]====
[2019-08-27 00:33:11,474] - [train.py line:61] :    == step: [100/391], train loss: 0.035 | train acc: 99.852% | lr: 0.000100
[2019-08-27 00:33:32,701] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.883% | lr: 0.000100
[2019-08-27 00:33:54,086] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.878% | lr: 0.000100
[2019-08-27 00:34:13,536] - [train.py line:64] :    == cost time: 83.5233s
[2019-08-27 00:34:13,538] - [train.py line:36] : ====Epoch:[266/300]====
[2019-08-27 00:34:35,095] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.844% | lr: 0.000100
[2019-08-27 00:34:56,483] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.855% | lr: 0.000100
[2019-08-27 00:35:17,887] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.833% | lr: 0.000100
[2019-08-27 00:35:37,237] - [train.py line:64] :    == cost time: 83.6999s
[2019-08-27 00:35:37,239] - [train.py line:80] : ======validate =====
[2019-08-27 00:35:41,846] - [train.py line:91] : corret:7596total10000
[2019-08-27 00:35:41,846] - [train.py line:93] :    == test loss: 0.930 | test acc: 75.960%
[2019-08-27 00:35:41,893] - [train.py line:36] : ====Epoch:[267/300]====
[2019-08-27 00:36:03,333] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.938% | lr: 0.000100
[2019-08-27 00:36:24,633] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.863% | lr: 0.000100
[2019-08-27 00:36:46,010] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.859% | lr: 0.000100
[2019-08-27 00:37:05,520] - [train.py line:64] :    == cost time: 83.6277s
[2019-08-27 00:37:05,522] - [train.py line:36] : ====Epoch:[268/300]====
[2019-08-27 00:37:27,173] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.883% | lr: 0.000100
[2019-08-27 00:37:48,703] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.871% | lr: 0.000100
[2019-08-27 00:38:10,178] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.872% | lr: 0.000100
[2019-08-27 00:38:29,696] - [train.py line:64] :    == cost time: 84.1759s
[2019-08-27 00:38:29,699] - [train.py line:80] : ======validate =====
[2019-08-27 00:38:34,348] - [train.py line:91] : corret:7591total10000
[2019-08-27 00:38:34,349] - [train.py line:93] :    == test loss: 0.927 | test acc: 75.910%
[2019-08-27 00:38:34,420] - [train.py line:36] : ====Epoch:[269/300]====
[2019-08-27 00:38:55,893] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.867% | lr: 0.000100
[2019-08-27 00:39:17,219] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.848% | lr: 0.000100
[2019-08-27 00:39:38,584] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.857% | lr: 0.000100
[2019-08-27 00:39:58,012] - [train.py line:64] :    == cost time: 83.5927s
[2019-08-27 00:39:58,014] - [train.py line:36] : ====Epoch:[270/300]====
[2019-08-27 00:40:19,558] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.789% | lr: 0.000100
[2019-08-27 00:40:40,893] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.809% | lr: 0.000100
[2019-08-27 00:41:02,265] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.841% | lr: 0.000100
[2019-08-27 00:41:21,651] - [train.py line:64] :    == cost time: 83.6381s
[2019-08-27 00:41:21,653] - [train.py line:80] : ======validate =====
[2019-08-27 00:41:26,292] - [train.py line:91] : corret:7598total10000
[2019-08-27 00:41:26,293] - [train.py line:93] :    == test loss: 0.933 | test acc: 75.980%
[2019-08-27 00:41:26,338] - [train.py line:36] : ====Epoch:[271/300]====
[2019-08-27 00:41:47,789] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.891% | lr: 0.000100
[2019-08-27 00:42:09,099] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.871% | lr: 0.000100
[2019-08-27 00:42:30,537] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.859% | lr: 0.000100
[2019-08-27 00:42:49,932] - [train.py line:64] :    == cost time: 83.5946s
[2019-08-27 00:42:49,933] - [train.py line:36] : ====Epoch:[272/300]====
[2019-08-27 00:43:11,425] - [train.py line:61] :    == step: [100/391], train loss: 0.035 | train acc: 99.922% | lr: 0.000100
[2019-08-27 00:43:32,659] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.891% | lr: 0.000100
[2019-08-27 00:43:53,904] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.878% | lr: 0.000100
[2019-08-27 00:44:13,303] - [train.py line:64] :    == cost time: 83.3708s
[2019-08-27 00:44:13,305] - [train.py line:80] : ======validate =====
[2019-08-27 00:44:17,911] - [train.py line:91] : corret:7570total10000
[2019-08-27 00:44:17,911] - [train.py line:93] :    == test loss: 0.931 | test acc: 75.700%
[2019-08-27 00:44:17,957] - [train.py line:36] : ====Epoch:[273/300]====
[2019-08-27 00:44:39,508] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.797% | lr: 0.000100
[2019-08-27 00:45:00,927] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.844% | lr: 0.000100
[2019-08-27 00:45:22,363] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.836% | lr: 0.000100
[2019-08-27 00:45:41,686] - [train.py line:64] :    == cost time: 83.7310s
[2019-08-27 00:45:41,688] - [train.py line:36] : ====Epoch:[274/300]====
[2019-08-27 00:46:03,130] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.805% | lr: 0.000100
[2019-08-27 00:46:24,475] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.836% | lr: 0.000100
[2019-08-27 00:46:45,864] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.828% | lr: 0.000100
[2019-08-27 00:47:05,386] - [train.py line:64] :    == cost time: 83.6982s
[2019-08-27 00:47:05,388] - [train.py line:80] : ======validate =====
[2019-08-27 00:47:10,063] - [train.py line:91] : corret:7579total10000
[2019-08-27 00:47:10,063] - [train.py line:93] :    == test loss: 0.926 | test acc: 75.790%
[2019-08-27 00:47:10,108] - [train.py line:36] : ====Epoch:[275/300]====
[2019-08-27 00:47:31,555] - [train.py line:61] :    == step: [100/391], train loss: 0.034 | train acc: 99.938% | lr: 0.000100
[2019-08-27 00:47:52,804] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.879% | lr: 0.000100
[2019-08-27 00:48:14,120] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.867% | lr: 0.000100
[2019-08-27 00:48:33,477] - [train.py line:64] :    == cost time: 83.3699s
[2019-08-27 00:48:33,479] - [train.py line:36] : ====Epoch:[276/300]====
[2019-08-27 00:48:55,100] - [train.py line:61] :    == step: [100/391], train loss: 0.034 | train acc: 99.828% | lr: 0.000100
[2019-08-27 00:49:16,587] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.812% | lr: 0.000100
[2019-08-27 00:49:38,163] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.823% | lr: 0.000100
[2019-08-27 00:49:57,611] - [train.py line:64] :    == cost time: 84.1332s
[2019-08-27 00:49:57,613] - [train.py line:80] : ======validate =====
[2019-08-27 00:50:02,297] - [train.py line:91] : corret:7589total10000
[2019-08-27 00:50:02,297] - [train.py line:93] :    == test loss: 0.928 | test acc: 75.890%
[2019-08-27 00:50:02,343] - [train.py line:36] : ====Epoch:[277/300]====
[2019-08-27 00:50:24,055] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.828% | lr: 0.000100
[2019-08-27 00:50:45,564] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.875% | lr: 0.000100
[2019-08-27 00:51:07,082] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.880% | lr: 0.000100
[2019-08-27 00:51:26,440] - [train.py line:64] :    == cost time: 84.0982s
[2019-08-27 00:51:26,442] - [train.py line:36] : ====Epoch:[278/300]====
[2019-08-27 00:51:47,822] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.820% | lr: 0.000100
[2019-08-27 00:52:09,174] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.848% | lr: 0.000100
[2019-08-27 00:52:30,585] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.841% | lr: 0.000100
[2019-08-27 00:52:50,015] - [train.py line:64] :    == cost time: 83.5739s
[2019-08-27 00:52:50,017] - [train.py line:80] : ======validate =====
[2019-08-27 00:52:54,640] - [train.py line:91] : corret:7598total10000
[2019-08-27 00:52:54,640] - [train.py line:93] :    == test loss: 0.929 | test acc: 75.980%
[2019-08-27 00:52:54,685] - [train.py line:36] : ====Epoch:[279/300]====
[2019-08-27 00:53:16,181] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.836% | lr: 0.000100
[2019-08-27 00:53:37,610] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.852% | lr: 0.000100
[2019-08-27 00:53:59,107] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.839% | lr: 0.000100
[2019-08-27 00:54:18,803] - [train.py line:64] :    == cost time: 84.1187s
[2019-08-27 00:54:18,805] - [train.py line:36] : ====Epoch:[280/300]====
[2019-08-27 00:54:40,455] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.820% | lr: 0.000100
[2019-08-27 00:55:01,741] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.828% | lr: 0.000100
[2019-08-27 00:55:22,981] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.833% | lr: 0.000100
[2019-08-27 00:55:42,321] - [train.py line:64] :    == cost time: 83.5177s
[2019-08-27 00:55:42,323] - [train.py line:80] : ======validate =====
[2019-08-27 00:55:46,920] - [train.py line:91] : corret:7593total10000
[2019-08-27 00:55:46,920] - [train.py line:93] :    == test loss: 0.939 | test acc: 75.930%
[2019-08-27 00:55:46,970] - [train.py line:36] : ====Epoch:[281/300]====
[2019-08-27 00:56:08,376] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.805% | lr: 0.000100
[2019-08-27 00:56:29,631] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.824% | lr: 0.000100
[2019-08-27 00:56:50,838] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.826% | lr: 0.000100
[2019-08-27 00:57:10,103] - [train.py line:64] :    == cost time: 83.1343s
[2019-08-27 00:57:10,105] - [train.py line:36] : ====Epoch:[282/300]====
[2019-08-27 00:57:31,427] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.844% | lr: 0.000100
[2019-08-27 00:57:52,682] - [train.py line:61] :    == step: [200/391], train loss: 0.035 | train acc: 99.875% | lr: 0.000100
[2019-08-27 00:58:13,895] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.862% | lr: 0.000100
[2019-08-27 00:58:33,206] - [train.py line:64] :    == cost time: 83.1020s
[2019-08-27 00:58:33,209] - [train.py line:80] : ======validate =====
[2019-08-27 00:58:37,798] - [train.py line:91] : corret:7585total10000
[2019-08-27 00:58:37,798] - [train.py line:93] :    == test loss: 0.936 | test acc: 75.850%
[2019-08-27 00:58:37,835] - [train.py line:36] : ====Epoch:[283/300]====
[2019-08-27 00:58:59,241] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.883% | lr: 0.000100
[2019-08-27 00:59:20,471] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.863% | lr: 0.000100
[2019-08-27 00:59:41,697] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.857% | lr: 0.000100
[2019-08-27 01:00:00,976] - [train.py line:64] :    == cost time: 83.1426s
[2019-08-27 01:00:00,978] - [train.py line:36] : ====Epoch:[284/300]====
[2019-08-27 01:00:22,315] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.852% | lr: 0.000100
[2019-08-27 01:00:43,550] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.855% | lr: 0.000100
[2019-08-27 01:01:04,899] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.870% | lr: 0.000100
[2019-08-27 01:01:24,155] - [train.py line:64] :    == cost time: 83.1782s
[2019-08-27 01:01:24,157] - [train.py line:80] : ======validate =====
[2019-08-27 01:01:28,742] - [train.py line:91] : corret:7582total10000
[2019-08-27 01:01:28,742] - [train.py line:93] :    == test loss: 0.938 | test acc: 75.820%
[2019-08-27 01:01:28,795] - [train.py line:36] : ====Epoch:[285/300]====
[2019-08-27 01:01:50,156] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.836% | lr: 0.000100
[2019-08-27 01:02:11,383] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.859% | lr: 0.000100
[2019-08-27 01:02:32,653] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.862% | lr: 0.000100
[2019-08-27 01:02:51,992] - [train.py line:64] :    == cost time: 83.1995s
[2019-08-27 01:02:51,994] - [train.py line:36] : ====Epoch:[286/300]====
[2019-08-27 01:03:13,371] - [train.py line:61] :    == step: [100/391], train loss: 0.038 | train acc: 99.844% | lr: 0.000100
[2019-08-27 01:03:34,628] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.859% | lr: 0.000100
[2019-08-27 01:03:55,881] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.865% | lr: 0.000100
[2019-08-27 01:04:15,194] - [train.py line:64] :    == cost time: 83.2013s
[2019-08-27 01:04:15,196] - [train.py line:80] : ======validate =====
[2019-08-27 01:04:19,876] - [train.py line:91] : corret:7567total10000
[2019-08-27 01:04:19,876] - [train.py line:93] :    == test loss: 0.934 | test acc: 75.670%
[2019-08-27 01:04:19,927] - [train.py line:36] : ====Epoch:[287/300]====
[2019-08-27 01:04:41,318] - [train.py line:61] :    == step: [100/391], train loss: 0.035 | train acc: 99.812% | lr: 0.000100
[2019-08-27 01:05:02,624] - [train.py line:61] :    == step: [200/391], train loss: 0.035 | train acc: 99.836% | lr: 0.000100
[2019-08-27 01:05:23,933] - [train.py line:61] :    == step: [300/391], train loss: 0.035 | train acc: 99.854% | lr: 0.000100
[2019-08-27 01:05:43,403] - [train.py line:64] :    == cost time: 83.4771s
[2019-08-27 01:05:43,406] - [train.py line:36] : ====Epoch:[288/300]====
[2019-08-27 01:06:04,909] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.836% | lr: 0.000100
[2019-08-27 01:06:26,225] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.836% | lr: 0.000100
[2019-08-27 01:06:47,461] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.852% | lr: 0.000100
[2019-08-27 01:07:06,859] - [train.py line:64] :    == cost time: 83.4554s
[2019-08-27 01:07:06,862] - [train.py line:80] : ======validate =====
[2019-08-27 01:07:11,488] - [train.py line:91] : corret:7614total10000
[2019-08-27 01:07:11,488] - [train.py line:93] :    == test loss: 0.929 | test acc: 76.140%
[2019-08-27 01:07:11,538] - [train.py line:36] : ====Epoch:[289/300]====
[2019-08-27 01:07:33,089] - [train.py line:61] :    == step: [100/391], train loss: 0.035 | train acc: 99.891% | lr: 0.000100
[2019-08-27 01:07:54,454] - [train.py line:61] :    == step: [200/391], train loss: 0.035 | train acc: 99.871% | lr: 0.000100
[2019-08-27 01:08:15,824] - [train.py line:61] :    == step: [300/391], train loss: 0.035 | train acc: 99.875% | lr: 0.000100
[2019-08-27 01:08:35,131] - [train.py line:64] :    == cost time: 83.5945s
[2019-08-27 01:08:35,133] - [train.py line:36] : ====Epoch:[290/300]====
[2019-08-27 01:08:56,503] - [train.py line:61] :    == step: [100/391], train loss: 0.035 | train acc: 99.883% | lr: 0.000100
[2019-08-27 01:09:17,775] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.859% | lr: 0.000100
[2019-08-27 01:09:38,955] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.846% | lr: 0.000100
[2019-08-27 01:09:58,208] - [train.py line:64] :    == cost time: 83.0761s
[2019-08-27 01:09:58,210] - [train.py line:80] : ======validate =====
[2019-08-27 01:10:02,796] - [train.py line:91] : corret:7554total10000
[2019-08-27 01:10:02,796] - [train.py line:93] :    == test loss: 0.933 | test acc: 75.540%
[2019-08-27 01:10:02,841] - [train.py line:36] : ====Epoch:[291/300]====
[2019-08-27 01:10:24,144] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.852% | lr: 0.000100
[2019-08-27 01:10:45,355] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.836% | lr: 0.000100
[2019-08-27 01:11:06,569] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.833% | lr: 0.000100
[2019-08-27 01:11:25,820] - [train.py line:64] :    == cost time: 82.9796s
[2019-08-27 01:11:25,822] - [train.py line:36] : ====Epoch:[292/300]====
[2019-08-27 01:11:47,166] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.859% | lr: 0.000100
[2019-08-27 01:12:08,372] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.848% | lr: 0.000100
[2019-08-27 01:12:29,575] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.844% | lr: 0.000100
[2019-08-27 01:12:48,847] - [train.py line:64] :    == cost time: 83.0260s
[2019-08-27 01:12:48,849] - [train.py line:80] : ======validate =====
[2019-08-27 01:12:53,440] - [train.py line:91] : corret:7590total10000
[2019-08-27 01:12:53,441] - [train.py line:93] :    == test loss: 0.926 | test acc: 75.900%
[2019-08-27 01:12:53,489] - [train.py line:36] : ====Epoch:[293/300]====
[2019-08-27 01:13:14,831] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.828% | lr: 0.000100
[2019-08-27 01:13:36,030] - [train.py line:61] :    == step: [200/391], train loss: 0.037 | train acc: 99.836% | lr: 0.000100
[2019-08-27 01:13:57,237] - [train.py line:61] :    == step: [300/391], train loss: 0.037 | train acc: 99.833% | lr: 0.000100
[2019-08-27 01:14:16,558] - [train.py line:64] :    == cost time: 83.0698s
[2019-08-27 01:14:16,560] - [train.py line:36] : ====Epoch:[294/300]====
[2019-08-27 01:14:37,904] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.828% | lr: 0.000100
[2019-08-27 01:14:59,120] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.797% | lr: 0.000100
[2019-08-27 01:15:20,329] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.833% | lr: 0.000100
[2019-08-27 01:15:39,687] - [train.py line:64] :    == cost time: 83.1283s
[2019-08-27 01:15:39,689] - [train.py line:80] : ======validate =====
[2019-08-27 01:15:44,274] - [train.py line:91] : corret:7593total10000
[2019-08-27 01:15:44,275] - [train.py line:93] :    == test loss: 0.926 | test acc: 75.930%
[2019-08-27 01:15:44,325] - [train.py line:36] : ====Epoch:[295/300]====
[2019-08-27 01:16:05,800] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.898% | lr: 0.000100
[2019-08-27 01:16:27,207] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.871% | lr: 0.000100
[2019-08-27 01:16:48,612] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.865% | lr: 0.000100
[2019-08-27 01:17:08,095] - [train.py line:64] :    == cost time: 83.7759s
[2019-08-27 01:17:08,097] - [train.py line:36] : ====Epoch:[296/300]====
[2019-08-27 01:17:29,660] - [train.py line:61] :    == step: [100/391], train loss: 0.037 | train acc: 99.836% | lr: 0.000100
[2019-08-27 01:17:50,967] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.855% | lr: 0.000100
[2019-08-27 01:18:12,405] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.859% | lr: 0.000100
[2019-08-27 01:18:31,854] - [train.py line:64] :    == cost time: 83.7575s
[2019-08-27 01:18:31,856] - [train.py line:80] : ======validate =====
[2019-08-27 01:18:36,488] - [train.py line:91] : corret:7601total10000
[2019-08-27 01:18:36,489] - [train.py line:93] :    == test loss: 0.928 | test acc: 76.010%
[2019-08-27 01:18:36,539] - [train.py line:36] : ====Epoch:[297/300]====
[2019-08-27 01:18:58,204] - [train.py line:61] :    == step: [100/391], train loss: 0.035 | train acc: 99.875% | lr: 0.000100
[2019-08-27 01:19:19,583] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.852% | lr: 0.000100
[2019-08-27 01:19:40,938] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.841% | lr: 0.000100
[2019-08-27 01:20:00,340] - [train.py line:64] :    == cost time: 83.8027s
[2019-08-27 01:20:00,342] - [train.py line:36] : ====Epoch:[298/300]====
[2019-08-27 01:20:21,827] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.836% | lr: 0.000100
[2019-08-27 01:20:43,167] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.805% | lr: 0.000100
[2019-08-27 01:21:04,441] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.826% | lr: 0.000100
[2019-08-27 01:21:23,904] - [train.py line:64] :    == cost time: 83.5634s
[2019-08-27 01:21:23,906] - [train.py line:80] : ======validate =====
[2019-08-27 01:21:28,507] - [train.py line:91] : corret:7565total10000
[2019-08-27 01:21:28,507] - [train.py line:93] :    == test loss: 0.933 | test acc: 75.650%
[2019-08-27 01:21:28,559] - [train.py line:36] : ====Epoch:[299/300]====
[2019-08-27 01:21:50,122] - [train.py line:61] :    == step: [100/391], train loss: 0.036 | train acc: 99.836% | lr: 0.000100
[2019-08-27 01:22:11,489] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.840% | lr: 0.000100
[2019-08-27 01:22:32,835] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.844% | lr: 0.000100
[2019-08-27 01:22:52,259] - [train.py line:64] :    == cost time: 83.7014s
[2019-08-27 01:22:52,261] - [train.py line:36] : ====Epoch:[300/300]====
[2019-08-27 01:23:13,786] - [train.py line:61] :    == step: [100/391], train loss: 0.035 | train acc: 99.828% | lr: 0.000100
[2019-08-27 01:23:35,222] - [train.py line:61] :    == step: [200/391], train loss: 0.036 | train acc: 99.824% | lr: 0.000100
[2019-08-27 01:23:56,604] - [train.py line:61] :    == step: [300/391], train loss: 0.036 | train acc: 99.859% | lr: 0.000100
[2019-08-27 01:24:16,063] - [train.py line:64] :    == cost time: 83.8036s
[2019-08-27 01:24:16,065] - [train.py line:80] : ======validate =====
[2019-08-27 01:24:20,691] - [train.py line:91] : corret:7627total10000
[2019-08-27 01:24:20,692] - [train.py line:93] :    == test loss: 0.925 | test acc: 76.270%
[2019-08-27 01:24:20,740] - [train.py line:162] : ======== Training Finished.   best_test_acc: 76.530% ========
[2019-08-27 06:37:12,183] - [train.py line:120] : {'architecture': 'densebc_100_12', 'data_path': './data', 'ckpt_path': './', 'ckpt_name': 'densebc_100_12', 'num_classes': 100, 'dataset': 'cifar100', 'use_gpu': True, 'input_size': 32, 'epochs': 300, 'batch_size': 128, 'test_batch': 200, 'eval_freq': 2, 'workers': 4, 'optimize': {'momentum': 0.9, 'weight_decay': 0.0005, 'nesterov': True}, 'mixup': False, 'mixup_alpha': 0.4, 'augmentation': {'normalize': True, 'random_crop': True, 'random_horizontal_filp': True, 'cutout': False, 'holes': 1, 'length': 8}, 'lr_scheduler': {'type': 'STEP', 'base_lr': 0.1, 'lr_epochs': [100, 150, 200], 'lr_mults': 0.1, 'min_lr': 0.0, 'lower_bound': -6.0, 'upper_bound': 3.0}}
[2019-08-27 06:37:12,240] - [train.py line:123] : DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (block1): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(36, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(60, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(72, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(84, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (transition1): Sequential(
    (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(216, 108, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block2): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(108, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(120, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(132, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(144, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(156, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(168, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(180, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(204, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(216, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(228, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(240, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(252, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(264, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(276, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(288, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (transition2): Sequential(
    (0): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): Conv2d(300, 150, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (3): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (block3): Sequential(
    (0): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(150, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(150, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (1): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(162, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(162, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (2): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(174, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(174, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (3): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(186, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(186, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (4): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(198, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(198, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (5): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(210, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(210, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (6): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(222, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(222, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (7): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(234, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(234, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (8): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(246, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(246, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (9): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(258, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(258, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (10): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(270, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(270, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (11): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(282, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(282, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (12): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(294, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(294, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (13): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(306, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(306, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (14): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(318, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(318, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
    (15): BottleNeck(
      (conv1): Sequential(
        (0): BatchNorm2d(330, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(330, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (conv2): Sequential(
        (0): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): ReLU(inplace=True)
        (2): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
    )
  )
  (transition3): Sequential(
    (0): BatchNorm2d(342, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): ReLU(inplace=True)
    (2): AvgPool2d(kernel_size=8, stride=1, padding=0)
  )
  (fc): Linear(in_features=342, out_features=100, bias=True)
)
[2019-08-27 06:37:12,245] - [train.py line:124] : =====total parameters:800032
[2019-08-27 06:37:17,143] - [train.py line:151] : ==============trian-test-file-pathLcifar100
[2019-08-27 06:37:17,143] - [train.py line:152] :             =======  Training  =======

[2019-08-27 06:37:17,144] - [train.py line:36] : ====Epoch:[1/300]====
[2019-08-27 06:37:39,763] - [train.py line:61] :    == step: [100/391], train loss: 4.191 | train acc:  6.367% | lr: 0.100000
[2019-08-27 06:38:00,947] - [train.py line:61] :    == step: [200/391], train loss: 3.987 | train acc:  8.949% | lr: 0.100000
[2019-08-27 06:38:22,333] - [train.py line:61] :    == step: [300/391], train loss: 3.834 | train acc: 10.880% | lr: 0.100000
[2019-08-27 06:38:42,145] - [train.py line:64] :    == cost time: 85.0025s
[2019-08-27 06:38:42,147] - [train.py line:80] : ======validate =====
[2019-08-27 06:38:47,175] - [train.py line:91] : corret:1811total10000
[2019-08-27 06:38:47,176] - [train.py line:93] :    == test loss: 3.358 | test acc: 18.110%
[2019-08-27 06:38:47,241] - [train.py line:36] : ====Epoch:[2/300]====
[2019-08-27 06:39:08,070] - [train.py line:61] :    == step: [100/391], train loss: 3.044 | train acc: 23.156% | lr: 0.100000
[2019-08-27 06:39:28,768] - [train.py line:61] :    == step: [200/391], train loss: 2.955 | train acc: 24.695% | lr: 0.100000
[2019-08-27 06:39:49,548] - [train.py line:61] :    == step: [300/391], train loss: 2.897 | train acc: 25.906% | lr: 0.100000
[2019-08-27 06:40:08,616] - [train.py line:64] :    == cost time: 81.3798s
[2019-08-27 06:40:08,618] - [train.py line:80] : ======validate =====
[2019-08-27 06:40:13,138] - [train.py line:91] : corret:2774total10000
[2019-08-27 06:40:13,138] - [train.py line:93] :    == test loss: 2.806 | test acc: 27.740%
[2019-08-27 06:40:13,199] - [train.py line:36] : ====Epoch:[3/300]====
[2019-08-27 06:40:34,411] - [train.py line:61] :    == step: [100/391], train loss: 2.508 | train acc: 34.133% | lr: 0.100000
[2019-08-27 06:40:55,496] - [train.py line:61] :    == step: [200/391], train loss: 2.467 | train acc: 34.914% | lr: 0.100000
[2019-08-27 06:41:16,346] - [train.py line:61] :    == step: [300/391], train loss: 2.431 | train acc: 35.620% | lr: 0.100000
[2019-08-27 06:41:35,244] - [train.py line:64] :    == cost time: 82.0462s
[2019-08-27 06:41:35,246] - [train.py line:36] : ====Epoch:[4/300]====
[2019-08-27 06:41:56,223] - [train.py line:61] :    == step: [100/391], train loss: 2.152 | train acc: 41.820% | lr: 0.100000
[2019-08-27 06:42:16,981] - [train.py line:61] :    == step: [200/391], train loss: 2.143 | train acc: 41.867% | lr: 0.100000
[2019-08-27 06:42:38,107] - [train.py line:61] :    == step: [300/391], train loss: 2.128 | train acc: 42.409% | lr: 0.100000
[2019-08-27 06:42:57,177] - [train.py line:64] :    == cost time: 81.9323s
[2019-08-27 06:42:57,179] - [train.py line:80] : ======validate =====
[2019-08-27 06:43:01,708] - [train.py line:91] : corret:3669total10000
[2019-08-27 06:43:01,708] - [train.py line:93] :    == test loss: 2.505 | test acc: 36.690%
[2019-08-27 06:43:01,768] - [train.py line:36] : ====Epoch:[5/300]====
[2019-08-27 06:43:23,229] - [train.py line:61] :    == step: [100/391], train loss: 1.955 | train acc: 46.594% | lr: 0.100000
[2019-08-27 06:43:44,312] - [train.py line:61] :    == step: [200/391], train loss: 1.941 | train acc: 46.641% | lr: 0.100000
[2019-08-27 06:44:05,901] - [train.py line:61] :    == step: [300/391], train loss: 1.934 | train acc: 46.831% | lr: 0.100000
[2019-08-27 06:44:25,152] - [train.py line:64] :    == cost time: 83.3853s
[2019-08-27 06:44:25,154] - [train.py line:36] : ====Epoch:[6/300]====
[2019-08-27 06:44:46,447] - [train.py line:61] :    == step: [100/391], train loss: 1.780 | train acc: 50.852% | lr: 0.100000
[2019-08-27 06:45:07,551] - [train.py line:61] :    == step: [200/391], train loss: 1.792 | train acc: 50.438% | lr: 0.100000
[2019-08-27 06:45:28,785] - [train.py line:61] :    == step: [300/391], train loss: 1.783 | train acc: 50.534% | lr: 0.100000
[2019-08-27 06:45:48,029] - [train.py line:64] :    == cost time: 82.8760s
[2019-08-27 06:45:48,031] - [train.py line:80] : ======validate =====
[2019-08-27 06:45:52,648] - [train.py line:91] : corret:4541total10000
[2019-08-27 06:45:52,648] - [train.py line:93] :    == test loss: 2.046 | test acc: 45.410%
[2019-08-27 06:45:52,701] - [train.py line:36] : ====Epoch:[7/300]====
[2019-08-27 06:46:14,101] - [train.py line:61] :    == step: [100/391], train loss: 1.649 | train acc: 52.969% | lr: 0.100000
[2019-08-27 06:46:35,328] - [train.py line:61] :    == step: [200/391], train loss: 1.669 | train acc: 53.012% | lr: 0.100000
[2019-08-27 06:46:56,305] - [train.py line:61] :    == step: [300/391], train loss: 1.676 | train acc: 52.859% | lr: 0.100000
[2019-08-27 06:47:16,715] - [train.py line:64] :    == cost time: 84.0149s
[2019-08-27 06:47:16,717] - [train.py line:36] : ====Epoch:[8/300]====
[2019-08-27 06:47:38,984] - [train.py line:61] :    == step: [100/391], train loss: 1.588 | train acc: 55.055% | lr: 0.100000
[2019-08-27 06:48:00,983] - [train.py line:61] :    == step: [200/391], train loss: 1.596 | train acc: 54.934% | lr: 0.100000
[2019-08-27 06:48:23,100] - [train.py line:61] :    == step: [300/391], train loss: 1.597 | train acc: 54.893% | lr: 0.100000
[2019-08-27 06:48:42,488] - [train.py line:64] :    == cost time: 85.7717s
[2019-08-27 06:48:42,490] - [train.py line:80] : ======validate =====
[2019-08-27 06:48:47,023] - [train.py line:91] : corret:4967total10000
[2019-08-27 06:48:47,023] - [train.py line:93] :    == test loss: 1.841 | test acc: 49.670%
[2019-08-27 06:48:47,089] - [train.py line:36] : ====Epoch:[9/300]====
[2019-08-27 06:49:08,251] - [train.py line:61] :    == step: [100/391], train loss: 1.502 | train acc: 57.617% | lr: 0.100000
[2019-08-27 06:49:29,575] - [train.py line:61] :    == step: [200/391], train loss: 1.534 | train acc: 56.828% | lr: 0.100000
[2019-08-27 06:49:50,563] - [train.py line:61] :    == step: [300/391], train loss: 1.537 | train acc: 56.719% | lr: 0.100000
[2019-08-27 06:50:09,592] - [train.py line:64] :    == cost time: 82.5068s
[2019-08-27 06:50:09,594] - [train.py line:36] : ====Epoch:[10/300]====
[2019-08-27 06:50:30,710] - [train.py line:61] :    == step: [100/391], train loss: 1.445 | train acc: 58.969% | lr: 0.100000
[2019-08-27 06:50:52,027] - [train.py line:61] :    == step: [200/391], train loss: 1.469 | train acc: 58.418% | lr: 0.100000
[2019-08-27 06:51:13,998] - [train.py line:61] :    == step: [300/391], train loss: 1.480 | train acc: 58.065% | lr: 0.100000
[2019-08-27 06:51:33,233] - [train.py line:64] :    == cost time: 83.6395s
[2019-08-27 06:51:33,234] - [train.py line:80] : ======validate =====
[2019-08-27 06:51:37,825] - [train.py line:91] : corret:5230total10000
[2019-08-27 06:51:37,825] - [train.py line:93] :    == test loss: 1.732 | test acc: 52.300%
[2019-08-27 06:51:37,885] - [train.py line:36] : ====Epoch:[11/300]====
[2019-08-27 06:51:59,142] - [train.py line:61] :    == step: [100/391], train loss: 1.434 | train acc: 58.820% | lr: 0.100000
[2019-08-27 06:52:20,374] - [train.py line:61] :    == step: [200/391], train loss: 1.446 | train acc: 58.758% | lr: 0.100000
[2019-08-27 06:52:41,296] - [train.py line:61] :    == step: [300/391], train loss: 1.455 | train acc: 58.513% | lr: 0.100000
[2019-08-27 06:53:00,314] - [train.py line:64] :    == cost time: 82.4306s
[2019-08-27 06:53:00,316] - [train.py line:36] : ====Epoch:[12/300]====
[2019-08-27 06:53:21,386] - [train.py line:61] :    == step: [100/391], train loss: 1.383 | train acc: 60.688% | lr: 0.100000
[2019-08-27 06:53:42,323] - [train.py line:61] :    == step: [200/391], train loss: 1.402 | train acc: 60.320% | lr: 0.100000
[2019-08-27 06:54:03,548] - [train.py line:61] :    == step: [300/391], train loss: 1.420 | train acc: 59.630% | lr: 0.100000
[2019-08-27 06:54:22,804] - [train.py line:64] :    == cost time: 82.4889s
[2019-08-27 06:54:22,806] - [train.py line:80] : ======validate =====
[2019-08-27 06:54:27,581] - [train.py line:91] : corret:5358total10000
[2019-08-27 06:54:27,581] - [train.py line:93] :    == test loss: 1.676 | test acc: 53.580%
[2019-08-27 06:54:27,643] - [train.py line:36] : ====Epoch:[13/300]====
[2019-08-27 06:54:49,024] - [train.py line:61] :    == step: [100/391], train loss: 1.366 | train acc: 61.172% | lr: 0.100000
[2019-08-27 06:55:10,109] - [train.py line:61] :    == step: [200/391], train loss: 1.372 | train acc: 60.777% | lr: 0.100000
[2019-08-27 06:55:31,090] - [train.py line:61] :    == step: [300/391], train loss: 1.384 | train acc: 60.495% | lr: 0.100000
[2019-08-27 06:55:50,305] - [train.py line:64] :    == cost time: 82.6627s
[2019-08-27 06:55:50,306] - [train.py line:36] : ====Epoch:[14/300]====
[2019-08-27 06:56:11,540] - [train.py line:61] :    == step: [100/391], train loss: 1.323 | train acc: 62.109% | lr: 0.100000
[2019-08-27 06:56:32,515] - [train.py line:61] :    == step: [200/391], train loss: 1.350 | train acc: 61.309% | lr: 0.100000
[2019-08-27 06:56:53,591] - [train.py line:61] :    == step: [300/391], train loss: 1.357 | train acc: 61.086% | lr: 0.100000
[2019-08-27 06:57:13,220] - [train.py line:64] :    == cost time: 82.9150s
[2019-08-27 06:57:13,222] - [train.py line:80] : ======validate =====
[2019-08-27 06:57:17,874] - [train.py line:91] : corret:5196total10000
[2019-08-27 06:57:17,874] - [train.py line:93] :    == test loss: 1.761 | test acc: 51.960%
[2019-08-27 06:57:17,917] - [train.py line:36] : ====Epoch:[15/300]====
[2019-08-27 06:57:39,340] - [train.py line:61] :    == step: [100/391], train loss: 1.305 | train acc: 62.266% | lr: 0.100000
[2019-08-27 06:58:00,362] - [train.py line:61] :    == step: [200/391], train loss: 1.330 | train acc: 61.785% | lr: 0.100000
[2019-08-27 06:58:21,457] - [train.py line:61] :    == step: [300/391], train loss: 1.326 | train acc: 61.958% | lr: 0.100000
[2019-08-27 06:58:40,542] - [train.py line:64] :    == cost time: 82.6253s
[2019-08-27 06:58:40,543] - [train.py line:36] : ====Epoch:[16/300]====
[2019-08-27 06:59:01,745] - [train.py line:61] :    == step: [100/391], train loss: 1.311 | train acc: 62.570% | lr: 0.100000
[2019-08-27 06:59:23,117] - [train.py line:61] :    == step: [200/391], train loss: 1.316 | train acc: 62.402% | lr: 0.100000
[2019-08-27 06:59:44,256] - [train.py line:61] :    == step: [300/391], train loss: 1.313 | train acc: 62.357% | lr: 0.100000
[2019-08-27 07:00:03,368] - [train.py line:64] :    == cost time: 82.8255s
[2019-08-27 07:00:03,370] - [train.py line:80] : ======validate =====
[2019-08-27 07:00:07,990] - [train.py line:91] : corret:5387total10000
[2019-08-27 07:00:07,991] - [train.py line:93] :    == test loss: 1.676 | test acc: 53.870%
[2019-08-27 07:00:08,050] - [train.py line:36] : ====Epoch:[17/300]====
[2019-08-27 07:00:29,326] - [train.py line:61] :    == step: [100/391], train loss: 1.256 | train acc: 63.484% | lr: 0.100000
